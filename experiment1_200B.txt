creating the disk on the stack for records, index
Size: 350000000 - blocksize: 200 - 0x2a3d074f040 -> 0x2a3e55183c0
Size: 150000000 - blocksize: 200 - 0x2a3e552b040 -> 0x2a3ee4381c0
Max keys for a B+ tree node: 9
Number of record blocks accessed in search operation reset to: 0
Number of index blocks accessed in search operation reset to: 0
Reading in data ... 

Writing record: tt0000001
blocksallocated: 0 curblocksizeused + sizeRequired = 20 > 200
blockavailable: 750000
blocksallocated * blocksize: 0 - poolptr + blocksallocated * blocksize: 0x2a3e552b040
blockptr was: 0
blockptr: 0x2a3e552b040
blocksallocated: 1 blocksavailable: 749999 blocksizeused: 200 curblocksizeused: 0
offset: 0
curblocksizeused was: 0 + 20
curblocksizeused: 20
actualsizeused was: 0 + 20
actualsizeused: 20
recordAddress: 0x2a3e552b040 - 0
diskaddress: 0x2a3e552b040 - 0
Writing src loc: 0xe51f3ff760 -> 0xe51f3ff774 : 20
Writing dst loc: 0x2a3e552b040 - 0x2a3e552b040 -> 0x2a3e552b054 : 20 - 0
Inserting record: tt0000001 to bptree 
Inserting record 1645 - 0x2a3e552b040 + 0 = 0x2a3e552b040
No root exists for 1645 - 0x2a3e552b040 + 0 = 0x2a3e552b040
Create LLNode to handle duplicates: 9
Writing LLNode - 0x2a3d0583580 + 200 = 0x2a3d0583648
blocksallocated: 0 curblocksizeused + sizeRequired = 200 > 200
blockavailable: 1750000
blocksallocated * blocksize: 0 - poolptr + blocksallocated * blocksize: 0x2a3d074f040
blockptr was: 0
blockptr: 0x2a3d074f040
blocksallocated: 1 blocksavailable: 1749999 blocksizeused: 200 curblocksizeused: 0
offset: 0
curblocksizeused was: 0 + 200
curblocksizeused: 200
actualsizeused was: 0 + 200
actualsizeused: 200
recordAddress: 0x2a3d074f040 - 0
diskaddress: 0x2a3d074f040 - 0
Writing src loc: 0x2a3d0583580 -> 0x2a3d0583648 : 200
Writing dst loc: 0x2a3d074f040 - 0x2a3d074f040 -> 0x2a3d074f108 : 200 - 0
Wrote LLNode - 0x2a3d074f040 + 0 = 0x2a3d074f040
Creating new BPNode of size 9
LLNodeAddress: 0x2a3d074f040
Created new root BPNode at 0x2a3d05837c0
Writing root BPNode to disk
blocksallocated: 1 curblocksizeused + sizeRequired = 400 > 200
blockavailable: 1749999
blocksallocated * blocksize: 200 - poolptr + blocksallocated * blocksize: 0x2a3d074f108
blockptr was: 0x2a3d074f040
blockptr: 0x2a3d074f108
blocksallocated: 2 blocksavailable: 1749998 blocksizeused: 400 curblocksizeused: 0
offset: 0
curblocksizeused was: 0 + 200
curblocksizeused: 200
actualsizeused was: 200 + 200
actualsizeused: 400
recordAddress: 0x2a3d074f108 - 0
diskaddress: 0x2a3d074f108 - 0
Writing src loc: 0x2a3d05837c0 -> 0x2a3d0583888 : 200
Writing dst loc: 0x2a3d074f108 - 0x2a3d074f108 -> 0x2a3d074f1d0 : 200 - 0
Wrote root BPNode to disk 0x2a3d074f108
Inserted record tt0000001 at block address: 0xe51f3ff750 and offset 0xe51f3ff758

Writing record: tt0000002
blocksallocated: 1 curblocksizeused + sizeRequired = 40 > 200
offset: 20
curblocksizeused was: 20 + 20
curblocksizeused: 40
actualsizeused was: 20 + 20
actualsizeused: 40
recordAddress: 0x2a3e552b040 - 20
diskaddress: 0x2a3e552b040 - 20
Writing src loc: 0xe51f3ff760 -> 0xe51f3ff774 : 20
Writing dst loc: 0x2a3e552b040 - 0x2a3e552b054 -> 0x2a3e552b068 : 20 - 20
Inserting record: tt0000002 to bptree 
Inserting record 198 - 0x2a3e552b040 + 20 = 0x2a3e552b054
Root exists for key 198 - 0x2a3e552b040 + 20 = 0x2a3e552b054
Cursor: 0x2a3d05837c0
Parent: 0xe51f3ff550
parentDiskAddress: 0x2a3d074f108
cursorDiskAddress: 0x2a3d074f108
Started going to leaf node.
Reached leaf node
Comparing: 1 < 9
Checking for duplicates 1645 == 198
cursor->numKeys: 1
next: 0 - 0
Shifting right: 1 > 0
Inserting key to node 0 : 198
Create LLNode to handle duplicates: 9
Writing LLNode - 0x2a3d0583940 + 200 = 0x2a3d0583a08
blocksallocated: 2 curblocksizeused + sizeRequired = 400 > 200
blockavailable: 1749998
blocksallocated * blocksize: 400 - poolptr + blocksallocated * blocksize: 0x2a3d074f1d0
blockptr was: 0x2a3d074f108
blockptr: 0x2a3d074f1d0
blocksallocated: 3 blocksavailable: 1749997 blocksizeused: 600 curblocksizeused: 0
offset: 0
curblocksizeused was: 0 + 200
curblocksizeused: 200
actualsizeused was: 400 + 200
actualsizeused: 600
recordAddress: 0x2a3d074f1d0 - 0
diskaddress: 0x2a3d074f1d0 - 0
Writing src loc: 0x2a3d0583940 -> 0x2a3d0583a08 : 200
Writing dst loc: 0x2a3d074f1d0 - 0x2a3d074f1d0 -> 0x2a3d074f298 : 200 - 0
Wrote LLNode - 0x2a3d074f1d0 + 0 = 0x2a3d074f1d0
Inserted record tt0000002 at block address: 0xe51f3ff750 and offset 0xe51f3ff758

Writing record: tt0000003
blocksallocated: 1 curblocksizeused + sizeRequired = 60 > 200
offset: 40
curblocksizeused was: 40 + 20
curblocksizeused: 60
actualsizeused was: 40 + 20
actualsizeused: 60
recordAddress: 0x2a3e552b040 - 40
diskaddress: 0x2a3e552b040 - 40
Writing src loc: 0xe51f3ff760 -> 0xe51f3ff774 : 20
Writing dst loc: 0x2a3e552b040 - 0x2a3e552b068 -> 0x2a3e552b07c : 20 - 40
Inserting record: tt0000003 to bptree 
Inserting record 1342 - 0x2a3e552b040 + 40 = 0x2a3e552b068
Root exists for key 1342 - 0x2a3e552b040 + 40 = 0x2a3e552b068
Cursor: 0x2a3d05837c0
Parent: 0xe51f3ff550
parentDiskAddress: 0x2a3d074f108
cursorDiskAddress: 0x2a3d074f108
Started going to leaf node.
Reached leaf node
Comparing: 2 < 9
Search left to right: 1342 > 198 & 0 < 2
Checking for duplicates 1645 == 1342
cursor->numKeys: 2
next: 0 - 0
Shifting right: 2 > 1
Inserting key to node 1 : 1342
Create LLNode to handle duplicates: 9
Writing LLNode - 0x2a3d0583ac0 + 200 = 0x2a3d0583b88
blocksallocated: 3 curblocksizeused + sizeRequired = 400 > 200
blockavailable: 1749997
blocksallocated * blocksize: 600 - poolptr + blocksallocated * blocksize: 0x2a3d074f298
blockptr was: 0x2a3d074f1d0
blockptr: 0x2a3d074f298
blocksallocated: 4 blocksavailable: 1749996 blocksizeused: 800 curblocksizeused: 0
offset: 0
curblocksizeused was: 0 + 200
curblocksizeused: 200
actualsizeused was: 600 + 200
actualsizeused: 800
recordAddress: 0x2a3d074f298 - 0
diskaddress: 0x2a3d074f298 - 0
Writing src loc: 0x2a3d0583ac0 -> 0x2a3d0583b88 : 200
Writing dst loc: 0x2a3d074f298 - 0x2a3d074f298 -> 0x2a3d074f360 : 200 - 0
Wrote LLNode - 0x2a3d074f298 + 0 = 0x2a3d074f298
Inserted record tt0000003 at block address: 0xe51f3ff750 and offset 0xe51f3ff758

Writing record: tt0000004
blocksallocated: 1 curblocksizeused + sizeRequired = 80 > 200
offset: 60
curblocksizeused was: 60 + 20
curblocksizeused: 80
actualsizeused was: 60 + 20
actualsizeused: 80
recordAddress: 0x2a3e552b040 - 60
diskaddress: 0x2a3e552b040 - 60
Writing src loc: 0xe51f3ff760 -> 0xe51f3ff774 : 20
Writing dst loc: 0x2a3e552b040 - 0x2a3e552b07c -> 0x2a3e552b090 : 20 - 60
Inserting record: tt0000004 to bptree 
Inserting record 120 - 0x2a3e552b040 + 60 = 0x2a3e552b07c
Root exists for key 120 - 0x2a3e552b040 + 60 = 0x2a3e552b07c
Cursor: 0x2a3d05837c0
Parent: 0xe51f3ff550
parentDiskAddress: 0x2a3d074f108
cursorDiskAddress: 0x2a3d074f108
Started going to leaf node.
Reached leaf node
Comparing: 3 < 9
Checking for duplicates 198 == 120
cursor->numKeys: 3
next: 0 - 0
Shifting right: 3 > 0
Shifting right: 2 > 0
Shifting right: 1 > 0
Inserting key to node 0 : 120
Create LLNode to handle duplicates: 9
Writing LLNode - 0x2a3d0583c40 + 200 = 0x2a3d0583d08
blocksallocated: 4 curblocksizeused + sizeRequired = 400 > 200
blockavailable: 1749996
blocksallocated * blocksize: 800 - poolptr + blocksallocated * blocksize: 0x2a3d074f360
blockptr was: 0x2a3d074f298
blockptr: 0x2a3d074f360
blocksallocated: 5 blocksavailable: 1749995 blocksizeused: 1000 curblocksizeused: 0
offset: 0
curblocksizeused was: 0 + 200
curblocksizeused: 200
actualsizeused was: 800 + 200
actualsizeused: 1000
recordAddress: 0x2a3d074f360 - 0
diskaddress: 0x2a3d074f360 - 0
Writing src loc: 0x2a3d0583c40 -> 0x2a3d0583d08 : 200
Writing dst loc: 0x2a3d074f360 - 0x2a3d074f360 -> 0x2a3d074f428 : 200 - 0
Wrote LLNode - 0x2a3d074f360 + 0 = 0x2a3d074f360
Inserted record tt0000004 at block address: 0xe51f3ff750 and offset 0xe51f3ff758

Writing record: tt0000005
blocksallocated: 1 curblocksizeused + sizeRequired = 100 > 200
offset: 80
curblocksizeused was: 80 + 20
curblocksizeused: 100
actualsizeused was: 80 + 20
actualsizeused: 100
recordAddress: 0x2a3e552b040 - 80
diskaddress: 0x2a3e552b040 - 80
Writing src loc: 0xe51f3ff760 -> 0xe51f3ff774 : 20
Writing dst loc: 0x2a3e552b040 - 0x2a3e552b090 -> 0x2a3e552b0a4 : 20 - 80
Inserting record: tt0000005 to bptree 
Inserting record 2127 - 0x2a3e552b040 + 80 = 0x2a3e552b090
Root exists for key 2127 - 0x2a3e552b040 + 80 = 0x2a3e552b090
Cursor: 0x2a3d05837c0
Parent: 0xe51f3ff550
parentDiskAddress: 0x2a3d074f108
cursorDiskAddress: 0x2a3d074f108
Started going to leaf node.
Reached leaf node
Comparing: 4 < 9
Search left to right: 2127 > 120 & 0 < 4
Search left to right: 2127 > 198 & 1 < 4
Search left to right: 2127 > 1342 & 2 < 4
Search left to right: 2127 > 1645 & 3 < 4
Checking for duplicates -1163005939 == 2127
cursor->numKeys: 4
next: 0 - 0
Inserting key to node 4 : 2127
Create LLNode to handle duplicates: 9
Writing LLNode - 0x2a3d0583dc0 + 200 = 0x2a3d0583e88
blocksallocated: 5 curblocksizeused + sizeRequired = 400 > 200
blockavailable: 1749995
blocksallocated * blocksize: 1000 - poolptr + blocksallocated * blocksize: 0x2a3d074f428
blockptr was: 0x2a3d074f360
blockptr: 0x2a3d074f428
blocksallocated: 6 blocksavailable: 1749994 blocksizeused: 1200 curblocksizeused: 0
offset: 0
curblocksizeused was: 0 + 200
curblocksizeused: 200
actualsizeused was: 1000 + 200
actualsizeused: 1200
recordAddress: 0x2a3d074f428 - 0
diskaddress: 0x2a3d074f428 - 0
Writing src loc: 0x2a3d0583dc0 -> 0x2a3d0583e88 : 200
Writing dst loc: 0x2a3d074f428 - 0x2a3d074f428 -> 0x2a3d074f4f0 : 200 - 0
Wrote LLNode - 0x2a3d074f428 + 0 = 0x2a3d074f428
Inserted record tt0000005 at block address: 0xe51f3ff750 and offset 0xe51f3ff758

Writing record: tt0000006
blocksallocated: 1 curblocksizeused + sizeRequired = 120 > 200
offset: 100
curblocksizeused was: 100 + 20
curblocksizeused: 120
actualsizeused was: 100 + 20
actualsizeused: 120
recordAddress: 0x2a3e552b040 - 100
diskaddress: 0x2a3e552b040 - 100
Writing src loc: 0xe51f3ff760 -> 0xe51f3ff774 : 20
Writing dst loc: 0x2a3e552b040 - 0x2a3e552b0a4 -> 0x2a3e552b0b8 : 20 - 100
Inserting record: tt0000006 to bptree 
Inserting record 115 - 0x2a3e552b040 + 100 = 0x2a3e552b0a4
Root exists for key 115 - 0x2a3e552b040 + 100 = 0x2a3e552b0a4
Cursor: 0x2a3d05837c0
Parent: 0xe51f3ff550
parentDiskAddress: 0x2a3d074f108
cursorDiskAddress: 0x2a3d074f108
Started going to leaf node.
Reached leaf node
Comparing: 5 < 9
Checking for duplicates 120 == 115
cursor->numKeys: 5
next: 0 - 0
Shifting right: 5 > 0
Shifting right: 4 > 0
Shifting right: 3 > 0
Shifting right: 2 > 0
Shifting right: 1 > 0
Inserting key to node 0 : 115
Create LLNode to handle duplicates: 9
Writing LLNode - 0x2a3d0583f40 + 200 = 0x2a3d0584008
blocksallocated: 6 curblocksizeused + sizeRequired = 400 > 200
blockavailable: 1749994
blocksallocated * blocksize: 1200 - poolptr + blocksallocated * blocksize: 0x2a3d074f4f0
blockptr was: 0x2a3d074f428
blockptr: 0x2a3d074f4f0
blocksallocated: 7 blocksavailable: 1749993 blocksizeused: 1400 curblocksizeused: 0
offset: 0
curblocksizeused was: 0 + 200
curblocksizeused: 200
actualsizeused was: 1200 + 200
actualsizeused: 1400
recordAddress: 0x2a3d074f4f0 - 0
diskaddress: 0x2a3d074f4f0 - 0
Writing src loc: 0x2a3d0583f40 -> 0x2a3d0584008 : 200
Writing dst loc: 0x2a3d074f4f0 - 0x2a3d074f4f0 -> 0x2a3d074f5b8 : 200 - 0
