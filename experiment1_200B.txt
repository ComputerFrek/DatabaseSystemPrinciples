creating the disk on the stack for records, index
Size: 350000000 - blocksize: 200 - 0x232156dd040 -> 0x2322a4a63c0
Size: 150000000 - blocksize: 200 - 0x2322a4b0040 -> 0x232333bd1c0
Max keys for a B+ tree node: 8
Number of record blocks accessed in search operation reset to: 0
Number of index blocks accessed in search operation reset to: 0
Reading in data ... 

Writing record: tt0000001
blocksallocated: 0 curblocksizeused + sizeRequired = 20 > 200
blockavailable: 750000
blocksallocated * blocksize: 0 - poolptr + blocksallocated * blocksize: 0x2322a4b0040
blockptr was: 0
blockptr: 0x2322a4b0040
blocksallocated: 1 blocksavailable: 749999 blocksizeused: 200 curblocksizeused: 0
offset: 0
curblocksizeused was: 0 + 20
curblocksizeused: 20
actualsizeused was: 0 + 20
actualsizeused: 20
recordAddress: 0x2322a4b0040 - 0
diskaddress: 0x2322a4b0040 - 0
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0040 - 0x2322a4b0040 -> 0x2322a4b0054 : 0 - 20
Inserting record: tt0000001 to bptree 
Inserting record 1645 - 0x2322a4b0040 + 0 = 0x2322a4b0040
No root exists for 1645 - 0x2322a4b0040 + 0 = 0x2322a4b0040
Creating new BPNode of size 8
Created new root BPNode at 0x232155e3580
Inserted record tt0000001 at block address: 0x2322a4b0040 -> 0x2322a4b0040

Writing record: tt0000002
blocksallocated: 1 curblocksizeused + sizeRequired = 40 > 200
offset: 20
curblocksizeused was: 20 + 20
curblocksizeused: 40
actualsizeused was: 20 + 20
actualsizeused: 40
recordAddress: 0x2322a4b0040 - 20
diskaddress: 0x2322a4b0040 - 20
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0040 - 0x2322a4b0054 -> 0x2322a4b0068 : 20 - 20
Inserting record: tt0000002 to bptree 
Inserting record 198 - 0x2322a4b0040 + 20 = 0x2322a4b0054
Root exists for key 198 - 0x2322a4b0040 + 20 = 0x2322a4b0054
address: 0x2322a4b0040 + 20
Cursor: 0x232155e3580
Parent: 0
Started going to leaf node
Reached leaf node
Comparing: 1 < 8
Checking for duplicates 1645 == 198
cursor->numKeys: 1
next: 0 - 0
Shifting right: 1 > 0
Inserting key to node 0 : 198
cursor->numKeys was: 1
cursor->numKeys: 2
Inserted record tt0000002 at block address: 0x2322a4b0040 -> 0x2322a4b0054

Writing record: tt0000003
blocksallocated: 1 curblocksizeused + sizeRequired = 60 > 200
offset: 40
curblocksizeused was: 40 + 20
curblocksizeused: 60
actualsizeused was: 40 + 20
actualsizeused: 60
recordAddress: 0x2322a4b0040 - 40
diskaddress: 0x2322a4b0040 - 40
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0040 - 0x2322a4b0068 -> 0x2322a4b007c : 40 - 20
Inserting record: tt0000003 to bptree 
Inserting record 1342 - 0x2322a4b0040 + 40 = 0x2322a4b0068
Root exists for key 1342 - 0x2322a4b0040 + 40 = 0x2322a4b0068
address: 0x2322a4b0040 + 40
Cursor: 0x232155e3580
Parent: 0
Started going to leaf node
Reached leaf node
Comparing: 2 < 8
Search left to right: 1342 > 198 & 0 < 2
Checking for duplicates 1645 == 1342
cursor->numKeys: 2
next: 0 - 0
Shifting right: 2 > 1
Inserting key to node 1 : 1342
cursor->numKeys was: 2
cursor->numKeys: 3
Inserted record tt0000003 at block address: 0x2322a4b0040 -> 0x2322a4b0068

Writing record: tt0000004
blocksallocated: 1 curblocksizeused + sizeRequired = 80 > 200
offset: 60
curblocksizeused was: 60 + 20
curblocksizeused: 80
actualsizeused was: 60 + 20
actualsizeused: 80
recordAddress: 0x2322a4b0040 - 60
diskaddress: 0x2322a4b0040 - 60
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0040 - 0x2322a4b007c -> 0x2322a4b0090 : 60 - 20
Inserting record: tt0000004 to bptree 
Inserting record 120 - 0x2322a4b0040 + 60 = 0x2322a4b007c
Root exists for key 120 - 0x2322a4b0040 + 60 = 0x2322a4b007c
address: 0x2322a4b0040 + 60
Cursor: 0x232155e3580
Parent: 0
Started going to leaf node
Reached leaf node
Comparing: 3 < 8
Checking for duplicates 198 == 120
cursor->numKeys: 3
next: 0 - 0
Shifting right: 3 > 2
Shifting right: 2 > 1
Shifting right: 1 > 0
Inserting key to node 0 : 120
cursor->numKeys was: 3
cursor->numKeys: 4
Inserted record tt0000004 at block address: 0x2322a4b0040 -> 0x2322a4b007c

Writing record: tt0000005
blocksallocated: 1 curblocksizeused + sizeRequired = 100 > 200
offset: 80
curblocksizeused was: 80 + 20
curblocksizeused: 100
actualsizeused was: 80 + 20
actualsizeused: 100
recordAddress: 0x2322a4b0040 - 80
diskaddress: 0x2322a4b0040 - 80
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0040 - 0x2322a4b0090 -> 0x2322a4b00a4 : 80 - 20
Inserting record: tt0000005 to bptree 
Inserting record 2127 - 0x2322a4b0040 + 80 = 0x2322a4b0090
Root exists for key 2127 - 0x2322a4b0040 + 80 = 0x2322a4b0090
address: 0x2322a4b0040 + 80
Cursor: 0x232155e3580
Parent: 0
Started going to leaf node
Reached leaf node
Comparing: 4 < 8
Search left to right: 2127 > 120 & 0 < 4
Search left to right: 2127 > 198 & 1 < 4
Search left to right: 2127 > 1342 & 2 < 4
Search left to right: 2127 > 1645 & 3 < 4
Checking for duplicates 0 == 2127
cursor->numKeys: 4
next: 0 - 0
Inserting key to node 4 : 2127
cursor->numKeys was: 4
cursor->numKeys: 5
Inserted record tt0000005 at block address: 0x2322a4b0040 -> 0x2322a4b0090

Writing record: tt0000006
blocksallocated: 1 curblocksizeused + sizeRequired = 120 > 200
offset: 100
curblocksizeused was: 100 + 20
curblocksizeused: 120
actualsizeused was: 100 + 20
actualsizeused: 120
recordAddress: 0x2322a4b0040 - 100
diskaddress: 0x2322a4b0040 - 100
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0040 - 0x2322a4b00a4 -> 0x2322a4b00b8 : 100 - 20
Inserting record: tt0000006 to bptree 
Inserting record 115 - 0x2322a4b0040 + 100 = 0x2322a4b00a4
Root exists for key 115 - 0x2322a4b0040 + 100 = 0x2322a4b00a4
address: 0x2322a4b0040 + 100
Cursor: 0x232155e3580
Parent: 0
Started going to leaf node
Reached leaf node
Comparing: 5 < 8
Checking for duplicates 120 == 115
cursor->numKeys: 5
next: 0 - 0
Shifting right: 5 > 4
Shifting right: 4 > 3
Shifting right: 3 > 2
Shifting right: 2 > 1
Shifting right: 1 > 0
Inserting key to node 0 : 115
cursor->numKeys was: 5
cursor->numKeys: 6
Inserted record tt0000006 at block address: 0x2322a4b0040 -> 0x2322a4b00a4

Writing record: tt0000007
blocksallocated: 1 curblocksizeused + sizeRequired = 140 > 200
offset: 120
curblocksizeused was: 120 + 20
curblocksizeused: 140
actualsizeused was: 120 + 20
actualsizeused: 140
recordAddress: 0x2322a4b0040 - 120
diskaddress: 0x2322a4b0040 - 120
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0040 - 0x2322a4b00b8 -> 0x2322a4b00cc : 120 - 20
Inserting record: tt0000007 to bptree 
Inserting record 652 - 0x2322a4b0040 + 120 = 0x2322a4b00b8
Root exists for key 652 - 0x2322a4b0040 + 120 = 0x2322a4b00b8
address: 0x2322a4b0040 + 120
Cursor: 0x232155e3580
Parent: 0
Started going to leaf node
Reached leaf node
Comparing: 6 < 8
Search left to right: 652 > 115 & 0 < 6
Search left to right: 652 > 120 & 1 < 6
Search left to right: 652 > 198 & 2 < 6
Checking for duplicates 1342 == 652
cursor->numKeys: 6
next: 0 - 0
Shifting right: 6 > 5
Shifting right: 5 > 4
Shifting right: 4 > 3
Inserting key to node 3 : 652
cursor->numKeys was: 6
cursor->numKeys: 7
Inserted record tt0000007 at block address: 0x2322a4b0040 -> 0x2322a4b00b8

Writing record: tt0000008
blocksallocated: 1 curblocksizeused + sizeRequired = 160 > 200
offset: 140
curblocksizeused was: 140 + 20
curblocksizeused: 160
actualsizeused was: 140 + 20
actualsizeused: 160
recordAddress: 0x2322a4b0040 - 140
diskaddress: 0x2322a4b0040 - 140
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0040 - 0x2322a4b00cc -> 0x2322a4b00e0 : 140 - 20
Inserting record: tt0000008 to bptree 
Inserting record 1807 - 0x2322a4b0040 + 140 = 0x2322a4b00cc
Root exists for key 1807 - 0x2322a4b0040 + 140 = 0x2322a4b00cc
address: 0x2322a4b0040 + 140
Cursor: 0x232155e3580
Parent: 0
Started going to leaf node
Reached leaf node
Comparing: 7 < 8
Search left to right: 1807 > 115 & 0 < 7
Search left to right: 1807 > 120 & 1 < 7
Search left to right: 1807 > 198 & 2 < 7
Search left to right: 1807 > 652 & 3 < 7
Search left to right: 1807 > 1342 & 4 < 7
Search left to right: 1807 > 1645 & 5 < 7
Checking for duplicates 2127 == 1807
cursor->numKeys: 7
next: 0 - 0
Shifting right: 7 > 6
Inserting key to node 6 : 1807
cursor->numKeys was: 7
cursor->numKeys: 8
Inserted record tt0000008 at block address: 0x2322a4b0040 -> 0x2322a4b00cc

Writing record: tt0000009
blocksallocated: 1 curblocksizeused + sizeRequired = 180 > 200
offset: 160
curblocksizeused was: 160 + 20
curblocksizeused: 180
actualsizeused was: 160 + 20
actualsizeused: 180
recordAddress: 0x2322a4b0040 - 160
diskaddress: 0x2322a4b0040 - 160
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0040 - 0x2322a4b00e0 -> 0x2322a4b00f4 : 160 - 20
Inserting record: tt0000009 to bptree 
Inserting record 154 - 0x2322a4b0040 + 160 = 0x2322a4b00e0
Root exists for key 154 - 0x2322a4b0040 + 160 = 0x2322a4b00e0
address: 0x2322a4b0040 + 160
Cursor: 0x232155e3580
Parent: 0
Started going to leaf node
Reached leaf node
Comparing: 8 < 8
Creating BPNode of size 8
Created new BPNode at 0x232155e3620
Copied 0 of 8 : 115 - 0x2322a4b0040 + 100
Copied 1 of 8 : 120 - 0x2322a4b0040 + 60
Copied 2 of 8 : 198 - 0x2322a4b0040 + 20
Copied 3 of 8 : 652 - 0x2322a4b0040 + 120
Copied 4 of 8 : 1342 - 0x2322a4b0040 + 40
Copied 5 of 8 : 1645 - 0x2322a4b0040 + 0
Copied 6 of 8 : 1807 - 0x2322a4b0040 + 140
Copied 7 of 8 : 2127 - 0x2322a4b0040 + 80
Search left to right: 154 > 115 & 0 < 8
Search left to right: 154 > 120 & 1 < 8
Shifting right: 8 > 7
Shifting right: 7 > 6
Shifting right: 6 > 5
Shifting right: 5 > 4
Shifting right: 4 > 3
Shifting right: 3 > 2
Inserting key to node 2 : 154
Inserting address to node 2 : 0x2322a4b0040 + 160
newLeaf->isLeaf was: 13
newLeaf->isLeaf: 1
Calc the new keys after split
cursor->numKeys was: 8
newLeaf->numKeys was: 0
cursor->numKeys: 5
newLeaf->numKeys: 4
newLeaf->pointers[4] was: 0 + 0
newLeaf->pointers[4] : 0 + 0
Adding the keyptr back to the nodes
Adding to cursor 0 : 115 - 0x2322a4b0040 + 100
Adding to cursor 1 : 120 - 0x2322a4b0040 + 60
Adding to cursor 2 : 154 - 0x2322a4b0040 + 160
Adding to cursor 3 : 198 - 0x2322a4b0040 + 20
Adding to cursor 4 : 652 - 0x2322a4b0040 + 120
Adding to newLeaf 0 : 1342 - 0x2322a4b0040 + 40
Adding to newLeaf 1 : 1645 - 0x2322a4b0040 + 0
Adding to newLeaf 2 : 1807 - 0x2322a4b0040 + 140
Adding to newLeaf 3 : 2127 - 0x2322a4b0040 + 80
cursor->pointers[5] was: 0x2322a4b0040 + 0
cursor->pointers[5] : 0x232155e3620 + 0
wiping cursor->keys[5] was : 1645
wiping cursor->keys[5] : 0
wiping cursor->keys[6] was : 1807
wiping cursor->keys[6] : 0
wiping cursor->keys[7] was : 2127
wiping cursor->keys[7] : 0
wiping cursor->pointers[6] was : 0x2322a4b0040 + 140
wiping cursor->pointers[6] : 0 + 0
wiping cursor->pointers[7] was : 0x2322a4b0040 + 80
wiping cursor->pointers[7] : 0 + 0
wiping cursor->pointers[8] was : 0 + 0
wiping cursor->pointers[8] : 0 + 0
Creating new root BPNode of size 8
Setting new root key[0] to 1342
newRoot->pointers[0] 0x232155e3580 + 0
newRoot->pointers[1] 0x232155e3620 + 0
root was: 0x232155e3580
root: 0x232155e3920
Inserted record tt0000009 at block address: 0x2322a4b0040 -> 0x2322a4b00e0

Writing record: tt0000010
blocksallocated: 1 curblocksizeused + sizeRequired = 200 > 200
offset: 180
curblocksizeused was: 180 + 20
curblocksizeused: 200
actualsizeused was: 180 + 20
actualsizeused: 200
recordAddress: 0x2322a4b0040 - 180
diskaddress: 0x2322a4b0040 - 180
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0040 - 0x2322a4b00f4 -> 0x2322a4b0108 : 180 - 20
Inserting record: tt0000010 to bptree 
Inserting record 6018 - 0x2322a4b0040 + 180 = 0x2322a4b00f4
Root exists for key 6018 - 0x2322a4b0040 + 180 = 0x2322a4b00f4
address: 0x2322a4b0040 + 180
Cursor: 0x232155e3920
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232155e3920
Cursor: 0x232155e3920
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 1
Level: 0 - Key: 6018 < 1342 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 0
Larger than all other keys in node going to last: 0 == 0
Cursor was: 0x232155e3920
Cursor: 0x232155e3620
Reached leaf node
Comparing: 4 < 8
Search left to right: 6018 > 1342 & 0 < 4
Search left to right: 6018 > 1645 & 1 < 4
Search left to right: 6018 > 1807 & 2 < 4
Search left to right: 6018 > 2127 & 3 < 4
Checking for duplicates 0 == 6018
cursor->numKeys: 4
next: 0 - 0
Inserting key to node 4 : 6018
cursor->numKeys was: 4
cursor->numKeys: 5
Inserted record tt0000010 at block address: 0x2322a4b0040 -> 0x2322a4b00f4

Writing record: tt0000011
blocksallocated: 1 curblocksizeused + sizeRequired = 220 > 200
blockavailable: 749999
blocksallocated * blocksize: 200 - poolptr + blocksallocated * blocksize: 0x2322a4b0108
blockptr was: 0x2322a4b0040
blockptr: 0x2322a4b0108
blocksallocated: 2 blocksavailable: 749998 blocksizeused: 400 curblocksizeused: 0
offset: 0
curblocksizeused was: 0 + 20
curblocksizeused: 20
actualsizeused was: 200 + 20
actualsizeused: 220
recordAddress: 0x2322a4b0108 - 0
diskaddress: 0x2322a4b0108 - 0
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0108 - 0x2322a4b0108 -> 0x2322a4b011c : 0 - 20
Inserting record: tt0000011 to bptree 
Inserting record 262 - 0x2322a4b0108 + 0 = 0x2322a4b0108
Root exists for key 262 - 0x2322a4b0108 + 0 = 0x2322a4b0108
address: 0x2322a4b0108 + 0
Cursor: 0x232155e3920
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232155e3920
Cursor: 0x232155e3920
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 1
Level: 0 - Key: 262 < 1342 :cursor-keys[ 0 ] 
key 262 lesser than 1342
Cursor was: 0x232155e3920
Cursor: 0x232155e3580
Reached leaf node
Comparing: 5 < 8
Search left to right: 262 > 115 & 0 < 5
Search left to right: 262 > 120 & 1 < 5
Search left to right: 262 > 154 & 2 < 5
Search left to right: 262 > 198 & 3 < 5
Checking for duplicates 652 == 262
cursor->numKeys: 5
next: 0x232155e3620 - 0
Shifting right: 5 > 4
Inserting key to node 4 : 262
cursor->numKeys was: 5
cursor->numKeys: 6
Inserted record tt0000011 at block address: 0x2322a4b0108 -> 0x2322a4b0108

Writing record: tt0000012
blocksallocated: 2 curblocksizeused + sizeRequired = 40 > 200
offset: 20
curblocksizeused was: 20 + 20
curblocksizeused: 40
actualsizeused was: 220 + 20
actualsizeused: 240
recordAddress: 0x2322a4b0108 - 20
diskaddress: 0x2322a4b0108 - 20
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0108 - 0x2322a4b011c -> 0x2322a4b0130 : 20 - 20
Inserting record: tt0000012 to bptree 
Inserting record 10287 - 0x2322a4b0108 + 20 = 0x2322a4b011c
Root exists for key 10287 - 0x2322a4b0108 + 20 = 0x2322a4b011c
address: 0x2322a4b0108 + 20
Cursor: 0x232155e3920
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232155e3920
Cursor: 0x232155e3920
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 1
Level: 0 - Key: 10287 < 1342 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 0
Larger than all other keys in node going to last: 0 == 0
Cursor was: 0x232155e3920
Cursor: 0x232155e3620
Reached leaf node
Comparing: 5 < 8
Search left to right: 10287 > 1342 & 0 < 5
Search left to right: 10287 > 1645 & 1 < 5
Search left to right: 10287 > 1807 & 2 < 5
Search left to right: 10287 > 2127 & 3 < 5
Search left to right: 10287 > 6018 & 4 < 5
Checking for duplicates 0 == 10287
cursor->numKeys: 5
next: 0 - 0
Inserting key to node 5 : 10287
cursor->numKeys was: 5
cursor->numKeys: 6
Inserted record tt0000012 at block address: 0x2322a4b0108 -> 0x2322a4b011c

Writing record: tt0000013
blocksallocated: 2 curblocksizeused + sizeRequired = 60 > 200
offset: 40
curblocksizeused was: 40 + 20
curblocksizeused: 60
actualsizeused was: 240 + 20
actualsizeused: 260
recordAddress: 0x2322a4b0108 - 40
diskaddress: 0x2322a4b0108 - 40
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0108 - 0x2322a4b0130 -> 0x2322a4b0144 : 40 - 20
Inserting record: tt0000013 to bptree 
Inserting record 1572 - 0x2322a4b0108 + 40 = 0x2322a4b0130
Root exists for key 1572 - 0x2322a4b0108 + 40 = 0x2322a4b0130
address: 0x2322a4b0108 + 40
Cursor: 0x232155e3920
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232155e3920
Cursor: 0x232155e3920
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 1
Level: 0 - Key: 1572 < 1342 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 0
Larger than all other keys in node going to last: 0 == 0
Cursor was: 0x232155e3920
Cursor: 0x232155e3620
Reached leaf node
Comparing: 6 < 8
Search left to right: 1572 > 1342 & 0 < 6
Checking for duplicates 1645 == 1572
cursor->numKeys: 6
next: 0 - 0
Shifting right: 6 > 5
Shifting right: 5 > 4
Shifting right: 4 > 3
Shifting right: 3 > 2
Shifting right: 2 > 1
Inserting key to node 1 : 1572
cursor->numKeys was: 6
cursor->numKeys: 7
Inserted record tt0000013 at block address: 0x2322a4b0108 -> 0x2322a4b0130

Writing record: tt0000014
blocksallocated: 2 curblocksizeused + sizeRequired = 80 > 200
offset: 60
curblocksizeused was: 60 + 20
curblocksizeused: 80
actualsizeused was: 260 + 20
actualsizeused: 280
recordAddress: 0x2322a4b0108 - 60
diskaddress: 0x2322a4b0108 - 60
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0108 - 0x2322a4b0144 -> 0x2322a4b0158 : 60 - 20
Inserting record: tt0000014 to bptree 
Inserting record 4599 - 0x2322a4b0108 + 60 = 0x2322a4b0144
Root exists for key 4599 - 0x2322a4b0108 + 60 = 0x2322a4b0144
address: 0x2322a4b0108 + 60
Cursor: 0x232155e3920
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232155e3920
Cursor: 0x232155e3920
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 1
Level: 0 - Key: 4599 < 1342 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 0
Larger than all other keys in node going to last: 0 == 0
Cursor was: 0x232155e3920
Cursor: 0x232155e3620
Reached leaf node
Comparing: 7 < 8
Search left to right: 4599 > 1342 & 0 < 7
Search left to right: 4599 > 1572 & 1 < 7
Search left to right: 4599 > 1645 & 2 < 7
Search left to right: 4599 > 1807 & 3 < 7
Search left to right: 4599 > 2127 & 4 < 7
Checking for duplicates 6018 == 4599
cursor->numKeys: 7
next: 0 - 0
Shifting right: 7 > 6
Shifting right: 6 > 5
Inserting key to node 5 : 4599
cursor->numKeys was: 7
cursor->numKeys: 8
Inserted record tt0000014 at block address: 0x2322a4b0108 -> 0x2322a4b0144

Writing record: tt0000015
blocksallocated: 2 curblocksizeused + sizeRequired = 100 > 200
offset: 80
curblocksizeused was: 80 + 20
curblocksizeused: 100
actualsizeused was: 280 + 20
actualsizeused: 300
recordAddress: 0x2322a4b0108 - 80
diskaddress: 0x2322a4b0108 - 80
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0108 - 0x2322a4b0158 -> 0x2322a4b016c : 80 - 20
Inserting record: tt0000015 to bptree 
Inserting record 817 - 0x2322a4b0108 + 80 = 0x2322a4b0158
Root exists for key 817 - 0x2322a4b0108 + 80 = 0x2322a4b0158
address: 0x2322a4b0108 + 80
Cursor: 0x232155e3920
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232155e3920
Cursor: 0x232155e3920
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 1
Level: 0 - Key: 817 < 1342 :cursor-keys[ 0 ] 
key 817 lesser than 1342
Cursor was: 0x232155e3920
Cursor: 0x232155e3580
Reached leaf node
Comparing: 6 < 8
Search left to right: 817 > 115 & 0 < 6
Search left to right: 817 > 120 & 1 < 6
Search left to right: 817 > 154 & 2 < 6
Search left to right: 817 > 198 & 3 < 6
Search left to right: 817 > 262 & 4 < 6
Search left to right: 817 > 652 & 5 < 6
Checking for duplicates 0 == 817
cursor->numKeys: 6
next: 0x232155e3620 - 0
Inserting key to node 6 : 817
cursor->numKeys was: 6
cursor->numKeys: 7
Inserted record tt0000015 at block address: 0x2322a4b0108 -> 0x2322a4b0158

Writing record: tt0000016
blocksallocated: 2 curblocksizeused + sizeRequired = 120 > 200
offset: 100
curblocksizeused was: 100 + 20
curblocksizeused: 120
actualsizeused was: 300 + 20
actualsizeused: 320
recordAddress: 0x2322a4b0108 - 100
diskaddress: 0x2322a4b0108 - 100
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0108 - 0x2322a4b016c -> 0x2322a4b0180 : 100 - 20
Inserting record: tt0000016 to bptree 
Inserting record 1200 - 0x2322a4b0108 + 100 = 0x2322a4b016c
Root exists for key 1200 - 0x2322a4b0108 + 100 = 0x2322a4b016c
address: 0x2322a4b0108 + 100
Cursor: 0x232155e3920
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232155e3920
Cursor: 0x232155e3920
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 1
Level: 0 - Key: 1200 < 1342 :cursor-keys[ 0 ] 
key 1200 lesser than 1342
Cursor was: 0x232155e3920
Cursor: 0x232155e3580
Reached leaf node
Comparing: 7 < 8
Search left to right: 1200 > 115 & 0 < 7
Search left to right: 1200 > 120 & 1 < 7
Search left to right: 1200 > 154 & 2 < 7
Search left to right: 1200 > 198 & 3 < 7
Search left to right: 1200 > 262 & 4 < 7
Search left to right: 1200 > 652 & 5 < 7
Search left to right: 1200 > 817 & 6 < 7
Checking for duplicates 0 == 1200
cursor->numKeys: 7
next: 0x232155e3620 - 0
Inserting key to node 7 : 1200
cursor->numKeys was: 7
cursor->numKeys: 8
Inserted record tt0000016 at block address: 0x2322a4b0108 -> 0x2322a4b016c

Writing record: tt0000017
blocksallocated: 2 curblocksizeused + sizeRequired = 140 > 200
offset: 120
curblocksizeused was: 120 + 20
curblocksizeused: 140
actualsizeused was: 320 + 20
actualsizeused: 340
recordAddress: 0x2322a4b0108 - 120
diskaddress: 0x2322a4b0108 - 120
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0108 - 0x2322a4b0180 -> 0x2322a4b0194 : 120 - 20
Inserting record: tt0000017 to bptree 
Inserting record 241 - 0x2322a4b0108 + 120 = 0x2322a4b0180
Root exists for key 241 - 0x2322a4b0108 + 120 = 0x2322a4b0180
address: 0x2322a4b0108 + 120
Cursor: 0x232155e3920
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232155e3920
Cursor: 0x232155e3920
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 1
Level: 0 - Key: 241 < 1342 :cursor-keys[ 0 ] 
key 241 lesser than 1342
Cursor was: 0x232155e3920
Cursor: 0x232155e3580
Reached leaf node
Comparing: 8 < 8
Creating BPNode of size 8
Created new BPNode at 0x232155e3a80
Copied 0 of 8 : 115 - 0x2322a4b0040 + 100
Copied 1 of 8 : 120 - 0x2322a4b0040 + 60
Copied 2 of 8 : 154 - 0x2322a4b0040 + 160
Copied 3 of 8 : 198 - 0x2322a4b0040 + 20
Copied 4 of 8 : 262 - 0x2322a4b0108 + 0
Copied 5 of 8 : 652 - 0x2322a4b0040 + 120
Copied 6 of 8 : 817 - 0x2322a4b0108 + 80
Copied 7 of 8 : 1200 - 0x2322a4b0108 + 100
Search left to right: 241 > 115 & 0 < 8
Search left to right: 241 > 120 & 1 < 8
Search left to right: 241 > 154 & 2 < 8
Search left to right: 241 > 198 & 3 < 8
Shifting right: 8 > 7
Shifting right: 7 > 6
Shifting right: 6 > 5
Shifting right: 5 > 4
Inserting key to node 4 : 241
Inserting address to node 4 : 0x2322a4b0108 + 120
newLeaf->isLeaf was: 13
newLeaf->isLeaf: 1
Calc the new keys after split
cursor->numKeys was: 8
newLeaf->numKeys was: 0
cursor->numKeys: 5
newLeaf->numKeys: 4
newLeaf->pointers[4] was: 0x232155e3620 + 0
newLeaf->pointers[4] : 0x232155e3620 + 0
Adding the keyptr back to the nodes
Adding to cursor 0 : 115 - 0x2322a4b0040 + 100
Adding to cursor 1 : 120 - 0x2322a4b0040 + 60
Adding to cursor 2 : 154 - 0x2322a4b0040 + 160
Adding to cursor 3 : 198 - 0x2322a4b0040 + 20
Adding to cursor 4 : 241 - 0x2322a4b0108 + 120
Adding to newLeaf 0 : 262 - 0x2322a4b0108 + 0
Adding to newLeaf 1 : 652 - 0x2322a4b0040 + 120
Adding to newLeaf 2 : 817 - 0x2322a4b0108 + 80
Adding to newLeaf 3 : 1200 - 0x2322a4b0108 + 100
cursor->pointers[5] was: 0x2322a4b0040 + 120
cursor->pointers[5] : 0x232155e3a80 + 0
wiping cursor->keys[5] was : 652
wiping cursor->keys[5] : 0
wiping cursor->keys[6] was : 817
wiping cursor->keys[6] : 0
wiping cursor->keys[7] was : 1200
wiping cursor->keys[7] : 0
wiping cursor->pointers[6] was : 0x2322a4b0108 + 80
wiping cursor->pointers[6] : 0 + 0
wiping cursor->pointers[7] was : 0x2322a4b0108 + 100
wiping cursor->pointers[7] : 0 + 0
wiping cursor->pointers[8] was : 0x232155e3620 + 0
wiping cursor->pointers[8] : 0 + 0
Need insert parent in middle: 262
Inserted record tt0000017 at block address: 0x2322a4b0108 -> 0x2322a4b0180

Writing record: tt0000018
blocksallocated: 2 curblocksizeused + sizeRequired = 160 > 200
offset: 140
curblocksizeused was: 140 + 20
curblocksizeused: 160
actualsizeused was: 340 + 20
actualsizeused: 360
recordAddress: 0x2322a4b0108 - 140
diskaddress: 0x2322a4b0108 - 140
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0108 - 0x2322a4b0194 -> 0x2322a4b01a8 : 140 - 20
Inserting record: tt0000018 to bptree 
Inserting record 478 - 0x2322a4b0108 + 140 = 0x2322a4b0194
Root exists for key 478 - 0x2322a4b0108 + 140 = 0x2322a4b0194
address: 0x2322a4b0108 + 140
Cursor: 0x232155e3920
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232155e3920
Cursor: 0x232155e3920
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 2
Level: 0 - Key: 478 < 262 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 1
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 2
Level: 0 - Key: 478 < 1342 :cursor-keys[ 1 ] 
key 478 lesser than 1342
Cursor was: 0x232155e3920
Cursor: 0x232155e3a80
Reached leaf node
Comparing: 4 < 8
Search left to right: 478 > 262 & 0 < 4
Checking for duplicates 652 == 478
cursor->numKeys: 4
next: 0x232155e3620 - 0
Shifting right: 4 > 3
Shifting right: 3 > 2
Shifting right: 2 > 1
Inserting key to node 1 : 478
cursor->numKeys was: 4
cursor->numKeys: 5
Inserted record tt0000018 at block address: 0x2322a4b0108 -> 0x2322a4b0194

Writing record: tt0000019
blocksallocated: 2 curblocksizeused + sizeRequired = 180 > 200
offset: 160
curblocksizeused was: 160 + 20
curblocksizeused: 180
actualsizeused was: 360 + 20
actualsizeused: 380
recordAddress: 0x2322a4b0108 - 160
diskaddress: 0x2322a4b0108 - 160
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0108 - 0x2322a4b01a8 -> 0x2322a4b01bc : 160 - 20
Inserting record: tt0000019 to bptree 
Inserting record 20 - 0x2322a4b0108 + 160 = 0x2322a4b01a8
Root exists for key 20 - 0x2322a4b0108 + 160 = 0x2322a4b01a8
address: 0x2322a4b0108 + 160
Cursor: 0x232155e3920
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232155e3920
Cursor: 0x232155e3920
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 2
Level: 0 - Key: 20 < 262 :cursor-keys[ 0 ] 
key 20 lesser than 262
Cursor was: 0x232155e3920
Cursor: 0x232155e3580
Reached leaf node
Comparing: 5 < 8
Checking for duplicates 115 == 20
cursor->numKeys: 5
next: 0x232155e3a80 - 0
Shifting right: 5 > 4
Shifting right: 4 > 3
Shifting right: 3 > 2
Shifting right: 2 > 1
Shifting right: 1 > 0
Inserting key to node 0 : 20
cursor->numKeys was: 5
cursor->numKeys: 6
Inserted record tt0000019 at block address: 0x2322a4b0108 -> 0x2322a4b01a8

Writing record: tt0000020
blocksallocated: 2 curblocksizeused + sizeRequired = 200 > 200
offset: 180
curblocksizeused was: 180 + 20
curblocksizeused: 200
actualsizeused was: 380 + 20
actualsizeused: 400
recordAddress: 0x2322a4b0108 - 180
diskaddress: 0x2322a4b0108 - 180
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0108 - 0x2322a4b01bc -> 0x2322a4b01d0 : 180 - 20
Inserting record: tt0000020 to bptree 
Inserting record 267 - 0x2322a4b0108 + 180 = 0x2322a4b01bc
Root exists for key 267 - 0x2322a4b0108 + 180 = 0x2322a4b01bc
address: 0x2322a4b0108 + 180
Cursor: 0x232155e3920
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232155e3920
Cursor: 0x232155e3920
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 2
Level: 0 - Key: 267 < 262 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 1
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 2
Level: 0 - Key: 267 < 1342 :cursor-keys[ 1 ] 
key 267 lesser than 1342
Cursor was: 0x232155e3920
Cursor: 0x232155e3a80
Reached leaf node
Comparing: 5 < 8
Search left to right: 267 > 262 & 0 < 5
Checking for duplicates 478 == 267
cursor->numKeys: 5
next: 0x232155e3620 - 0
Shifting right: 5 > 4
Shifting right: 4 > 3
Shifting right: 3 > 2
Shifting right: 2 > 1
Inserting key to node 1 : 267
cursor->numKeys was: 5
cursor->numKeys: 6
Inserted record tt0000020 at block address: 0x2322a4b0108 -> 0x2322a4b01bc

Writing record: tt0000022
blocksallocated: 2 curblocksizeused + sizeRequired = 220 > 200
blockavailable: 749998
blocksallocated * blocksize: 400 - poolptr + blocksallocated * blocksize: 0x2322a4b01d0
blockptr was: 0x2322a4b0108
blockptr: 0x2322a4b01d0
blocksallocated: 3 blocksavailable: 749997 blocksizeused: 600 curblocksizeused: 0
offset: 0
curblocksizeused was: 0 + 20
curblocksizeused: 20
actualsizeused was: 400 + 20
actualsizeused: 420
recordAddress: 0x2322a4b01d0 - 0
diskaddress: 0x2322a4b01d0 - 0
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b01d0 - 0x2322a4b01d0 -> 0x2322a4b01e4 : 0 - 20
Inserting record: tt0000022 to bptree 
Inserting record 888 - 0x2322a4b01d0 + 0 = 0x2322a4b01d0
Root exists for key 888 - 0x2322a4b01d0 + 0 = 0x2322a4b01d0
address: 0x2322a4b01d0 + 0
Cursor: 0x232155e3920
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232155e3920
Cursor: 0x232155e3920
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 2
Level: 0 - Key: 888 < 262 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 1
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 2
Level: 0 - Key: 888 < 1342 :cursor-keys[ 1 ] 
key 888 lesser than 1342
Cursor was: 0x232155e3920
Cursor: 0x232155e3a80
Reached leaf node
Comparing: 6 < 8
Search left to right: 888 > 262 & 0 < 6
Search left to right: 888 > 267 & 1 < 6
Search left to right: 888 > 478 & 2 < 6
Search left to right: 888 > 652 & 3 < 6
Search left to right: 888 > 817 & 4 < 6
Checking for duplicates 1200 == 888
cursor->numKeys: 6
next: 0x232155e3620 - 0
Shifting right: 6 > 5
Inserting key to node 5 : 888
cursor->numKeys was: 6
cursor->numKeys: 7
Inserted record tt0000022 at block address: 0x2322a4b01d0 -> 0x2322a4b01d0

Writing record: tt0000023
blocksallocated: 3 curblocksizeused + sizeRequired = 40 > 200
offset: 20
curblocksizeused was: 20 + 20
curblocksizeused: 40
actualsizeused was: 420 + 20
actualsizeused: 440
recordAddress: 0x2322a4b01d0 - 20
diskaddress: 0x2322a4b01d0 - 20
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b01d0 - 0x2322a4b01e4 -> 0x2322a4b01f8 : 20 - 20
Inserting record: tt0000023 to bptree 
Inserting record 1141 - 0x2322a4b01d0 + 20 = 0x2322a4b01e4
Root exists for key 1141 - 0x2322a4b01d0 + 20 = 0x2322a4b01e4
address: 0x2322a4b01d0 + 20
Cursor: 0x232155e3920
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232155e3920
Cursor: 0x232155e3920
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 2
Level: 0 - Key: 1141 < 262 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 1
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 2
Level: 0 - Key: 1141 < 1342 :cursor-keys[ 1 ] 
key 1141 lesser than 1342
Cursor was: 0x232155e3920
Cursor: 0x232155e3a80
Reached leaf node
Comparing: 7 < 8
Search left to right: 1141 > 262 & 0 < 7
Search left to right: 1141 > 267 & 1 < 7
Search left to right: 1141 > 478 & 2 < 7
Search left to right: 1141 > 652 & 3 < 7
Search left to right: 1141 > 817 & 4 < 7
Search left to right: 1141 > 888 & 5 < 7
Checking for duplicates 1200 == 1141
cursor->numKeys: 7
next: 0x232155e3620 - 0
Shifting right: 7 > 6
Inserting key to node 6 : 1141
cursor->numKeys was: 7
cursor->numKeys: 8
Inserted record tt0000023 at block address: 0x2322a4b01d0 -> 0x2322a4b01e4

Writing record: tt0000024
blocksallocated: 3 curblocksizeused + sizeRequired = 60 > 200
offset: 40
curblocksizeused was: 40 + 20
curblocksizeused: 60
actualsizeused was: 440 + 20
actualsizeused: 460
recordAddress: 0x2322a4b01d0 - 40
diskaddress: 0x2322a4b01d0 - 40
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b01d0 - 0x2322a4b01f8 -> 0x2322a4b020c : 40 - 20
Inserting record: tt0000024 to bptree 
Inserting record 51 - 0x2322a4b01d0 + 40 = 0x2322a4b01f8
Root exists for key 51 - 0x2322a4b01d0 + 40 = 0x2322a4b01f8
address: 0x2322a4b01d0 + 40
Cursor: 0x232155e3920
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232155e3920
Cursor: 0x232155e3920
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 2
Level: 0 - Key: 51 < 262 :cursor-keys[ 0 ] 
key 51 lesser than 262
Cursor was: 0x232155e3920
Cursor: 0x232155e3580
Reached leaf node
Comparing: 6 < 8
Search left to right: 51 > 20 & 0 < 6
Checking for duplicates 115 == 51
cursor->numKeys: 6
next: 0x232155e3a80 - 0
Shifting right: 6 > 5
Shifting right: 5 > 4
Shifting right: 4 > 3
Shifting right: 3 > 2
Shifting right: 2 > 1
Inserting key to node 1 : 51
cursor->numKeys was: 6
cursor->numKeys: 7
Inserted record tt0000024 at block address: 0x2322a4b01d0 -> 0x2322a4b01f8

Writing record: tt0000025
blocksallocated: 3 curblocksizeused + sizeRequired = 80 > 200
offset: 60
curblocksizeused was: 60 + 20
curblocksizeused: 80
actualsizeused was: 460 + 20
actualsizeused: 480
recordAddress: 0x2322a4b01d0 - 60
diskaddress: 0x2322a4b01d0 - 60
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b01d0 - 0x2322a4b020c -> 0x2322a4b0220 : 60 - 20
Inserting record: tt0000025 to bptree 
Inserting record 29 - 0x2322a4b01d0 + 60 = 0x2322a4b020c
Root exists for key 29 - 0x2322a4b01d0 + 60 = 0x2322a4b020c
address: 0x2322a4b01d0 + 60
Cursor: 0x232155e3920
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232155e3920
Cursor: 0x232155e3920
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 2
Level: 0 - Key: 29 < 262 :cursor-keys[ 0 ] 
key 29 lesser than 262
Cursor was: 0x232155e3920
Cursor: 0x232155e3580
Reached leaf node
Comparing: 7 < 8
Search left to right: 29 > 20 & 0 < 7
Checking for duplicates 51 == 29
cursor->numKeys: 7
next: 0x232155e3a80 - 0
Shifting right: 7 > 6
Shifting right: 6 > 5
Shifting right: 5 > 4
Shifting right: 4 > 3
Shifting right: 3 > 2
Shifting right: 2 > 1
Inserting key to node 1 : 29
cursor->numKeys was: 7
cursor->numKeys: 8
Inserted record tt0000025 at block address: 0x2322a4b01d0 -> 0x2322a4b020c

Writing record: tt0000026
blocksallocated: 3 curblocksizeused + sizeRequired = 100 > 200
offset: 80
curblocksizeused was: 80 + 20
curblocksizeused: 100
actualsizeused was: 480 + 20
actualsizeused: 500
recordAddress: 0x2322a4b01d0 - 80
diskaddress: 0x2322a4b01d0 - 80
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b01d0 - 0x2322a4b0220 -> 0x2322a4b0234 : 80 - 20
Inserting record: tt0000026 to bptree 
Inserting record 1313 - 0x2322a4b01d0 + 80 = 0x2322a4b0220
Root exists for key 1313 - 0x2322a4b01d0 + 80 = 0x2322a4b0220
address: 0x2322a4b01d0 + 80
Cursor: 0x232155e3920
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232155e3920
Cursor: 0x232155e3920
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 2
Level: 0 - Key: 1313 < 262 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 1
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 2
Level: 0 - Key: 1313 < 1342 :cursor-keys[ 1 ] 
key 1313 lesser than 1342
Cursor was: 0x232155e3920
Cursor: 0x232155e3a80
Reached leaf node
Comparing: 8 < 8
Creating BPNode of size 8
Created new BPNode at 0x232155e3be0
Copied 0 of 8 : 262 - 0x2322a4b0108 + 0
Copied 1 of 8 : 267 - 0x2322a4b0108 + 180
Copied 2 of 8 : 478 - 0x2322a4b0108 + 140
Copied 3 of 8 : 652 - 0x2322a4b0040 + 120
Copied 4 of 8 : 817 - 0x2322a4b0108 + 80
Copied 5 of 8 : 888 - 0x2322a4b01d0 + 0
Copied 6 of 8 : 1141 - 0x2322a4b01d0 + 20
Copied 7 of 8 : 1200 - 0x2322a4b0108 + 100
Search left to right: 1313 > 262 & 0 < 8
Search left to right: 1313 > 267 & 1 < 8
Search left to right: 1313 > 478 & 2 < 8
Search left to right: 1313 > 652 & 3 < 8
Search left to right: 1313 > 817 & 4 < 8
Search left to right: 1313 > 888 & 5 < 8
Search left to right: 1313 > 1141 & 6 < 8
Search left to right: 1313 > 1200 & 7 < 8
Inserting key to node 8 : 1313
Inserting address to node 8 : 0x2322a4b01d0 + 80
newLeaf->isLeaf was: 13
newLeaf->isLeaf: 1
Calc the new keys after split
cursor->numKeys was: 8
newLeaf->numKeys was: 0
cursor->numKeys: 5
newLeaf->numKeys: 4
newLeaf->pointers[4] was: 0x232155e3620 + 0
newLeaf->pointers[4] : 0x232155e3620 + 0
Adding the keyptr back to the nodes
Adding to cursor 0 : 262 - 0x2322a4b0108 + 0
Adding to cursor 1 : 267 - 0x2322a4b0108 + 180
Adding to cursor 2 : 478 - 0x2322a4b0108 + 140
Adding to cursor 3 : 652 - 0x2322a4b0040 + 120
Adding to cursor 4 : 817 - 0x2322a4b0108 + 80
Adding to newLeaf 0 : 888 - 0x2322a4b01d0 + 0
Adding to newLeaf 1 : 1141 - 0x2322a4b01d0 + 20
Adding to newLeaf 2 : 1200 - 0x2322a4b0108 + 100
Adding to newLeaf 3 : 1313 - 0x2322a4b01d0 + 80
cursor->pointers[5] was: 0x2322a4b01d0 + 0
cursor->pointers[5] : 0x232155e3be0 + 0
wiping cursor->keys[5] was : 888
wiping cursor->keys[5] : 0
wiping cursor->keys[6] was : 1141
wiping cursor->keys[6] : 0
wiping cursor->keys[7] was : 1200
wiping cursor->keys[7] : 0
wiping cursor->pointers[6] was : 0x2322a4b01d0 + 20
wiping cursor->pointers[6] : 0 + 0
wiping cursor->pointers[7] was : 0x2322a4b0108 + 100
wiping cursor->pointers[7] : 0 + 0
wiping cursor->pointers[8] was : 0x232155e3620 + 0
wiping cursor->pointers[8] : 0 + 0
Need insert parent in middle: 888
Inserted record tt0000026 at block address: 0x2322a4b01d0 -> 0x2322a4b0220

Writing record: tt0000027
blocksallocated: 3 curblocksizeused + sizeRequired = 120 > 200
offset: 100
curblocksizeused was: 100 + 20
curblocksizeused: 120
actualsizeused was: 500 + 20
actualsizeused: 520
recordAddress: 0x2322a4b01d0 - 100
diskaddress: 0x2322a4b01d0 - 100
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b01d0 - 0x2322a4b0234 -> 0x2322a4b0248 : 100 - 20
Inserting record: tt0000027 to bptree 
Inserting record 925 - 0x2322a4b01d0 + 100 = 0x2322a4b0234
Root exists for key 925 - 0x2322a4b01d0 + 100 = 0x2322a4b0234
address: 0x2322a4b01d0 + 100
Cursor: 0x232155e3920
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232155e3920
Cursor: 0x232155e3920
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 3
Level: 0 - Key: 925 < 262 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 2
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 3
Level: 0 - Key: 925 < 888 :cursor-keys[ 1 ] 
Checking if larger than all other keys: 1 == 2
Level: 0 - Leaf: 0 Checking thru all keys of node: 2 < 3
Level: 0 - Key: 925 < 1342 :cursor-keys[ 2 ] 
key 925 lesser than 1342
Cursor was: 0x232155e3920
Cursor: 0x232155e3be0
Reached leaf node
Comparing: 4 < 8
Search left to right: 925 > 888 & 0 < 4
Checking for duplicates 1141 == 925
cursor->numKeys: 4
next: 0x232155e3620 - 0
Shifting right: 4 > 3
Shifting right: 3 > 2
Shifting right: 2 > 1
Inserting key to node 1 : 925
cursor->numKeys was: 4
cursor->numKeys: 5
Inserted record tt0000027 at block address: 0x2322a4b01d0 -> 0x2322a4b0234

Writing record: tt0000028
blocksallocated: 3 curblocksizeused + sizeRequired = 140 > 200
offset: 120
curblocksizeused was: 120 + 20
curblocksizeused: 140
actualsizeused was: 520 + 20
actualsizeused: 540
recordAddress: 0x2322a4b01d0 - 120
diskaddress: 0x2322a4b01d0 - 120
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b01d0 - 0x2322a4b0248 -> 0x2322a4b025c : 120 - 20
Inserting record: tt0000028 to bptree 
Inserting record 857 - 0x2322a4b01d0 + 120 = 0x2322a4b0248
Root exists for key 857 - 0x2322a4b01d0 + 120 = 0x2322a4b0248
address: 0x2322a4b01d0 + 120
Cursor: 0x232155e3920
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232155e3920
Cursor: 0x232155e3920
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 3
Level: 0 - Key: 857 < 262 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 2
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 3
Level: 0 - Key: 857 < 888 :cursor-keys[ 1 ] 
key 857 lesser than 888
Cursor was: 0x232155e3920
Cursor: 0x232155e3a80
Reached leaf node
Comparing: 5 < 8
Search left to right: 857 > 262 & 0 < 5
Search left to right: 857 > 267 & 1 < 5
Search left to right: 857 > 478 & 2 < 5
Search left to right: 857 > 652 & 3 < 5
Search left to right: 857 > 817 & 4 < 5
Checking for duplicates 0 == 857
cursor->numKeys: 5
next: 0x232155e3be0 - 0
Inserting key to node 5 : 857
cursor->numKeys was: 5
cursor->numKeys: 6
Inserted record tt0000028 at block address: 0x2322a4b01d0 -> 0x2322a4b0248

Writing record: tt0000029
blocksallocated: 3 curblocksizeused + sizeRequired = 160 > 200
offset: 140
curblocksizeused was: 140 + 20
curblocksizeused: 160
actualsizeused was: 540 + 20
actualsizeused: 560
recordAddress: 0x2322a4b01d0 - 140
diskaddress: 0x2322a4b01d0 - 140
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b01d0 - 0x2322a4b025c -> 0x2322a4b0270 : 140 - 20
Inserting record: tt0000029 to bptree 
Inserting record 2850 - 0x2322a4b01d0 + 140 = 0x2322a4b025c
Root exists for key 2850 - 0x2322a4b01d0 + 140 = 0x2322a4b025c
address: 0x2322a4b01d0 + 140
Cursor: 0x232155e3920
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232155e3920
Cursor: 0x232155e3920
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 3
Level: 0 - Key: 2850 < 262 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 2
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 3
Level: 0 - Key: 2850 < 888 :cursor-keys[ 1 ] 
Checking if larger than all other keys: 1 == 2
Level: 0 - Leaf: 0 Checking thru all keys of node: 2 < 3
Level: 0 - Key: 2850 < 1342 :cursor-keys[ 2 ] 
Checking if larger than all other keys: 2 == 2
Larger than all other keys in node going to last: 2 == 2
Cursor was: 0x232155e3920
Cursor: 0x232155e3620
Reached leaf node
Comparing: 8 < 8
Creating BPNode of size 8
Created new BPNode at 0x232155e3d40
Copied 0 of 8 : 1342 - 0x2322a4b0040 + 40
Copied 1 of 8 : 1572 - 0x2322a4b0108 + 40
Copied 2 of 8 : 1645 - 0x2322a4b0040 + 0
Copied 3 of 8 : 1807 - 0x2322a4b0040 + 140
Copied 4 of 8 : 2127 - 0x2322a4b0040 + 80
Copied 5 of 8 : 4599 - 0x2322a4b0108 + 60
Copied 6 of 8 : 6018 - 0x2322a4b0040 + 180
Copied 7 of 8 : 10287 - 0x2322a4b0108 + 20
Search left to right: 2850 > 1342 & 0 < 8
Search left to right: 2850 > 1572 & 1 < 8
Search left to right: 2850 > 1645 & 2 < 8
Search left to right: 2850 > 1807 & 3 < 8
Search left to right: 2850 > 2127 & 4 < 8
Shifting right: 8 > 7
Shifting right: 7 > 6
Shifting right: 6 > 5
Inserting key to node 5 : 2850
Inserting address to node 5 : 0x2322a4b01d0 + 140
newLeaf->isLeaf was: 13
newLeaf->isLeaf: 1
Calc the new keys after split
cursor->numKeys was: 8
newLeaf->numKeys was: 0
cursor->numKeys: 5
newLeaf->numKeys: 4
newLeaf->pointers[4] was: 0 + 0
newLeaf->pointers[4] : 0 + 0
Adding the keyptr back to the nodes
Adding to cursor 0 : 1342 - 0x2322a4b0040 + 40
Adding to cursor 1 : 1572 - 0x2322a4b0108 + 40
Adding to cursor 2 : 1645 - 0x2322a4b0040 + 0
Adding to cursor 3 : 1807 - 0x2322a4b0040 + 140
Adding to cursor 4 : 2127 - 0x2322a4b0040 + 80
Adding to newLeaf 0 : 2850 - 0x2322a4b01d0 + 140
Adding to newLeaf 1 : 4599 - 0x2322a4b0108 + 60
Adding to newLeaf 2 : 6018 - 0x2322a4b0040 + 180
Adding to newLeaf 3 : 10287 - 0x2322a4b0108 + 20
cursor->pointers[5] was: 0x2322a4b0108 + 60
cursor->pointers[5] : 0x232155e3d40 + 0
wiping cursor->keys[5] was : 4599
wiping cursor->keys[5] : 0
wiping cursor->keys[6] was : 6018
wiping cursor->keys[6] : 0
wiping cursor->keys[7] was : 10287
wiping cursor->keys[7] : 0
wiping cursor->pointers[6] was : 0x2322a4b0040 + 180
wiping cursor->pointers[6] : 0 + 0
wiping cursor->pointers[7] was : 0x2322a4b0108 + 20
wiping cursor->pointers[7] : 0 + 0
wiping cursor->pointers[8] was : 0 + 0
wiping cursor->pointers[8] : 0 + 0
Need insert parent in middle: 2850
Inserted record tt0000029 at block address: 0x2322a4b01d0 -> 0x2322a4b025c

Writing record: tt0000030
blocksallocated: 3 curblocksizeused + sizeRequired = 180 > 200
offset: 160
curblocksizeused was: 160 + 20
curblocksizeused: 180
actualsizeused was: 560 + 20
actualsizeused: 580
recordAddress: 0x2322a4b01d0 - 160
diskaddress: 0x2322a4b01d0 - 160
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b01d0 - 0x2322a4b0270 -> 0x2322a4b0284 : 160 - 20
Inserting record: tt0000030 to bptree 
Inserting record 687 - 0x2322a4b01d0 + 160 = 0x2322a4b0270
Root exists for key 687 - 0x2322a4b01d0 + 160 = 0x2322a4b0270
address: 0x2322a4b01d0 + 160
Cursor: 0x232155e3920
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232155e3920
Cursor: 0x232155e3920
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 4
Level: 0 - Key: 687 < 262 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 3
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 4
Level: 0 - Key: 687 < 888 :cursor-keys[ 1 ] 
key 687 lesser than 888
Cursor was: 0x232155e3920
Cursor: 0x232155e3a80
Reached leaf node
Comparing: 6 < 8
Search left to right: 687 > 262 & 0 < 6
Search left to right: 687 > 267 & 1 < 6
Search left to right: 687 > 478 & 2 < 6
Search left to right: 687 > 652 & 3 < 6
Checking for duplicates 817 == 687
cursor->numKeys: 6
next: 0x232155e3be0 - 0
Shifting right: 6 > 5
Shifting right: 5 > 4
Inserting key to node 4 : 687
cursor->numKeys was: 6
cursor->numKeys: 7
Inserted record tt0000030 at block address: 0x2322a4b01d0 -> 0x2322a4b0270

Writing record: tt0000031
blocksallocated: 3 curblocksizeused + sizeRequired = 200 > 200
offset: 180
curblocksizeused was: 180 + 20
curblocksizeused: 200
actualsizeused was: 580 + 20
actualsizeused: 600
recordAddress: 0x2322a4b01d0 - 180
diskaddress: 0x2322a4b01d0 - 180
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b01d0 - 0x2322a4b0284 -> 0x2322a4b0298 : 180 - 20
Inserting record: tt0000031 to bptree 
Inserting record 837 - 0x2322a4b01d0 + 180 = 0x2322a4b0284
Root exists for key 837 - 0x2322a4b01d0 + 180 = 0x2322a4b0284
address: 0x2322a4b01d0 + 180
Cursor: 0x232155e3920
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232155e3920
Cursor: 0x232155e3920
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 4
Level: 0 - Key: 837 < 262 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 3
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 4
Level: 0 - Key: 837 < 888 :cursor-keys[ 1 ] 
key 837 lesser than 888
Cursor was: 0x232155e3920
Cursor: 0x232155e3a80
Reached leaf node
Comparing: 7 < 8
Search left to right: 837 > 262 & 0 < 7
Search left to right: 837 > 267 & 1 < 7
Search left to right: 837 > 478 & 2 < 7
Search left to right: 837 > 652 & 3 < 7
Search left to right: 837 > 687 & 4 < 7
Search left to right: 837 > 817 & 5 < 7
Checking for duplicates 857 == 837
cursor->numKeys: 7
next: 0x232155e3be0 - 0
Shifting right: 7 > 6
Inserting key to node 6 : 837
cursor->numKeys was: 7
cursor->numKeys: 8
Inserted record tt0000031 at block address: 0x2322a4b01d0 -> 0x2322a4b0284

Writing record: tt0000032
blocksallocated: 3 curblocksizeused + sizeRequired = 220 > 200
blockavailable: 749997
blocksallocated * blocksize: 600 - poolptr + blocksallocated * blocksize: 0x2322a4b0298
blockptr was: 0x2322a4b01d0
blockptr: 0x2322a4b0298
blocksallocated: 4 blocksavailable: 749996 blocksizeused: 800 curblocksizeused: 0
offset: 0
curblocksizeused was: 0 + 20
curblocksizeused: 20
actualsizeused was: 600 + 20
actualsizeused: 620
recordAddress: 0x2322a4b0298 - 0
diskaddress: 0x2322a4b0298 - 0
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0298 - 0x2322a4b0298 -> 0x2322a4b02ac : 0 - 20
Inserting record: tt0000032 to bptree 
Inserting record 338 - 0x2322a4b0298 + 0 = 0x2322a4b0298
Root exists for key 338 - 0x2322a4b0298 + 0 = 0x2322a4b0298
address: 0x2322a4b0298 + 0
Cursor: 0x232155e3920
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232155e3920
Cursor: 0x232155e3920
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 4
Level: 0 - Key: 338 < 262 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 3
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 4
Level: 0 - Key: 338 < 888 :cursor-keys[ 1 ] 
key 338 lesser than 888
Cursor was: 0x232155e3920
Cursor: 0x232155e3a80
Reached leaf node
Comparing: 8 < 8
Creating BPNode of size 8
Created new BPNode at 0x232155e3ea0
Copied 0 of 8 : 262 - 0x2322a4b0108 + 0
Copied 1 of 8 : 267 - 0x2322a4b0108 + 180
Copied 2 of 8 : 478 - 0x2322a4b0108 + 140
Copied 3 of 8 : 652 - 0x2322a4b0040 + 120
Copied 4 of 8 : 687 - 0x2322a4b01d0 + 160
Copied 5 of 8 : 817 - 0x2322a4b0108 + 80
Copied 6 of 8 : 837 - 0x2322a4b01d0 + 180
Copied 7 of 8 : 857 - 0x2322a4b01d0 + 120
Search left to right: 338 > 262 & 0 < 8
Search left to right: 338 > 267 & 1 < 8
Shifting right: 8 > 7
Shifting right: 7 > 6
Shifting right: 6 > 5
Shifting right: 5 > 4
Shifting right: 4 > 3
Shifting right: 3 > 2
Inserting key to node 2 : 338
Inserting address to node 2 : 0x2322a4b0298 + 0
newLeaf->isLeaf was: 13
newLeaf->isLeaf: 1
Calc the new keys after split
cursor->numKeys was: 8
newLeaf->numKeys was: 0
cursor->numKeys: 5
newLeaf->numKeys: 4
newLeaf->pointers[4] was: 0x232155e3be0 + 0
newLeaf->pointers[4] : 0x232155e3be0 + 0
Adding the keyptr back to the nodes
Adding to cursor 0 : 262 - 0x2322a4b0108 + 0
Adding to cursor 1 : 267 - 0x2322a4b0108 + 180
Adding to cursor 2 : 338 - 0x2322a4b0298 + 0
Adding to cursor 3 : 478 - 0x2322a4b0108 + 140
Adding to cursor 4 : 652 - 0x2322a4b0040 + 120
Adding to newLeaf 0 : 687 - 0x2322a4b01d0 + 160
Adding to newLeaf 1 : 817 - 0x2322a4b0108 + 80
Adding to newLeaf 2 : 837 - 0x2322a4b01d0 + 180
Adding to newLeaf 3 : 857 - 0x2322a4b01d0 + 120
cursor->pointers[5] was: 0x2322a4b0108 + 80
cursor->pointers[5] : 0x232155e3ea0 + 0
wiping cursor->keys[5] was : 817
wiping cursor->keys[5] : 0
wiping cursor->keys[6] was : 837
wiping cursor->keys[6] : 0
wiping cursor->keys[7] was : 857
wiping cursor->keys[7] : 0
wiping cursor->pointers[6] was : 0x2322a4b01d0 + 180
wiping cursor->pointers[6] : 0 + 0
wiping cursor->pointers[7] was : 0x2322a4b01d0 + 120
wiping cursor->pointers[7] : 0 + 0
wiping cursor->pointers[8] was : 0x232155e3be0 + 0
wiping cursor->pointers[8] : 0 + 0
Need insert parent in middle: 687
Inserted record tt0000032 at block address: 0x2322a4b0298 -> 0x2322a4b0298

Writing record: tt0000033
blocksallocated: 4 curblocksizeused + sizeRequired = 40 > 200
offset: 20
curblocksizeused was: 20 + 20
curblocksizeused: 40
actualsizeused was: 620 + 20
actualsizeused: 640
recordAddress: 0x2322a4b0298 - 20
diskaddress: 0x2322a4b0298 - 20
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0298 - 0x2322a4b02ac -> 0x2322a4b02c0 : 20 - 20
Inserting record: tt0000033 to bptree 
Inserting record 856 - 0x2322a4b0298 + 20 = 0x2322a4b02ac
Root exists for key 856 - 0x2322a4b0298 + 20 = 0x2322a4b02ac
address: 0x2322a4b0298 + 20
Cursor: 0x232155e3920
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232155e3920
Cursor: 0x232155e3920
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 5
Level: 0 - Key: 856 < 262 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 4
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 5
Level: 0 - Key: 856 < 687 :cursor-keys[ 1 ] 
Checking if larger than all other keys: 1 == 4
Level: 0 - Leaf: 0 Checking thru all keys of node: 2 < 5
Level: 0 - Key: 856 < 888 :cursor-keys[ 2 ] 
key 856 lesser than 888
Cursor was: 0x232155e3920
Cursor: 0x232155e3ea0
Reached leaf node
Comparing: 4 < 8
Search left to right: 856 > 687 & 0 < 4
Search left to right: 856 > 817 & 1 < 4
Search left to right: 856 > 837 & 2 < 4
Checking for duplicates 857 == 856
cursor->numKeys: 4
next: 0x232155e3be0 - 0
Shifting right: 4 > 3
Inserting key to node 3 : 856
cursor->numKeys was: 4
cursor->numKeys: 5
Inserted record tt0000033 at block address: 0x2322a4b0298 -> 0x2322a4b02ac

Writing record: tt0000034
blocksallocated: 4 curblocksizeused + sizeRequired = 60 > 200
offset: 40
curblocksizeused was: 40 + 20
curblocksizeused: 60
actualsizeused was: 640 + 20
actualsizeused: 660
recordAddress: 0x2322a4b0298 - 40
diskaddress: 0x2322a4b0298 - 40
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0298 - 0x2322a4b02c0 -> 0x2322a4b02d4 : 40 - 20
Inserting record: tt0000034 to bptree 
Inserting record 128 - 0x2322a4b0298 + 40 = 0x2322a4b02c0
Root exists for key 128 - 0x2322a4b0298 + 40 = 0x2322a4b02c0
address: 0x2322a4b0298 + 40
Cursor: 0x232155e3920
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232155e3920
Cursor: 0x232155e3920
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 5
Level: 0 - Key: 128 < 262 :cursor-keys[ 0 ] 
key 128 lesser than 262
Cursor was: 0x232155e3920
Cursor: 0x232155e3580
Reached leaf node
Comparing: 8 < 8
Creating BPNode of size 8
Created new BPNode at 0x232155e3f40
Copied 0 of 8 : 20 - 0x2322a4b0108 + 160
Copied 1 of 8 : 29 - 0x2322a4b01d0 + 60
Copied 2 of 8 : 51 - 0x2322a4b01d0 + 40
Copied 3 of 8 : 115 - 0x2322a4b0040 + 100
Copied 4 of 8 : 120 - 0x2322a4b0040 + 60
Copied 5 of 8 : 154 - 0x2322a4b0040 + 160
Copied 6 of 8 : 198 - 0x2322a4b0040 + 20
Copied 7 of 8 : 241 - 0x2322a4b0108 + 120
Search left to right: 128 > 20 & 0 < 8
Search left to right: 128 > 29 & 1 < 8
Search left to right: 128 > 51 & 2 < 8
Search left to right: 128 > 115 & 3 < 8
Search left to right: 128 > 120 & 4 < 8
Shifting right: 8 > 7
Shifting right: 7 > 6
Shifting right: 6 > 5
Inserting key to node 5 : 128
Inserting address to node 5 : 0x2322a4b0298 + 40
newLeaf->isLeaf was: 13
newLeaf->isLeaf: 1
Calc the new keys after split
cursor->numKeys was: 8
newLeaf->numKeys was: 0
cursor->numKeys: 5
newLeaf->numKeys: 4
newLeaf->pointers[4] was: 0x232155e3a80 + 0
newLeaf->pointers[4] : 0x232155e3a80 + 0
Adding the keyptr back to the nodes
Adding to cursor 0 : 20 - 0x2322a4b0108 + 160
Adding to cursor 1 : 29 - 0x2322a4b01d0 + 60
Adding to cursor 2 : 51 - 0x2322a4b01d0 + 40
Adding to cursor 3 : 115 - 0x2322a4b0040 + 100
Adding to cursor 4 : 120 - 0x2322a4b0040 + 60
Adding to newLeaf 0 : 128 - 0x2322a4b0298 + 40
Adding to newLeaf 1 : 154 - 0x2322a4b0040 + 160
Adding to newLeaf 2 : 198 - 0x2322a4b0040 + 20
Adding to newLeaf 3 : 241 - 0x2322a4b0108 + 120
cursor->pointers[5] was: 0x2322a4b0040 + 160
cursor->pointers[5] : 0x232155e3f40 + 0
wiping cursor->keys[5] was : 154
wiping cursor->keys[5] : 0
wiping cursor->keys[6] was : 198
wiping cursor->keys[6] : 0
wiping cursor->keys[7] was : 241
wiping cursor->keys[7] : 0
wiping cursor->pointers[6] was : 0x2322a4b0040 + 20
wiping cursor->pointers[6] : 0 + 0
wiping cursor->pointers[7] was : 0x2322a4b0108 + 120
wiping cursor->pointers[7] : 0 + 0
wiping cursor->pointers[8] was : 0x232155e3a80 + 0
wiping cursor->pointers[8] : 0 + 0
Need insert parent in middle: 128
Inserted record tt0000034 at block address: 0x2322a4b0298 -> 0x2322a4b02c0

Writing record: tt0000035
blocksallocated: 4 curblocksizeused + sizeRequired = 80 > 200
offset: 60
curblocksizeused was: 60 + 20
curblocksizeused: 80
actualsizeused was: 660 + 20
actualsizeused: 680
recordAddress: 0x2322a4b0298 - 60
diskaddress: 0x2322a4b0298 - 60
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0298 - 0x2322a4b02d4 -> 0x2322a4b02e8 : 60 - 20
Inserting record: tt0000035 to bptree 
Inserting record 59 - 0x2322a4b0298 + 60 = 0x2322a4b02d4
Root exists for key 59 - 0x2322a4b0298 + 60 = 0x2322a4b02d4
address: 0x2322a4b0298 + 60
Cursor: 0x232155e3920
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232155e3920
Cursor: 0x232155e3920
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 6
Level: 0 - Key: 59 < 128 :cursor-keys[ 0 ] 
key 59 lesser than 128
Cursor was: 0x232155e3920
Cursor: 0x232155e3580
Reached leaf node
Comparing: 5 < 8
Search left to right: 59 > 20 & 0 < 5
Search left to right: 59 > 29 & 1 < 5
Search left to right: 59 > 51 & 2 < 5
Checking for duplicates 115 == 59
cursor->numKeys: 5
next: 0x232155e3f40 - 0
Shifting right: 5 > 4
Shifting right: 4 > 3
Inserting key to node 3 : 59
cursor->numKeys was: 5
cursor->numKeys: 6
Inserted record tt0000035 at block address: 0x2322a4b0298 -> 0x2322a4b02d4

Writing record: tt0000036
blocksallocated: 4 curblocksizeused + sizeRequired = 100 > 200
offset: 80
curblocksizeused was: 80 + 20
curblocksizeused: 100
actualsizeused was: 680 + 20
actualsizeused: 700
recordAddress: 0x2322a4b0298 - 80
diskaddress: 0x2322a4b0298 - 80
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0298 - 0x2322a4b02e8 -> 0x2322a4b02fc : 80 - 20
Inserting record: tt0000036 to bptree 
Inserting record 491 - 0x2322a4b0298 + 80 = 0x2322a4b02e8
Root exists for key 491 - 0x2322a4b0298 + 80 = 0x2322a4b02e8
address: 0x2322a4b0298 + 80
Cursor: 0x232155e3920
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232155e3920
Cursor: 0x232155e3920
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 6
Level: 0 - Key: 491 < 128 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 5
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 6
Level: 0 - Key: 491 < 262 :cursor-keys[ 1 ] 
Checking if larger than all other keys: 1 == 5
Level: 0 - Leaf: 0 Checking thru all keys of node: 2 < 6
Level: 0 - Key: 491 < 687 :cursor-keys[ 2 ] 
key 491 lesser than 687
Cursor was: 0x232155e3920
Cursor: 0x232155e3a80
Reached leaf node
Comparing: 5 < 8
Search left to right: 491 > 262 & 0 < 5
Search left to right: 491 > 267 & 1 < 5
Search left to right: 491 > 338 & 2 < 5
Search left to right: 491 > 478 & 3 < 5
Checking for duplicates 652 == 491
cursor->numKeys: 5
next: 0x232155e3ea0 - 0
Shifting right: 5 > 4
Inserting key to node 4 : 491
cursor->numKeys was: 5
cursor->numKeys: 6
Inserted record tt0000036 at block address: 0x2322a4b0298 -> 0x2322a4b02e8

Writing record: tt0000037
blocksallocated: 4 curblocksizeused + sizeRequired = 120 > 200
offset: 100
curblocksizeused was: 100 + 20
curblocksizeused: 120
actualsizeused was: 700 + 20
actualsizeused: 720
recordAddress: 0x2322a4b0298 - 100
diskaddress: 0x2322a4b0298 - 100
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0298 - 0x2322a4b02fc -> 0x2322a4b0310 : 100 - 20
Inserting record: tt0000037 to bptree 
Inserting record 43 - 0x2322a4b0298 + 100 = 0x2322a4b02fc
Root exists for key 43 - 0x2322a4b0298 + 100 = 0x2322a4b02fc
address: 0x2322a4b0298 + 100
Cursor: 0x232155e3920
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232155e3920
Cursor: 0x232155e3920
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 6
Level: 0 - Key: 43 < 128 :cursor-keys[ 0 ] 
key 43 lesser than 128
Cursor was: 0x232155e3920
Cursor: 0x232155e3580
Reached leaf node
Comparing: 6 < 8
Search left to right: 43 > 20 & 0 < 6
Search left to right: 43 > 29 & 1 < 6
Checking for duplicates 51 == 43
cursor->numKeys: 6
next: 0x232155e3f40 - 0
Shifting right: 6 > 5
Shifting right: 5 > 4
Shifting right: 4 > 3
Shifting right: 3 > 2
Inserting key to node 2 : 43
cursor->numKeys was: 6
cursor->numKeys: 7
Inserted record tt0000037 at block address: 0x2322a4b0298 -> 0x2322a4b02fc

Writing record: tt0000038
blocksallocated: 4 curblocksizeused + sizeRequired = 140 > 200
offset: 120
curblocksizeused was: 120 + 20
curblocksizeused: 140
actualsizeused was: 720 + 20
actualsizeused: 740
recordAddress: 0x2322a4b0298 - 120
diskaddress: 0x2322a4b0298 - 120
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0298 - 0x2322a4b0310 -> 0x2322a4b0324 : 120 - 20
Inserting record: tt0000038 to bptree 
Inserting record 148 - 0x2322a4b0298 + 120 = 0x2322a4b0310
Root exists for key 148 - 0x2322a4b0298 + 120 = 0x2322a4b0310
address: 0x2322a4b0298 + 120
Cursor: 0x232155e3920
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232155e3920
Cursor: 0x232155e3920
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 6
Level: 0 - Key: 148 < 128 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 5
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 6
Level: 0 - Key: 148 < 262 :cursor-keys[ 1 ] 
key 148 lesser than 262
Cursor was: 0x232155e3920
Cursor: 0x232155e3f40
Reached leaf node
Comparing: 4 < 8
Search left to right: 148 > 128 & 0 < 4
Checking for duplicates 154 == 148
cursor->numKeys: 4
next: 0x232155e3a80 - 0
Shifting right: 4 > 3
Shifting right: 3 > 2
Shifting right: 2 > 1
Inserting key to node 1 : 148
cursor->numKeys was: 4
cursor->numKeys: 5
Inserted record tt0000038 at block address: 0x2322a4b0298 -> 0x2322a4b0310

Writing record: tt0000039
blocksallocated: 4 curblocksizeused + sizeRequired = 160 > 200
offset: 140
curblocksizeused was: 140 + 20
curblocksizeused: 160
actualsizeused was: 740 + 20
actualsizeused: 760
recordAddress: 0x2322a4b0298 - 140
diskaddress: 0x2322a4b0298 - 140
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0298 - 0x2322a4b0324 -> 0x2322a4b0338 : 140 - 20
Inserting record: tt0000039 to bptree 
Inserting record 15 - 0x2322a4b0298 + 140 = 0x2322a4b0324
Root exists for key 15 - 0x2322a4b0298 + 140 = 0x2322a4b0324
address: 0x2322a4b0298 + 140
Cursor: 0x232155e3920
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232155e3920
Cursor: 0x232155e3920
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 6
Level: 0 - Key: 15 < 128 :cursor-keys[ 0 ] 
key 15 lesser than 128
Cursor was: 0x232155e3920
Cursor: 0x232155e3580
Reached leaf node
Comparing: 7 < 8
Checking for duplicates 20 == 15
cursor->numKeys: 7
next: 0x232155e3f40 - 0
Shifting right: 7 > 6
Shifting right: 6 > 5
Shifting right: 5 > 4
Shifting right: 4 > 3
Shifting right: 3 > 2
Shifting right: 2 > 1
Shifting right: 1 > 0
Inserting key to node 0 : 15
cursor->numKeys was: 7
cursor->numKeys: 8
Inserted record tt0000039 at block address: 0x2322a4b0298 -> 0x2322a4b0324

Writing record: tt0000040
blocksallocated: 4 curblocksizeused + sizeRequired = 180 > 200
offset: 160
curblocksizeused was: 160 + 20
curblocksizeused: 180
actualsizeused was: 760 + 20
actualsizeused: 780
recordAddress: 0x2322a4b0298 - 160
diskaddress: 0x2322a4b0298 - 160
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0298 - 0x2322a4b0338 -> 0x2322a4b034c : 160 - 20
Inserting record: tt0000040 to bptree 
Inserting record 40 - 0x2322a4b0298 + 160 = 0x2322a4b0338
Root exists for key 40 - 0x2322a4b0298 + 160 = 0x2322a4b0338
address: 0x2322a4b0298 + 160
Cursor: 0x232155e3920
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232155e3920
Cursor: 0x232155e3920
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 6
Level: 0 - Key: 40 < 128 :cursor-keys[ 0 ] 
key 40 lesser than 128
Cursor was: 0x232155e3920
Cursor: 0x232155e3580
Reached leaf node
Comparing: 8 < 8
Creating BPNode of size 8
Created new BPNode at 0x232155e3800
Copied 0 of 8 : 15 - 0x2322a4b0298 + 140
Copied 1 of 8 : 20 - 0x2322a4b0108 + 160
Copied 2 of 8 : 29 - 0x2322a4b01d0 + 60
Copied 3 of 8 : 43 - 0x2322a4b0298 + 100
Copied 4 of 8 : 51 - 0x2322a4b01d0 + 40
Copied 5 of 8 : 59 - 0x2322a4b0298 + 60
Copied 6 of 8 : 115 - 0x2322a4b0040 + 100
Copied 7 of 8 : 120 - 0x2322a4b0040 + 60
Search left to right: 40 > 15 & 0 < 8
Search left to right: 40 > 20 & 1 < 8
Search left to right: 40 > 29 & 2 < 8
Shifting right: 8 > 7
Shifting right: 7 > 6
Shifting right: 6 > 5
Shifting right: 5 > 4
Shifting right: 4 > 3
Inserting key to node 3 : 40
Inserting address to node 3 : 0x2322a4b0298 + 160
newLeaf->isLeaf was: 13
newLeaf->isLeaf: 1
Calc the new keys after split
cursor->numKeys was: 8
newLeaf->numKeys was: 0
cursor->numKeys: 5
newLeaf->numKeys: 4
newLeaf->pointers[4] was: 0x232155e3f40 + 0
newLeaf->pointers[4] : 0x232155e3f40 + 0
Adding the keyptr back to the nodes
Adding to cursor 0 : 15 - 0x2322a4b0298 + 140
Adding to cursor 1 : 20 - 0x2322a4b0108 + 160
Adding to cursor 2 : 29 - 0x2322a4b01d0 + 60
Adding to cursor 3 : 40 - 0x2322a4b0298 + 160
Adding to cursor 4 : 43 - 0x2322a4b0298 + 100
Adding to newLeaf 0 : 51 - 0x2322a4b01d0 + 40
Adding to newLeaf 1 : 59 - 0x2322a4b0298 + 60
Adding to newLeaf 2 : 115 - 0x2322a4b0040 + 100
Adding to newLeaf 3 : 120 - 0x2322a4b0040 + 60
cursor->pointers[5] was: 0x2322a4b0298 + 60
cursor->pointers[5] : 0x232155e3800 + 0
wiping cursor->keys[5] was : 59
wiping cursor->keys[5] : 0
wiping cursor->keys[6] was : 115
wiping cursor->keys[6] : 0
wiping cursor->keys[7] was : 120
wiping cursor->keys[7] : 0
wiping cursor->pointers[6] was : 0x2322a4b0040 + 100
wiping cursor->pointers[6] : 0 + 0
wiping cursor->pointers[7] was : 0x2322a4b0040 + 60
wiping cursor->pointers[7] : 0 + 0
wiping cursor->pointers[8] was : 0x232155e3f40 + 0
wiping cursor->pointers[8] : 0 + 0
Need insert parent in middle: 51
Inserted record tt0000040 at block address: 0x2322a4b0298 -> 0x2322a4b0338

Writing record: tt0000041
blocksallocated: 4 curblocksizeused + sizeRequired = 200 > 200
offset: 180
curblocksizeused was: 180 + 20
curblocksizeused: 200
actualsizeused was: 780 + 20
actualsizeused: 800
recordAddress: 0x2322a4b0298 - 180
diskaddress: 0x2322a4b0298 - 180
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0298 - 0x2322a4b034c -> 0x2322a4b0360 : 180 - 20
Inserting record: tt0000041 to bptree 
Inserting record 1422 - 0x2322a4b0298 + 180 = 0x2322a4b034c
Root exists for key 1422 - 0x2322a4b0298 + 180 = 0x2322a4b034c
address: 0x2322a4b0298 + 180
Cursor: 0x232155e3920
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232155e3920
Cursor: 0x232155e3920
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 7
Level: 0 - Key: 1422 < 51 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 6
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 7
Level: 0 - Key: 1422 < 128 :cursor-keys[ 1 ] 
Checking if larger than all other keys: 1 == 6
Level: 0 - Leaf: 0 Checking thru all keys of node: 2 < 7
Level: 0 - Key: 1422 < 262 :cursor-keys[ 2 ] 
Checking if larger than all other keys: 2 == 6
Level: 0 - Leaf: 0 Checking thru all keys of node: 3 < 7
Level: 0 - Key: 1422 < 687 :cursor-keys[ 3 ] 
Checking if larger than all other keys: 3 == 6
Level: 0 - Leaf: 0 Checking thru all keys of node: 4 < 7
Level: 0 - Key: 1422 < 888 :cursor-keys[ 4 ] 
Checking if larger than all other keys: 4 == 6
Level: 0 - Leaf: 0 Checking thru all keys of node: 5 < 7
Level: 0 - Key: 1422 < 1342 :cursor-keys[ 5 ] 
Checking if larger than all other keys: 5 == 6
Level: 0 - Leaf: 0 Checking thru all keys of node: 6 < 7
Level: 0 - Key: 1422 < 2850 :cursor-keys[ 6 ] 
key 1422 lesser than 2850
Cursor was: 0x232155e3920
Cursor: 0x232155e3620
Reached leaf node
Comparing: 5 < 8
Search left to right: 1422 > 1342 & 0 < 5
Checking for duplicates 1572 == 1422
cursor->numKeys: 5
next: 0x232155e3d40 - 0
Shifting right: 5 > 4
Shifting right: 4 > 3
Shifting right: 3 > 2
Shifting right: 2 > 1
Inserting key to node 1 : 1422
cursor->numKeys was: 5
cursor->numKeys: 6
Inserted record tt0000041 at block address: 0x2322a4b0298 -> 0x2322a4b034c

Writing record: tt0000042
blocksallocated: 4 curblocksizeused + sizeRequired = 220 > 200
blockavailable: 749996
blocksallocated * blocksize: 800 - poolptr + blocksallocated * blocksize: 0x2322a4b0360
blockptr was: 0x2322a4b0298
blockptr: 0x2322a4b0360
blocksallocated: 5 blocksavailable: 749995 blocksizeused: 1000 curblocksizeused: 0
offset: 0
curblocksizeused was: 0 + 20
curblocksizeused: 20
actualsizeused was: 800 + 20
actualsizeused: 820
recordAddress: 0x2322a4b0360 - 0
diskaddress: 0x2322a4b0360 - 0
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0360 - 0x2322a4b0360 -> 0x2322a4b0374 : 0 - 20
Inserting record: tt0000042 to bptree 
Inserting record 24 - 0x2322a4b0360 + 0 = 0x2322a4b0360
Root exists for key 24 - 0x2322a4b0360 + 0 = 0x2322a4b0360
address: 0x2322a4b0360 + 0
Cursor: 0x232155e3920
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232155e3920
Cursor: 0x232155e3920
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 7
Level: 0 - Key: 24 < 51 :cursor-keys[ 0 ] 
key 24 lesser than 51
Cursor was: 0x232155e3920
Cursor: 0x232155e3580
Reached leaf node
Comparing: 5 < 8
Search left to right: 24 > 15 & 0 < 5
Search left to right: 24 > 20 & 1 < 5
Checking for duplicates 29 == 24
cursor->numKeys: 5
next: 0x232155e3800 - 0
Shifting right: 5 > 4
Shifting right: 4 > 3
Shifting right: 3 > 2
Inserting key to node 2 : 24
cursor->numKeys was: 5
cursor->numKeys: 6
Inserted record tt0000042 at block address: 0x2322a4b0360 -> 0x2322a4b0360

Writing record: tt0000043
blocksallocated: 5 curblocksizeused + sizeRequired = 40 > 200
offset: 20
curblocksizeused was: 20 + 20
curblocksizeused: 40
actualsizeused was: 820 + 20
actualsizeused: 840
recordAddress: 0x2322a4b0360 - 20
diskaddress: 0x2322a4b0360 - 20
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0360 - 0x2322a4b0374 -> 0x2322a4b0388 : 20 - 20
Inserting record: tt0000043 to bptree 
Inserting record 15 - 0x2322a4b0360 + 20 = 0x2322a4b0374
Root exists for key 15 - 0x2322a4b0360 + 20 = 0x2322a4b0374
address: 0x2322a4b0360 + 20
Cursor: 0x232155e3920
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232155e3920
Cursor: 0x232155e3920
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 7
Level: 0 - Key: 15 < 51 :cursor-keys[ 0 ] 
key 15 lesser than 51
Cursor was: 0x232155e3920
Cursor: 0x232155e3580
Reached leaf node
Comparing: 6 < 8
Checking for duplicates 15 == 15
Duplicate: 15
Inserted record tt0000043 at block address: 0x2322a4b0360 -> 0x2322a4b0374

Writing record: tt0000044
blocksallocated: 5 curblocksizeused + sizeRequired = 60 > 200
offset: 40
curblocksizeused was: 40 + 20
curblocksizeused: 60
actualsizeused was: 840 + 20
actualsizeused: 860
recordAddress: 0x2322a4b0360 - 40
diskaddress: 0x2322a4b0360 - 40
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0360 - 0x2322a4b0388 -> 0x2322a4b039c : 40 - 20
Inserting record: tt0000044 to bptree 
Inserting record 30 - 0x2322a4b0360 + 40 = 0x2322a4b0388
Root exists for key 30 - 0x2322a4b0360 + 40 = 0x2322a4b0388
address: 0x2322a4b0360 + 40
Cursor: 0x232155e3920
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232155e3920
Cursor: 0x232155e3920
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 7
Level: 0 - Key: 30 < 51 :cursor-keys[ 0 ] 
key 30 lesser than 51
Cursor was: 0x232155e3920
Cursor: 0x232155e3580
Reached leaf node
Comparing: 6 < 8
Search left to right: 30 > 15 & 0 < 6
Search left to right: 30 > 20 & 1 < 6
Search left to right: 30 > 24 & 2 < 6
Search left to right: 30 > 29 & 3 < 6
Checking for duplicates 40 == 30
cursor->numKeys: 6
next: 0x232155e3800 - 0
Shifting right: 6 > 5
Shifting right: 5 > 4
Inserting key to node 4 : 30
cursor->numKeys was: 6
cursor->numKeys: 7
Inserted record tt0000044 at block address: 0x2322a4b0360 -> 0x2322a4b0388

Writing record: tt0000045
blocksallocated: 5 curblocksizeused + sizeRequired = 80 > 200
offset: 60
curblocksizeused was: 60 + 20
curblocksizeused: 80
actualsizeused was: 860 + 20
actualsizeused: 880
recordAddress: 0x2322a4b0360 - 60
diskaddress: 0x2322a4b0360 - 60
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0360 - 0x2322a4b039c -> 0x2322a4b03b0 : 60 - 20
Inserting record: tt0000045 to bptree 
Inserting record 19 - 0x2322a4b0360 + 60 = 0x2322a4b039c
Root exists for key 19 - 0x2322a4b0360 + 60 = 0x2322a4b039c
address: 0x2322a4b0360 + 60
Cursor: 0x232155e3920
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232155e3920
Cursor: 0x232155e3920
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 7
Level: 0 - Key: 19 < 51 :cursor-keys[ 0 ] 
key 19 lesser than 51
Cursor was: 0x232155e3920
Cursor: 0x232155e3580
Reached leaf node
Comparing: 7 < 8
Search left to right: 19 > 15 & 0 < 7
Checking for duplicates 20 == 19
cursor->numKeys: 7
next: 0x232155e3800 - 0
Shifting right: 7 > 6
Shifting right: 6 > 5
Shifting right: 5 > 4
Shifting right: 4 > 3
Shifting right: 3 > 2
Shifting right: 2 > 1
Inserting key to node 1 : 19
cursor->numKeys was: 7
cursor->numKeys: 8
Inserted record tt0000045 at block address: 0x2322a4b0360 -> 0x2322a4b039c

Writing record: tt0000046
blocksallocated: 5 curblocksizeused + sizeRequired = 100 > 200
offset: 80
curblocksizeused was: 80 + 20
curblocksizeused: 100
actualsizeused was: 880 + 20
actualsizeused: 900
recordAddress: 0x2322a4b0360 - 80
diskaddress: 0x2322a4b0360 - 80
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0360 - 0x2322a4b03b0 -> 0x2322a4b03c4 : 80 - 20
Inserting record: tt0000046 to bptree 
Inserting record 19 - 0x2322a4b0360 + 80 = 0x2322a4b03b0
Root exists for key 19 - 0x2322a4b0360 + 80 = 0x2322a4b03b0
address: 0x2322a4b0360 + 80
Cursor: 0x232155e3920
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232155e3920
Cursor: 0x232155e3920
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 7
Level: 0 - Key: 19 < 51 :cursor-keys[ 0 ] 
key 19 lesser than 51
Cursor was: 0x232155e3920
Cursor: 0x232155e3580
Reached leaf node
Comparing: 8 < 8
Creating BPNode of size 8
Created new BPNode at 0x23215445150
Copied 0 of 8 : 15 - 0x2322a4b0298 + 140
Copied 1 of 8 : 19 - 0x2322a4b0360 + 60
Copied 2 of 8 : 20 - 0x2322a4b0108 + 160
Copied 3 of 8 : 24 - 0x2322a4b0360 + 0
Copied 4 of 8 : 29 - 0x2322a4b01d0 + 60
Copied 5 of 8 : 30 - 0x2322a4b0360 + 40
Copied 6 of 8 : 40 - 0x2322a4b0298 + 160
Copied 7 of 8 : 43 - 0x2322a4b0298 + 100
Search left to right: 19 > 15 & 0 < 8
Duplicate Overflow: 19
Shifting right: 8 > 7
Shifting right: 7 > 6
Shifting right: 6 > 5
Shifting right: 5 > 4
Shifting right: 4 > 3
Shifting right: 3 > 2
Shifting right: 2 > 1
Inserting key to node 1 : 19
Inserting address to node 1 : 0x2322a4b0360 + 80
newLeaf->isLeaf was: 13
newLeaf->isLeaf: 1
Calc the new keys after split
cursor->numKeys was: 8
newLeaf->numKeys was: 0
cursor->numKeys: 5
newLeaf->numKeys: 4
newLeaf->pointers[4] was: 0x232155e3800 + 0
newLeaf->pointers[4] : 0x232155e3800 + 0
Adding the keyptr back to the nodes
Adding to cursor 0 : 15 - 0x2322a4b0298 + 140
Adding to cursor 1 : 19 - 0x2322a4b0360 + 80
Adding to cursor 2 : 19 - 0x2322a4b0360 + 60
Adding to cursor 3 : 20 - 0x2322a4b0108 + 160
Adding to cursor 4 : 24 - 0x2322a4b0360 + 0
Adding to newLeaf 0 : 29 - 0x2322a4b01d0 + 60
Adding to newLeaf 1 : 30 - 0x2322a4b0360 + 40
Adding to newLeaf 2 : 40 - 0x2322a4b0298 + 160
Adding to newLeaf 3 : 43 - 0x2322a4b0298 + 100
cursor->pointers[5] was: 0x2322a4b0360 + 40
cursor->pointers[5] : 0x23215445150 + 0
wiping cursor->keys[5] was : 30
wiping cursor->keys[5] : 0
wiping cursor->keys[6] was : 40
wiping cursor->keys[6] : 0
wiping cursor->keys[7] was : 43
wiping cursor->keys[7] : 0
wiping cursor->pointers[6] was : 0x2322a4b0298 + 160
wiping cursor->pointers[6] : 0 + 0
wiping cursor->pointers[7] was : 0x2322a4b0298 + 100
wiping cursor->pointers[7] : 0 + 0
wiping cursor->pointers[8] was : 0x232155e3800 + 0
wiping cursor->pointers[8] : 0 + 0
Need insert parent in middle: 29
Inserted record tt0000046 at block address: 0x2322a4b0360 -> 0x2322a4b03b0

Writing record: tt0000047
blocksallocated: 5 curblocksizeused + sizeRequired = 120 > 200
offset: 100
curblocksizeused was: 100 + 20
curblocksizeused: 120
actualsizeused was: 900 + 20
actualsizeused: 920
recordAddress: 0x2322a4b0360 - 100
diskaddress: 0x2322a4b0360 - 100
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0360 - 0x2322a4b03c4 -> 0x2322a4b03d8 : 100 - 20
Inserting record: tt0000047 to bptree 
Inserting record 18 - 0x2322a4b0360 + 100 = 0x2322a4b03c4
Root exists for key 18 - 0x2322a4b0360 + 100 = 0x2322a4b03c4
address: 0x2322a4b0360 + 100
Cursor: 0x232155e3920
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232155e3920
Cursor: 0x232155e3920
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 8
Level: 0 - Key: 18 < 29 :cursor-keys[ 0 ] 
key 18 lesser than 29
Cursor was: 0x232155e3920
Cursor: 0x232155e3580
Reached leaf node
Comparing: 5 < 8
Search left to right: 18 > 15 & 0 < 5
Checking for duplicates 19 == 18
cursor->numKeys: 5
next: 0x23215445150 - 0
Shifting right: 5 > 4
Shifting right: 4 > 3
Shifting right: 3 > 2
Shifting right: 2 > 1
Inserting key to node 1 : 18
cursor->numKeys was: 5
cursor->numKeys: 6
Inserted record tt0000047 at block address: 0x2322a4b0360 -> 0x2322a4b03c4

Writing record: tt0000048
blocksallocated: 5 curblocksizeused + sizeRequired = 140 > 200
offset: 120
curblocksizeused was: 120 + 20
curblocksizeused: 140
actualsizeused was: 920 + 20
actualsizeused: 940
recordAddress: 0x2322a4b0360 - 120
diskaddress: 0x2322a4b0360 - 120
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0360 - 0x2322a4b03d8 -> 0x2322a4b03ec : 120 - 20
Inserting record: tt0000048 to bptree 
Inserting record 128 - 0x2322a4b0360 + 120 = 0x2322a4b03d8
Root exists for key 128 - 0x2322a4b0360 + 120 = 0x2322a4b03d8
address: 0x2322a4b0360 + 120
Cursor: 0x232155e3920
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232155e3920
Cursor: 0x232155e3920
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 8
Level: 0 - Key: 128 < 29 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 7
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 8
Level: 0 - Key: 128 < 51 :cursor-keys[ 1 ] 
Checking if larger than all other keys: 1 == 7
Level: 0 - Leaf: 0 Checking thru all keys of node: 2 < 8
Level: 0 - Key: 128 < 128 :cursor-keys[ 2 ] 
Checking if larger than all other keys: 2 == 7
Level: 0 - Leaf: 0 Checking thru all keys of node: 3 < 8
Level: 0 - Key: 128 < 262 :cursor-keys[ 3 ] 
key 128 lesser than 262
Cursor was: 0x232155e3920
Cursor: 0x232155e3f40
Reached leaf node
Comparing: 5 < 8
Checking for duplicates 128 == 128
Duplicate: 128
Inserted record tt0000048 at block address: 0x2322a4b0360 -> 0x2322a4b03d8

Writing record: tt0000049
blocksallocated: 5 curblocksizeused + sizeRequired = 160 > 200
offset: 140
curblocksizeused was: 140 + 20
curblocksizeused: 160
actualsizeused was: 940 + 20
actualsizeused: 960
recordAddress: 0x2322a4b0360 - 140
diskaddress: 0x2322a4b0360 - 140
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0360 - 0x2322a4b03ec -> 0x2322a4b0400 : 140 - 20
Inserting record: tt0000049 to bptree 
Inserting record 25 - 0x2322a4b0360 + 140 = 0x2322a4b03ec
Root exists for key 25 - 0x2322a4b0360 + 140 = 0x2322a4b03ec
address: 0x2322a4b0360 + 140
Cursor: 0x232155e3920
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232155e3920
Cursor: 0x232155e3920
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 8
Level: 0 - Key: 25 < 29 :cursor-keys[ 0 ] 
key 25 lesser than 29
Cursor was: 0x232155e3920
Cursor: 0x232155e3580
Reached leaf node
Comparing: 6 < 8
Search left to right: 25 > 15 & 0 < 6
Search left to right: 25 > 18 & 1 < 6
Search left to right: 25 > 19 & 2 < 6
Search left to right: 25 > 19 & 3 < 6
Search left to right: 25 > 20 & 4 < 6
Search left to right: 25 > 24 & 5 < 6
Checking for duplicates 0 == 25
cursor->numKeys: 6
next: 0x23215445150 - 0
Inserting key to node 6 : 25
cursor->numKeys was: 6
cursor->numKeys: 7
Inserted record tt0000049 at block address: 0x2322a4b0360 -> 0x2322a4b03ec

Writing record: tt0000050
blocksallocated: 5 curblocksizeused + sizeRequired = 180 > 200
offset: 160
curblocksizeused was: 160 + 20
curblocksizeused: 180
actualsizeused was: 960 + 20
actualsizeused: 980
recordAddress: 0x2322a4b0360 - 160
diskaddress: 0x2322a4b0360 - 160
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0360 - 0x2322a4b0400 -> 0x2322a4b0414 : 160 - 20
Inserting record: tt0000050 to bptree 
Inserting record 16 - 0x2322a4b0360 + 160 = 0x2322a4b0400
Root exists for key 16 - 0x2322a4b0360 + 160 = 0x2322a4b0400
address: 0x2322a4b0360 + 160
Cursor: 0x232155e3920
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232155e3920
Cursor: 0x232155e3920
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 8
Level: 0 - Key: 16 < 29 :cursor-keys[ 0 ] 
key 16 lesser than 29
Cursor was: 0x232155e3920
Cursor: 0x232155e3580
Reached leaf node
Comparing: 7 < 8
Search left to right: 16 > 15 & 0 < 7
Checking for duplicates 18 == 16
cursor->numKeys: 7
next: 0x23215445150 - 0
Shifting right: 7 > 6
Shifting right: 6 > 5
Shifting right: 5 > 4
Shifting right: 4 > 3
Shifting right: 3 > 2
Shifting right: 2 > 1
Inserting key to node 1 : 16
cursor->numKeys was: 7
cursor->numKeys: 8
Inserted record tt0000050 at block address: 0x2322a4b0360 -> 0x2322a4b0400

Writing record: tt0000051
blocksallocated: 5 curblocksizeused + sizeRequired = 200 > 200
offset: 180
curblocksizeused was: 180 + 20
curblocksizeused: 200
actualsizeused was: 980 + 20
actualsizeused: 1000
recordAddress: 0x2322a4b0360 - 180
diskaddress: 0x2322a4b0360 - 180
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0360 - 0x2322a4b0414 -> 0x2322a4b0428 : 180 - 20
Inserting record: tt0000051 to bptree 
Inserting record 17 - 0x2322a4b0360 + 180 = 0x2322a4b0414
Root exists for key 17 - 0x2322a4b0360 + 180 = 0x2322a4b0414
address: 0x2322a4b0360 + 180
Cursor: 0x232155e3920
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232155e3920
Cursor: 0x232155e3920
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 8
Level: 0 - Key: 17 < 29 :cursor-keys[ 0 ] 
key 17 lesser than 29
Cursor was: 0x232155e3920
Cursor: 0x232155e3580
Reached leaf node
Comparing: 8 < 8
Creating BPNode of size 8
Created new BPNode at 0x232154452c0
Copied 0 of 8 : 15 - 0x2322a4b0298 + 140
Copied 1 of 8 : 16 - 0x2322a4b0360 + 160
Copied 2 of 8 : 18 - 0x2322a4b0360 + 100
Copied 3 of 8 : 19 - 0x2322a4b0360 + 80
Copied 4 of 8 : 19 - 0x2322a4b0360 + 60
Copied 5 of 8 : 20 - 0x2322a4b0108 + 160
Copied 6 of 8 : 24 - 0x2322a4b0360 + 0
Copied 7 of 8 : 25 - 0x2322a4b0360 + 140
Search left to right: 17 > 15 & 0 < 8
Search left to right: 17 > 16 & 1 < 8
Shifting right: 8 > 7
Shifting right: 7 > 6
Shifting right: 6 > 5
Shifting right: 5 > 4
Shifting right: 4 > 3
Shifting right: 3 > 2
Inserting key to node 2 : 17
Inserting address to node 2 : 0x2322a4b0360 + 180
newLeaf->isLeaf was: 13
newLeaf->isLeaf: 1
Calc the new keys after split
cursor->numKeys was: 8
newLeaf->numKeys was: 0
cursor->numKeys: 5
newLeaf->numKeys: 4
newLeaf->pointers[4] was: 0x23215445150 + 0
newLeaf->pointers[4] : 0x23215445150 + 0
Adding the keyptr back to the nodes
Adding to cursor 0 : 15 - 0x2322a4b0298 + 140
Adding to cursor 1 : 16 - 0x2322a4b0360 + 160
Adding to cursor 2 : 17 - 0x2322a4b0360 + 180
Adding to cursor 3 : 18 - 0x2322a4b0360 + 100
Adding to cursor 4 : 19 - 0x2322a4b0360 + 80
Adding to newLeaf 0 : 19 - 0x2322a4b0360 + 60
Adding to newLeaf 1 : 20 - 0x2322a4b0108 + 160
Adding to newLeaf 2 : 24 - 0x2322a4b0360 + 0
Adding to newLeaf 3 : 25 - 0x2322a4b0360 + 140
cursor->pointers[5] was: 0x2322a4b0108 + 160
cursor->pointers[5] : 0x232154452c0 + 0
wiping cursor->keys[5] was : 20
wiping cursor->keys[5] : 0
wiping cursor->keys[6] was : 24
wiping cursor->keys[6] : 0
wiping cursor->keys[7] was : 25
wiping cursor->keys[7] : 0
wiping cursor->pointers[6] was : 0x2322a4b0360 + 0
wiping cursor->pointers[6] : 0 + 0
wiping cursor->pointers[7] was : 0x2322a4b0360 + 140
wiping cursor->pointers[7] : 0 + 0
wiping cursor->pointers[8] was : 0x23215445150 + 0
wiping cursor->pointers[8] : 0 + 0
Need insert parent in middle: 19
Inserted record tt0000051 at block address: 0x2322a4b0360 -> 0x2322a4b0414

Writing record: tt0000052
blocksallocated: 5 curblocksizeused + sizeRequired = 220 > 200
blockavailable: 749995
blocksallocated * blocksize: 1000 - poolptr + blocksallocated * blocksize: 0x2322a4b0428
blockptr was: 0x2322a4b0360
blockptr: 0x2322a4b0428
blocksallocated: 6 blocksavailable: 749994 blocksizeused: 1200 curblocksizeused: 0
offset: 0
curblocksizeused was: 0 + 20
curblocksizeused: 20
actualsizeused was: 1000 + 20
actualsizeused: 1020
recordAddress: 0x2322a4b0428 - 0
diskaddress: 0x2322a4b0428 - 0
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0428 - 0x2322a4b0428 -> 0x2322a4b043c : 0 - 20
Inserting record: tt0000052 to bptree 
Inserting record 60 - 0x2322a4b0428 + 0 = 0x2322a4b0428
Root exists for key 60 - 0x2322a4b0428 + 0 = 0x2322a4b0428
address: 0x2322a4b0428 + 0
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 1
Level: 0 - Key: 60 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 0
Larger than all other keys in node going to last: 0 == 0
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 4
Level: 1 - Key: 60 < 888 :cursor-keys[ 0 ] 
key 60 lesser than 888
Cursor was: 0x23215445430
Cursor: 0x232155e3ea0
Reached leaf node
Comparing: 5 < 8
Checking for duplicates 687 == 60
cursor->numKeys: 5
next: 0x232155e3be0 - 0
Shifting right: 5 > 4
Shifting right: 4 > 3
Shifting right: 3 > 2
Shifting right: 2 > 1
Shifting right: 1 > 0
Inserting key to node 0 : 60
cursor->numKeys was: 5
cursor->numKeys: 6
Inserted record tt0000052 at block address: 0x2322a4b0428 -> 0x2322a4b0428

Writing record: tt0000053
blocksallocated: 6 curblocksizeused + sizeRequired = 40 > 200
offset: 20
curblocksizeused was: 20 + 20
curblocksizeused: 40
actualsizeused was: 1020 + 20
actualsizeused: 1040
recordAddress: 0x2322a4b0428 - 20
diskaddress: 0x2322a4b0428 - 20
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0428 - 0x2322a4b043c -> 0x2322a4b0450 : 20 - 20
Inserting record: tt0000053 to bptree 
Inserting record 9 - 0x2322a4b0428 + 20 = 0x2322a4b043c
Root exists for key 9 - 0x2322a4b0428 + 20 = 0x2322a4b043c
address: 0x2322a4b0428 + 20
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 1
Level: 0 - Key: 9 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 0
Larger than all other keys in node going to last: 0 == 0
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 4
Level: 1 - Key: 9 < 888 :cursor-keys[ 0 ] 
key 9 lesser than 888
Cursor was: 0x23215445430
Cursor: 0x232155e3ea0
Reached leaf node
Comparing: 6 < 8
Checking for duplicates 60 == 9
cursor->numKeys: 6
next: 0x232155e3be0 - 0
Shifting right: 6 > 5
Shifting right: 5 > 4
Shifting right: 4 > 3
Shifting right: 3 > 2
Shifting right: 2 > 1
Shifting right: 1 > 0
Inserting key to node 0 : 9
cursor->numKeys was: 6
cursor->numKeys: 7
Inserted record tt0000053 at block address: 0x2322a4b0428 -> 0x2322a4b043c

Writing record: tt0000054
blocksallocated: 6 curblocksizeused + sizeRequired = 60 > 200
offset: 40
curblocksizeused was: 40 + 20
curblocksizeused: 60
actualsizeused was: 1040 + 20
actualsizeused: 1060
recordAddress: 0x2322a4b0428 - 40
diskaddress: 0x2322a4b0428 - 40
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0428 - 0x2322a4b0450 -> 0x2322a4b0464 : 40 - 20
Inserting record: tt0000054 to bptree 
Inserting record 21 - 0x2322a4b0428 + 40 = 0x2322a4b0450
Root exists for key 21 - 0x2322a4b0428 + 40 = 0x2322a4b0450
address: 0x2322a4b0428 + 40
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 1
Level: 0 - Key: 21 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 0
Larger than all other keys in node going to last: 0 == 0
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 4
Level: 1 - Key: 21 < 888 :cursor-keys[ 0 ] 
key 21 lesser than 888
Cursor was: 0x23215445430
Cursor: 0x232155e3ea0
Reached leaf node
Comparing: 7 < 8
Search left to right: 21 > 9 & 0 < 7
Checking for duplicates 60 == 21
cursor->numKeys: 7
next: 0x232155e3be0 - 0
Shifting right: 7 > 6
Shifting right: 6 > 5
Shifting right: 5 > 4
Shifting right: 4 > 3
Shifting right: 3 > 2
Shifting right: 2 > 1
Inserting key to node 1 : 21
cursor->numKeys was: 7
cursor->numKeys: 8
Inserted record tt0000054 at block address: 0x2322a4b0428 -> 0x2322a4b0450

Writing record: tt0000055
blocksallocated: 6 curblocksizeused + sizeRequired = 80 > 200
offset: 60
curblocksizeused was: 60 + 20
curblocksizeused: 80
actualsizeused was: 1060 + 20
actualsizeused: 1080
recordAddress: 0x2322a4b0428 - 60
diskaddress: 0x2322a4b0428 - 60
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0428 - 0x2322a4b0464 -> 0x2322a4b0478 : 60 - 20
Inserting record: tt0000055 to bptree 
Inserting record 18 - 0x2322a4b0428 + 60 = 0x2322a4b0464
Root exists for key 18 - 0x2322a4b0428 + 60 = 0x2322a4b0464
address: 0x2322a4b0428 + 60
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 1
Level: 0 - Key: 18 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 0
Larger than all other keys in node going to last: 0 == 0
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 4
Level: 1 - Key: 18 < 888 :cursor-keys[ 0 ] 
key 18 lesser than 888
Cursor was: 0x23215445430
Cursor: 0x232155e3ea0
Reached leaf node
Comparing: 8 < 8
Creating BPNode of size 8
Created new BPNode at 0x23215446830
Copied 0 of 8 : 9 - 0x2322a4b0428 + 20
Copied 1 of 8 : 21 - 0x2322a4b0428 + 40
Copied 2 of 8 : 60 - 0x2322a4b0428 + 0
Copied 3 of 8 : 687 - 0x2322a4b01d0 + 160
Copied 4 of 8 : 817 - 0x2322a4b0108 + 80
Copied 5 of 8 : 837 - 0x2322a4b01d0 + 180
Copied 6 of 8 : 856 - 0x2322a4b0298 + 20
Copied 7 of 8 : 857 - 0x2322a4b01d0 + 120
Search left to right: 18 > 9 & 0 < 8
Shifting right: 8 > 7
Shifting right: 7 > 6
Shifting right: 6 > 5
Shifting right: 5 > 4
Shifting right: 4 > 3
Shifting right: 3 > 2
Shifting right: 2 > 1
Inserting key to node 1 : 18
Inserting address to node 1 : 0x2322a4b0428 + 60
newLeaf->isLeaf was: 13
newLeaf->isLeaf: 1
Calc the new keys after split
cursor->numKeys was: 8
newLeaf->numKeys was: 0
cursor->numKeys: 5
newLeaf->numKeys: 4
newLeaf->pointers[4] was: 0x232155e3be0 + 0
newLeaf->pointers[4] : 0x232155e3be0 + 0
Adding the keyptr back to the nodes
Adding to cursor 0 : 9 - 0x2322a4b0428 + 20
Adding to cursor 1 : 18 - 0x2322a4b0428 + 60
Adding to cursor 2 : 21 - 0x2322a4b0428 + 40
Adding to cursor 3 : 60 - 0x2322a4b0428 + 0
Adding to cursor 4 : 687 - 0x2322a4b01d0 + 160
Adding to newLeaf 0 : 817 - 0x2322a4b0108 + 80
Adding to newLeaf 1 : 837 - 0x2322a4b01d0 + 180
Adding to newLeaf 2 : 856 - 0x2322a4b0298 + 20
Adding to newLeaf 3 : 857 - 0x2322a4b01d0 + 120
cursor->pointers[5] was: 0x2322a4b01d0 + 180
cursor->pointers[5] : 0x23215446830 + 0
wiping cursor->keys[5] was : 837
wiping cursor->keys[5] : 0
wiping cursor->keys[6] was : 856
wiping cursor->keys[6] : 0
wiping cursor->keys[7] was : 857
wiping cursor->keys[7] : 0
wiping cursor->pointers[6] was : 0x2322a4b0298 + 20
wiping cursor->pointers[6] : 0 + 0
wiping cursor->pointers[7] was : 0x2322a4b01d0 + 120
wiping cursor->pointers[7] : 0 + 0
wiping cursor->pointers[8] was : 0x232155e3be0 + 0
wiping cursor->pointers[8] : 0 + 0
Need insert parent in middle: 817
Inserted record tt0000055 at block address: 0x2322a4b0428 -> 0x2322a4b0464

Writing record: tt0000056
blocksallocated: 6 curblocksizeused + sizeRequired = 100 > 200
offset: 80
curblocksizeused was: 80 + 20
curblocksizeused: 100
actualsizeused was: 1080 + 20
actualsizeused: 1100
recordAddress: 0x2322a4b0428 - 80
diskaddress: 0x2322a4b0428 - 80
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0428 - 0x2322a4b0478 -> 0x2322a4b048c : 80 - 20
Inserting record: tt0000056 to bptree 
Inserting record 12 - 0x2322a4b0428 + 80 = 0x2322a4b0478
Root exists for key 12 - 0x2322a4b0428 + 80 = 0x2322a4b0478
address: 0x2322a4b0428 + 80
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 1
Level: 0 - Key: 12 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 0
Larger than all other keys in node going to last: 0 == 0
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 5
Level: 1 - Key: 12 < 817 :cursor-keys[ 0 ] 
key 12 lesser than 817
Cursor was: 0x23215445430
Cursor: 0x232155e3ea0
Reached leaf node
Comparing: 5 < 8
Search left to right: 12 > 9 & 0 < 5
Checking for duplicates 18 == 12
cursor->numKeys: 5
next: 0x23215446830 - 0
Shifting right: 5 > 4
Shifting right: 4 > 3
Shifting right: 3 > 2
Shifting right: 2 > 1
Inserting key to node 1 : 12
cursor->numKeys was: 5
cursor->numKeys: 6
Inserted record tt0000056 at block address: 0x2322a4b0428 -> 0x2322a4b0478

Writing record: tt0000057
blocksallocated: 6 curblocksizeused + sizeRequired = 120 > 200
offset: 100
curblocksizeused was: 100 + 20
curblocksizeused: 120
actualsizeused was: 1100 + 20
actualsizeused: 1120
recordAddress: 0x2322a4b0428 - 100
diskaddress: 0x2322a4b0428 - 100
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0428 - 0x2322a4b048c -> 0x2322a4b04a0 : 100 - 20
Inserting record: tt0000057 to bptree 
Inserting record 17 - 0x2322a4b0428 + 100 = 0x2322a4b048c
Root exists for key 17 - 0x2322a4b0428 + 100 = 0x2322a4b048c
address: 0x2322a4b0428 + 100
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 1
Level: 0 - Key: 17 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 0
Larger than all other keys in node going to last: 0 == 0
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 5
Level: 1 - Key: 17 < 817 :cursor-keys[ 0 ] 
key 17 lesser than 817
Cursor was: 0x23215445430
Cursor: 0x232155e3ea0
Reached leaf node
Comparing: 6 < 8
Search left to right: 17 > 9 & 0 < 6
Search left to right: 17 > 12 & 1 < 6
Checking for duplicates 18 == 17
cursor->numKeys: 6
next: 0x23215446830 - 0
Shifting right: 6 > 5
Shifting right: 5 > 4
Shifting right: 4 > 3
Shifting right: 3 > 2
Inserting key to node 2 : 17
cursor->numKeys was: 6
cursor->numKeys: 7
Inserted record tt0000057 at block address: 0x2322a4b0428 -> 0x2322a4b048c

Writing record: tt0000058
blocksallocated: 6 curblocksizeused + sizeRequired = 140 > 200
offset: 120
curblocksizeused was: 120 + 20
curblocksizeused: 140
actualsizeused was: 1120 + 20
actualsizeused: 1140
recordAddress: 0x2322a4b0428 - 120
diskaddress: 0x2322a4b0428 - 120
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0428 - 0x2322a4b04a0 -> 0x2322a4b04b4 : 120 - 20
Inserting record: tt0000058 to bptree 
Inserting record 16 - 0x2322a4b0428 + 120 = 0x2322a4b04a0
Root exists for key 16 - 0x2322a4b0428 + 120 = 0x2322a4b04a0
address: 0x2322a4b0428 + 120
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 1
Level: 0 - Key: 16 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 0
Larger than all other keys in node going to last: 0 == 0
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 5
Level: 1 - Key: 16 < 817 :cursor-keys[ 0 ] 
key 16 lesser than 817
Cursor was: 0x23215445430
Cursor: 0x232155e3ea0
Reached leaf node
Comparing: 7 < 8
Search left to right: 16 > 9 & 0 < 7
Search left to right: 16 > 12 & 1 < 7
Checking for duplicates 17 == 16
cursor->numKeys: 7
next: 0x23215446830 - 0
Shifting right: 7 > 6
Shifting right: 6 > 5
Shifting right: 5 > 4
Shifting right: 4 > 3
Shifting right: 3 > 2
Inserting key to node 2 : 16
cursor->numKeys was: 7
cursor->numKeys: 8
Inserted record tt0000058 at block address: 0x2322a4b0428 -> 0x2322a4b04a0

Writing record: tt0000059
blocksallocated: 6 curblocksizeused + sizeRequired = 160 > 200
offset: 140
curblocksizeused was: 140 + 20
curblocksizeused: 160
actualsizeused was: 1140 + 20
actualsizeused: 1160
recordAddress: 0x2322a4b0428 - 140
diskaddress: 0x2322a4b0428 - 140
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0428 - 0x2322a4b04b4 -> 0x2322a4b04c8 : 140 - 20
Inserting record: tt0000059 to bptree 
Inserting record 16 - 0x2322a4b0428 + 140 = 0x2322a4b04b4
Root exists for key 16 - 0x2322a4b0428 + 140 = 0x2322a4b04b4
address: 0x2322a4b0428 + 140
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 1
Level: 0 - Key: 16 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 0
Larger than all other keys in node going to last: 0 == 0
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 5
Level: 1 - Key: 16 < 817 :cursor-keys[ 0 ] 
key 16 lesser than 817
Cursor was: 0x23215445430
Cursor: 0x232155e3ea0
Reached leaf node
Comparing: 8 < 8
Creating BPNode of size 8
Created new BPNode at 0x23215446990
Copied 0 of 8 : 9 - 0x2322a4b0428 + 20
Copied 1 of 8 : 12 - 0x2322a4b0428 + 80
Copied 2 of 8 : 16 - 0x2322a4b0428 + 120
Copied 3 of 8 : 17 - 0x2322a4b0428 + 100
Copied 4 of 8 : 18 - 0x2322a4b0428 + 60
Copied 5 of 8 : 21 - 0x2322a4b0428 + 40
Copied 6 of 8 : 60 - 0x2322a4b0428 + 0
Copied 7 of 8 : 687 - 0x2322a4b01d0 + 160
Search left to right: 16 > 9 & 0 < 8
Search left to right: 16 > 12 & 1 < 8
Duplicate Overflow: 16
Shifting right: 8 > 7
Shifting right: 7 > 6
Shifting right: 6 > 5
Shifting right: 5 > 4
Shifting right: 4 > 3
Shifting right: 3 > 2
Inserting key to node 2 : 16
Inserting address to node 2 : 0x2322a4b0428 + 140
newLeaf->isLeaf was: 13
newLeaf->isLeaf: 1
Calc the new keys after split
cursor->numKeys was: 8
newLeaf->numKeys was: 0
cursor->numKeys: 5
newLeaf->numKeys: 4
newLeaf->pointers[4] was: 0x23215446830 + 0
newLeaf->pointers[4] : 0x23215446830 + 0
Adding the keyptr back to the nodes
Adding to cursor 0 : 9 - 0x2322a4b0428 + 20
Adding to cursor 1 : 12 - 0x2322a4b0428 + 80
Adding to cursor 2 : 16 - 0x2322a4b0428 + 140
Adding to cursor 3 : 16 - 0x2322a4b0428 + 120
Adding to cursor 4 : 17 - 0x2322a4b0428 + 100
Adding to newLeaf 0 : 18 - 0x2322a4b0428 + 60
Adding to newLeaf 1 : 21 - 0x2322a4b0428 + 40
Adding to newLeaf 2 : 60 - 0x2322a4b0428 + 0
Adding to newLeaf 3 : 687 - 0x2322a4b01d0 + 160
cursor->pointers[5] was: 0x2322a4b0428 + 40
cursor->pointers[5] : 0x23215446990 + 0
wiping cursor->keys[5] was : 21
wiping cursor->keys[5] : 0
wiping cursor->keys[6] was : 60
wiping cursor->keys[6] : 0
wiping cursor->keys[7] was : 687
wiping cursor->keys[7] : 0
wiping cursor->pointers[6] was : 0x2322a4b0428 + 0
wiping cursor->pointers[6] : 0 + 0
wiping cursor->pointers[7] was : 0x2322a4b01d0 + 160
wiping cursor->pointers[7] : 0 + 0
wiping cursor->pointers[8] was : 0x23215446830 + 0
wiping cursor->pointers[8] : 0 + 0
Need insert parent in middle: 18
Inserted record tt0000059 at block address: 0x2322a4b0428 -> 0x2322a4b04b4

Writing record: tt0000060
blocksallocated: 6 curblocksizeused + sizeRequired = 180 > 200
offset: 160
curblocksizeused was: 160 + 20
curblocksizeused: 180
actualsizeused was: 1160 + 20
actualsizeused: 1180
recordAddress: 0x2322a4b0428 - 160
diskaddress: 0x2322a4b0428 - 160
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0428 - 0x2322a4b04c8 -> 0x2322a4b04dc : 160 - 20
Inserting record: tt0000060 to bptree 
Inserting record 62 - 0x2322a4b0428 + 160 = 0x2322a4b04c8
Root exists for key 62 - 0x2322a4b0428 + 160 = 0x2322a4b04c8
address: 0x2322a4b0428 + 160
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 1
Level: 0 - Key: 62 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 0
Larger than all other keys in node going to last: 0 == 0
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 6
Level: 1 - Key: 62 < 18 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 6
Level: 1 - Key: 62 < 817 :cursor-keys[ 1 ] 
key 62 lesser than 817
Cursor was: 0x23215445430
Cursor: 0x23215446990
Reached leaf node
Comparing: 4 < 8
Search left to right: 62 > 18 & 0 < 4
Search left to right: 62 > 21 & 1 < 4
Search left to right: 62 > 60 & 2 < 4
Checking for duplicates 687 == 62
cursor->numKeys: 4
next: 0x23215446830 - 0
Shifting right: 4 > 3
Inserting key to node 3 : 62
cursor->numKeys was: 4
cursor->numKeys: 5
Inserted record tt0000060 at block address: 0x2322a4b0428 -> 0x2322a4b04c8

Writing record: tt0000061
blocksallocated: 6 curblocksizeused + sizeRequired = 200 > 200
offset: 180
curblocksizeused was: 180 + 20
curblocksizeused: 200
actualsizeused was: 1180 + 20
actualsizeused: 1200
recordAddress: 0x2322a4b0428 - 180
diskaddress: 0x2322a4b0428 - 180
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0428 - 0x2322a4b04dc -> 0x2322a4b04f0 : 180 - 20
Inserting record: tt0000061 to bptree 
Inserting record 14 - 0x2322a4b0428 + 180 = 0x2322a4b04dc
Root exists for key 14 - 0x2322a4b0428 + 180 = 0x2322a4b04dc
address: 0x2322a4b0428 + 180
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 1
Level: 0 - Key: 14 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 0
Larger than all other keys in node going to last: 0 == 0
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 6
Level: 1 - Key: 14 < 18 :cursor-keys[ 0 ] 
key 14 lesser than 18
Cursor was: 0x23215445430
Cursor: 0x232155e3ea0
Reached leaf node
Comparing: 5 < 8
Search left to right: 14 > 9 & 0 < 5
Search left to right: 14 > 12 & 1 < 5
Checking for duplicates 16 == 14
cursor->numKeys: 5
next: 0x23215446990 - 0
Shifting right: 5 > 4
Shifting right: 4 > 3
Shifting right: 3 > 2
Inserting key to node 2 : 14
cursor->numKeys was: 5
cursor->numKeys: 6
Inserted record tt0000061 at block address: 0x2322a4b0428 -> 0x2322a4b04dc

Writing record: tt0000062
blocksallocated: 6 curblocksizeused + sizeRequired = 220 > 200
blockavailable: 749994
blocksallocated * blocksize: 1200 - poolptr + blocksallocated * blocksize: 0x2322a4b04f0
blockptr was: 0x2322a4b0428
blockptr: 0x2322a4b04f0
blocksallocated: 7 blocksavailable: 749993 blocksizeused: 1400 curblocksizeused: 0
offset: 0
curblocksizeused was: 0 + 20
curblocksizeused: 20
actualsizeused was: 1200 + 20
actualsizeused: 1220
recordAddress: 0x2322a4b04f0 - 0
diskaddress: 0x2322a4b04f0 - 0
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b04f0 - 0x2322a4b04f0 -> 0x2322a4b0504 : 0 - 20
Inserting record: tt0000062 to bptree 
Inserting record 159 - 0x2322a4b04f0 + 0 = 0x2322a4b04f0
Root exists for key 159 - 0x2322a4b04f0 + 0 = 0x2322a4b04f0
address: 0x2322a4b04f0 + 0
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 1
Level: 0 - Key: 159 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 0
Larger than all other keys in node going to last: 0 == 0
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 6
Level: 1 - Key: 159 < 18 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 6
Level: 1 - Key: 159 < 817 :cursor-keys[ 1 ] 
key 159 lesser than 817
Cursor was: 0x23215445430
Cursor: 0x23215446990
Reached leaf node
Comparing: 5 < 8
Search left to right: 159 > 18 & 0 < 5
Search left to right: 159 > 21 & 1 < 5
Search left to right: 159 > 60 & 2 < 5
Search left to right: 159 > 62 & 3 < 5
Checking for duplicates 687 == 159
cursor->numKeys: 5
next: 0x23215446830 - 0
Shifting right: 5 > 4
Inserting key to node 4 : 159
cursor->numKeys was: 5
cursor->numKeys: 6
Inserted record tt0000062 at block address: 0x2322a4b04f0 -> 0x2322a4b04f0

Writing record: tt0000063
blocksallocated: 7 curblocksizeused + sizeRequired = 40 > 200
offset: 20
curblocksizeused was: 20 + 20
curblocksizeused: 40
actualsizeused was: 1220 + 20
actualsizeused: 1240
recordAddress: 0x2322a4b04f0 - 20
diskaddress: 0x2322a4b04f0 - 20
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b04f0 - 0x2322a4b0504 -> 0x2322a4b0518 : 20 - 20
Inserting record: tt0000063 to bptree 
Inserting record 15 - 0x2322a4b04f0 + 20 = 0x2322a4b0504
Root exists for key 15 - 0x2322a4b04f0 + 20 = 0x2322a4b0504
address: 0x2322a4b04f0 + 20
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 1
Level: 0 - Key: 15 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 0
Larger than all other keys in node going to last: 0 == 0
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 6
Level: 1 - Key: 15 < 18 :cursor-keys[ 0 ] 
key 15 lesser than 18
Cursor was: 0x23215445430
Cursor: 0x232155e3ea0
Reached leaf node
Comparing: 6 < 8
Search left to right: 15 > 9 & 0 < 6
Search left to right: 15 > 12 & 1 < 6
Search left to right: 15 > 14 & 2 < 6
Checking for duplicates 16 == 15
cursor->numKeys: 6
next: 0x23215446990 - 0
Shifting right: 6 > 5
Shifting right: 5 > 4
Shifting right: 4 > 3
Inserting key to node 3 : 15
cursor->numKeys was: 6
cursor->numKeys: 7
Inserted record tt0000063 at block address: 0x2322a4b04f0 -> 0x2322a4b0504

Writing record: tt0000064
blocksallocated: 7 curblocksizeused + sizeRequired = 60 > 200
offset: 40
curblocksizeused was: 40 + 20
curblocksizeused: 60
actualsizeused was: 1240 + 20
actualsizeused: 1260
recordAddress: 0x2322a4b04f0 - 40
diskaddress: 0x2322a4b04f0 - 40
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b04f0 - 0x2322a4b0518 -> 0x2322a4b052c : 40 - 20
Inserting record: tt0000064 to bptree 
Inserting record 15 - 0x2322a4b04f0 + 40 = 0x2322a4b0518
Root exists for key 15 - 0x2322a4b04f0 + 40 = 0x2322a4b0518
address: 0x2322a4b04f0 + 40
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 1
Level: 0 - Key: 15 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 0
Larger than all other keys in node going to last: 0 == 0
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 6
Level: 1 - Key: 15 < 18 :cursor-keys[ 0 ] 
key 15 lesser than 18
Cursor was: 0x23215445430
Cursor: 0x232155e3ea0
Reached leaf node
Comparing: 7 < 8
Search left to right: 15 > 9 & 0 < 7
Search left to right: 15 > 12 & 1 < 7
Search left to right: 15 > 14 & 2 < 7
Checking for duplicates 15 == 15
Duplicate: 15
Inserted record tt0000064 at block address: 0x2322a4b04f0 -> 0x2322a4b0518

Writing record: tt0000065
blocksallocated: 7 curblocksizeused + sizeRequired = 80 > 200
offset: 60
curblocksizeused was: 60 + 20
curblocksizeused: 80
actualsizeused was: 1260 + 20
actualsizeused: 1280
recordAddress: 0x2322a4b04f0 - 60
diskaddress: 0x2322a4b04f0 - 60
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b04f0 - 0x2322a4b052c -> 0x2322a4b0540 : 60 - 20
Inserting record: tt0000065 to bptree 
Inserting record 15 - 0x2322a4b04f0 + 60 = 0x2322a4b052c
Root exists for key 15 - 0x2322a4b04f0 + 60 = 0x2322a4b052c
address: 0x2322a4b04f0 + 60
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 1
Level: 0 - Key: 15 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 0
Larger than all other keys in node going to last: 0 == 0
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 6
Level: 1 - Key: 15 < 18 :cursor-keys[ 0 ] 
key 15 lesser than 18
Cursor was: 0x23215445430
Cursor: 0x232155e3ea0
Reached leaf node
Comparing: 7 < 8
Search left to right: 15 > 9 & 0 < 7
Search left to right: 15 > 12 & 1 < 7
Search left to right: 15 > 14 & 2 < 7
Checking for duplicates 15 == 15
Duplicate: 15
Inserted record tt0000065 at block address: 0x2322a4b04f0 -> 0x2322a4b052c

Writing record: tt0000066
blocksallocated: 7 curblocksizeused + sizeRequired = 100 > 200
offset: 80
curblocksizeused was: 80 + 20
curblocksizeused: 100
actualsizeused was: 1280 + 20
actualsizeused: 1300
recordAddress: 0x2322a4b04f0 - 80
diskaddress: 0x2322a4b04f0 - 80
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b04f0 - 0x2322a4b0540 -> 0x2322a4b0554 : 80 - 20
Inserting record: tt0000066 to bptree 
Inserting record 15 - 0x2322a4b04f0 + 80 = 0x2322a4b0540
Root exists for key 15 - 0x2322a4b04f0 + 80 = 0x2322a4b0540
address: 0x2322a4b04f0 + 80
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 1
Level: 0 - Key: 15 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 0
Larger than all other keys in node going to last: 0 == 0
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 6
Level: 1 - Key: 15 < 18 :cursor-keys[ 0 ] 
key 15 lesser than 18
Cursor was: 0x23215445430
Cursor: 0x232155e3ea0
Reached leaf node
Comparing: 7 < 8
Search left to right: 15 > 9 & 0 < 7
Search left to right: 15 > 12 & 1 < 7
Search left to right: 15 > 14 & 2 < 7
Checking for duplicates 15 == 15
Duplicate: 15
Inserted record tt0000066 at block address: 0x2322a4b04f0 -> 0x2322a4b0540

Writing record: tt0000067
blocksallocated: 7 curblocksizeused + sizeRequired = 120 > 200
offset: 100
curblocksizeused was: 100 + 20
curblocksizeused: 120
actualsizeused was: 1300 + 20
actualsizeused: 1320
recordAddress: 0x2322a4b04f0 - 100
diskaddress: 0x2322a4b04f0 - 100
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b04f0 - 0x2322a4b0554 -> 0x2322a4b0568 : 100 - 20
Inserting record: tt0000067 to bptree 
Inserting record 43 - 0x2322a4b04f0 + 100 = 0x2322a4b0554
Root exists for key 43 - 0x2322a4b04f0 + 100 = 0x2322a4b0554
address: 0x2322a4b04f0 + 100
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 1
Level: 0 - Key: 43 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 0
Larger than all other keys in node going to last: 0 == 0
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 6
Level: 1 - Key: 43 < 18 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 6
Level: 1 - Key: 43 < 817 :cursor-keys[ 1 ] 
key 43 lesser than 817
Cursor was: 0x23215445430
Cursor: 0x23215446990
Reached leaf node
Comparing: 6 < 8
Search left to right: 43 > 18 & 0 < 6
Search left to right: 43 > 21 & 1 < 6
Checking for duplicates 60 == 43
cursor->numKeys: 6
next: 0x23215446830 - 0
Shifting right: 6 > 5
Shifting right: 5 > 4
Shifting right: 4 > 3
Shifting right: 3 > 2
Inserting key to node 2 : 43
cursor->numKeys was: 6
cursor->numKeys: 7
Inserted record tt0000067 at block address: 0x2322a4b04f0 -> 0x2322a4b0554

Writing record: tt0000068
blocksallocated: 7 curblocksizeused + sizeRequired = 140 > 200
offset: 120
curblocksizeused was: 120 + 20
curblocksizeused: 140
actualsizeused was: 1320 + 20
actualsizeused: 1340
recordAddress: 0x2322a4b04f0 - 120
diskaddress: 0x2322a4b04f0 - 120
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b04f0 - 0x2322a4b0568 -> 0x2322a4b057c : 120 - 20
Inserting record: tt0000068 to bptree 
Inserting record 14 - 0x2322a4b04f0 + 120 = 0x2322a4b0568
Root exists for key 14 - 0x2322a4b04f0 + 120 = 0x2322a4b0568
address: 0x2322a4b04f0 + 120
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 1
Level: 0 - Key: 14 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 0
Larger than all other keys in node going to last: 0 == 0
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 6
Level: 1 - Key: 14 < 18 :cursor-keys[ 0 ] 
key 14 lesser than 18
Cursor was: 0x23215445430
Cursor: 0x232155e3ea0
Reached leaf node
Comparing: 7 < 8
Search left to right: 14 > 9 & 0 < 7
Search left to right: 14 > 12 & 1 < 7
Checking for duplicates 14 == 14
Duplicate: 14
Inserted record tt0000068 at block address: 0x2322a4b04f0 -> 0x2322a4b0568

Writing record: tt0000069
blocksallocated: 7 curblocksizeused + sizeRequired = 160 > 200
offset: 140
curblocksizeused was: 140 + 20
curblocksizeused: 160
actualsizeused was: 1340 + 20
actualsizeused: 1360
recordAddress: 0x2322a4b04f0 - 140
diskaddress: 0x2322a4b04f0 - 140
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b04f0 - 0x2322a4b057c -> 0x2322a4b0590 : 140 - 20
Inserting record: tt0000069 to bptree 
Inserting record 351 - 0x2322a4b04f0 + 140 = 0x2322a4b057c
Root exists for key 351 - 0x2322a4b04f0 + 140 = 0x2322a4b057c
address: 0x2322a4b04f0 + 140
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 1
Level: 0 - Key: 351 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 0
Larger than all other keys in node going to last: 0 == 0
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 6
Level: 1 - Key: 351 < 18 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 6
Level: 1 - Key: 351 < 817 :cursor-keys[ 1 ] 
key 351 lesser than 817
Cursor was: 0x23215445430
Cursor: 0x23215446990
Reached leaf node
Comparing: 7 < 8
Search left to right: 351 > 18 & 0 < 7
Search left to right: 351 > 21 & 1 < 7
Search left to right: 351 > 43 & 2 < 7
Search left to right: 351 > 60 & 3 < 7
Search left to right: 351 > 62 & 4 < 7
Search left to right: 351 > 159 & 5 < 7
Checking for duplicates 687 == 351
cursor->numKeys: 7
next: 0x23215446830 - 0
Shifting right: 7 > 6
Inserting key to node 6 : 351
cursor->numKeys was: 7
cursor->numKeys: 8
Inserted record tt0000069 at block address: 0x2322a4b04f0 -> 0x2322a4b057c

Writing record: tt0000070
blocksallocated: 7 curblocksizeused + sizeRequired = 180 > 200
offset: 160
curblocksizeused was: 160 + 20
curblocksizeused: 180
actualsizeused was: 1360 + 20
actualsizeused: 1380
recordAddress: 0x2322a4b04f0 - 160
diskaddress: 0x2322a4b04f0 - 160
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b04f0 - 0x2322a4b0590 -> 0x2322a4b05a4 : 160 - 20
Inserting record: tt0000070 to bptree 
Inserting record 2263 - 0x2322a4b04f0 + 160 = 0x2322a4b0590
Root exists for key 2263 - 0x2322a4b04f0 + 160 = 0x2322a4b0590
address: 0x2322a4b04f0 + 160
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 1
Level: 0 - Key: 2263 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 0
Larger than all other keys in node going to last: 0 == 0
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 6
Level: 1 - Key: 2263 < 18 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 6
Level: 1 - Key: 2263 < 817 :cursor-keys[ 1 ] 
Checking if larger than all other keys: 1 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 2 < 6
Level: 1 - Key: 2263 < 888 :cursor-keys[ 2 ] 
Checking if larger than all other keys: 2 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 3 < 6
Level: 1 - Key: 2263 < 1342 :cursor-keys[ 3 ] 
Checking if larger than all other keys: 3 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 4 < 6
Level: 1 - Key: 2263 < 2850 :cursor-keys[ 4 ] 
key 2263 lesser than 2850
Cursor was: 0x23215445430
Cursor: 0x232155e3620
Reached leaf node
Comparing: 6 < 8
Search left to right: 2263 > 1342 & 0 < 6
Search left to right: 2263 > 1422 & 1 < 6
Search left to right: 2263 > 1572 & 2 < 6
Search left to right: 2263 > 1645 & 3 < 6
Search left to right: 2263 > 1807 & 4 < 6
Search left to right: 2263 > 2127 & 5 < 6
Checking for duplicates 0 == 2263
cursor->numKeys: 6
next: 0x232155e3d40 - 0
Inserting key to node 6 : 2263
cursor->numKeys was: 6
cursor->numKeys: 7
Inserted record tt0000070 at block address: 0x2322a4b04f0 -> 0x2322a4b0590

Writing record: tt0000071
blocksallocated: 7 curblocksizeused + sizeRequired = 200 > 200
offset: 180
curblocksizeused was: 180 + 20
curblocksizeused: 200
actualsizeused was: 1380 + 20
actualsizeused: 1400
recordAddress: 0x2322a4b04f0 - 180
diskaddress: 0x2322a4b04f0 - 180
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b04f0 - 0x2322a4b05a4 -> 0x2322a4b05b8 : 180 - 20
Inserting record: tt0000071 to bptree 
Inserting record 17 - 0x2322a4b04f0 + 180 = 0x2322a4b05a4
Root exists for key 17 - 0x2322a4b04f0 + 180 = 0x2322a4b05a4
address: 0x2322a4b04f0 + 180
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 1
Level: 0 - Key: 17 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 0
Larger than all other keys in node going to last: 0 == 0
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 6
Level: 1 - Key: 17 < 18 :cursor-keys[ 0 ] 
key 17 lesser than 18
Cursor was: 0x23215445430
Cursor: 0x232155e3ea0
Reached leaf node
Comparing: 7 < 8
Search left to right: 17 > 9 & 0 < 7
Search left to right: 17 > 12 & 1 < 7
Search left to right: 17 > 14 & 2 < 7
Search left to right: 17 > 15 & 3 < 7
Search left to right: 17 > 16 & 4 < 7
Search left to right: 17 > 16 & 5 < 7
Checking for duplicates 17 == 17
Duplicate: 17
Inserted record tt0000071 at block address: 0x2322a4b04f0 -> 0x2322a4b05a4

Writing record: tt0000072
blocksallocated: 7 curblocksizeused + sizeRequired = 220 > 200
blockavailable: 749993
blocksallocated * blocksize: 1400 - poolptr + blocksallocated * blocksize: 0x2322a4b05b8
blockptr was: 0x2322a4b04f0
blockptr: 0x2322a4b05b8
blocksallocated: 8 blocksavailable: 749992 blocksizeused: 1600 curblocksizeused: 0
offset: 0
curblocksizeused was: 0 + 20
curblocksizeused: 20
actualsizeused was: 1400 + 20
actualsizeused: 1420
recordAddress: 0x2322a4b05b8 - 0
diskaddress: 0x2322a4b05b8 - 0
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b05b8 - 0x2322a4b05b8 -> 0x2322a4b05cc : 0 - 20
Inserting record: tt0000072 to bptree 
Inserting record 16 - 0x2322a4b05b8 + 0 = 0x2322a4b05b8
Root exists for key 16 - 0x2322a4b05b8 + 0 = 0x2322a4b05b8
address: 0x2322a4b05b8 + 0
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 1
Level: 0 - Key: 16 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 0
Larger than all other keys in node going to last: 0 == 0
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 6
Level: 1 - Key: 16 < 18 :cursor-keys[ 0 ] 
key 16 lesser than 18
Cursor was: 0x23215445430
Cursor: 0x232155e3ea0
Reached leaf node
Comparing: 7 < 8
Search left to right: 16 > 9 & 0 < 7
Search left to right: 16 > 12 & 1 < 7
Search left to right: 16 > 14 & 2 < 7
Search left to right: 16 > 15 & 3 < 7
Checking for duplicates 16 == 16
Duplicate: 16
Inserted record tt0000072 at block address: 0x2322a4b05b8 -> 0x2322a4b05b8

Writing record: tt0000073
blocksallocated: 8 curblocksizeused + sizeRequired = 40 > 200
offset: 20
curblocksizeused was: 20 + 20
curblocksizeused: 40
actualsizeused was: 1420 + 20
actualsizeused: 1440
recordAddress: 0x2322a4b05b8 - 20
diskaddress: 0x2322a4b05b8 - 20
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b05b8 - 0x2322a4b05cc -> 0x2322a4b05e0 : 20 - 20
Inserting record: tt0000073 to bptree 
Inserting record 14 - 0x2322a4b05b8 + 20 = 0x2322a4b05cc
Root exists for key 14 - 0x2322a4b05b8 + 20 = 0x2322a4b05cc
address: 0x2322a4b05b8 + 20
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 1
Level: 0 - Key: 14 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 0
Larger than all other keys in node going to last: 0 == 0
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 6
Level: 1 - Key: 14 < 18 :cursor-keys[ 0 ] 
key 14 lesser than 18
Cursor was: 0x23215445430
Cursor: 0x232155e3ea0
Reached leaf node
Comparing: 7 < 8
Search left to right: 14 > 9 & 0 < 7
Search left to right: 14 > 12 & 1 < 7
Checking for duplicates 14 == 14
Duplicate: 14
Inserted record tt0000073 at block address: 0x2322a4b05b8 -> 0x2322a4b05cc

Writing record: tt0000074
blocksallocated: 8 curblocksizeused + sizeRequired = 60 > 200
offset: 40
curblocksizeused was: 40 + 20
curblocksizeused: 60
actualsizeused was: 1440 + 20
actualsizeused: 1460
recordAddress: 0x2322a4b05b8 - 40
diskaddress: 0x2322a4b05b8 - 40
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b05b8 - 0x2322a4b05e0 -> 0x2322a4b05f4 : 40 - 20
Inserting record: tt0000074 to bptree 
Inserting record 17 - 0x2322a4b05b8 + 40 = 0x2322a4b05e0
Root exists for key 17 - 0x2322a4b05b8 + 40 = 0x2322a4b05e0
address: 0x2322a4b05b8 + 40
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 1
Level: 0 - Key: 17 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 0
Larger than all other keys in node going to last: 0 == 0
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 6
Level: 1 - Key: 17 < 18 :cursor-keys[ 0 ] 
key 17 lesser than 18
Cursor was: 0x23215445430
Cursor: 0x232155e3ea0
Reached leaf node
Comparing: 7 < 8
Search left to right: 17 > 9 & 0 < 7
Search left to right: 17 > 12 & 1 < 7
Search left to right: 17 > 14 & 2 < 7
Search left to right: 17 > 15 & 3 < 7
Search left to right: 17 > 16 & 4 < 7
Search left to right: 17 > 16 & 5 < 7
Checking for duplicates 17 == 17
Duplicate: 17
Inserted record tt0000074 at block address: 0x2322a4b05b8 -> 0x2322a4b05e0

Writing record: tt0000075
blocksallocated: 8 curblocksizeused + sizeRequired = 80 > 200
offset: 60
curblocksizeused was: 60 + 20
curblocksizeused: 80
actualsizeused was: 1460 + 20
actualsizeused: 1480
recordAddress: 0x2322a4b05b8 - 60
diskaddress: 0x2322a4b05b8 - 60
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b05b8 - 0x2322a4b05f4 -> 0x2322a4b0608 : 60 - 20
Inserting record: tt0000075 to bptree 
Inserting record 1561 - 0x2322a4b05b8 + 60 = 0x2322a4b05f4
Root exists for key 1561 - 0x2322a4b05b8 + 60 = 0x2322a4b05f4
address: 0x2322a4b05b8 + 60
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 1
Level: 0 - Key: 1561 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 0
Larger than all other keys in node going to last: 0 == 0
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 6
Level: 1 - Key: 1561 < 18 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 6
Level: 1 - Key: 1561 < 817 :cursor-keys[ 1 ] 
Checking if larger than all other keys: 1 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 2 < 6
Level: 1 - Key: 1561 < 888 :cursor-keys[ 2 ] 
Checking if larger than all other keys: 2 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 3 < 6
Level: 1 - Key: 1561 < 1342 :cursor-keys[ 3 ] 
Checking if larger than all other keys: 3 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 4 < 6
Level: 1 - Key: 1561 < 2850 :cursor-keys[ 4 ] 
key 1561 lesser than 2850
Cursor was: 0x23215445430
Cursor: 0x232155e3620
Reached leaf node
Comparing: 7 < 8
Search left to right: 1561 > 1342 & 0 < 7
Search left to right: 1561 > 1422 & 1 < 7
Checking for duplicates 1572 == 1561
cursor->numKeys: 7
next: 0x232155e3d40 - 0
Shifting right: 7 > 6
Shifting right: 6 > 5
Shifting right: 5 > 4
Shifting right: 4 > 3
Shifting right: 3 > 2
Inserting key to node 2 : 1561
cursor->numKeys was: 7
cursor->numKeys: 8
Inserted record tt0000075 at block address: 0x2322a4b05b8 -> 0x2322a4b05f4

Writing record: tt0000076
blocksallocated: 8 curblocksizeused + sizeRequired = 100 > 200
offset: 80
curblocksizeused was: 80 + 20
curblocksizeused: 100
actualsizeused was: 1480 + 20
actualsizeused: 1500
recordAddress: 0x2322a4b05b8 - 80
diskaddress: 0x2322a4b05b8 - 80
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b05b8 - 0x2322a4b0608 -> 0x2322a4b061c : 80 - 20
Inserting record: tt0000076 to bptree 
Inserting record 430 - 0x2322a4b05b8 + 80 = 0x2322a4b0608
Root exists for key 430 - 0x2322a4b05b8 + 80 = 0x2322a4b0608
address: 0x2322a4b05b8 + 80
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 1
Level: 0 - Key: 430 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 0
Larger than all other keys in node going to last: 0 == 0
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 6
Level: 1 - Key: 430 < 18 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 6
Level: 1 - Key: 430 < 817 :cursor-keys[ 1 ] 
key 430 lesser than 817
Cursor was: 0x23215445430
Cursor: 0x23215446990
Reached leaf node
Comparing: 8 < 8
Creating BPNode of size 8
Created new BPNode at 0x23215446af0
Copied 0 of 8 : 18 - 0x2322a4b0428 + 60
Copied 1 of 8 : 21 - 0x2322a4b0428 + 40
Copied 2 of 8 : 43 - 0x2322a4b04f0 + 100
Copied 3 of 8 : 60 - 0x2322a4b0428 + 0
Copied 4 of 8 : 62 - 0x2322a4b0428 + 160
Copied 5 of 8 : 159 - 0x2322a4b04f0 + 0
Copied 6 of 8 : 351 - 0x2322a4b04f0 + 140
Copied 7 of 8 : 687 - 0x2322a4b01d0 + 160
Search left to right: 430 > 18 & 0 < 8
Search left to right: 430 > 21 & 1 < 8
Search left to right: 430 > 43 & 2 < 8
Search left to right: 430 > 60 & 3 < 8
Search left to right: 430 > 62 & 4 < 8
Search left to right: 430 > 159 & 5 < 8
Search left to right: 430 > 351 & 6 < 8
Shifting right: 8 > 7
Inserting key to node 7 : 430
Inserting address to node 7 : 0x2322a4b05b8 + 80
newLeaf->isLeaf was: 13
newLeaf->isLeaf: 1
Calc the new keys after split
cursor->numKeys was: 8
newLeaf->numKeys was: 0
cursor->numKeys: 5
newLeaf->numKeys: 4
newLeaf->pointers[4] was: 0x23215446830 + 0
newLeaf->pointers[4] : 0x23215446830 + 0
Adding the keyptr back to the nodes
Adding to cursor 0 : 18 - 0x2322a4b0428 + 60
Adding to cursor 1 : 21 - 0x2322a4b0428 + 40
Adding to cursor 2 : 43 - 0x2322a4b04f0 + 100
Adding to cursor 3 : 60 - 0x2322a4b0428 + 0
Adding to cursor 4 : 62 - 0x2322a4b0428 + 160
Adding to newLeaf 0 : 159 - 0x2322a4b04f0 + 0
Adding to newLeaf 1 : 351 - 0x2322a4b04f0 + 140
Adding to newLeaf 2 : 430 - 0x2322a4b05b8 + 80
Adding to newLeaf 3 : 687 - 0x2322a4b01d0 + 160
cursor->pointers[5] was: 0x2322a4b04f0 + 0
cursor->pointers[5] : 0x23215446af0 + 0
wiping cursor->keys[5] was : 159
wiping cursor->keys[5] : 0
wiping cursor->keys[6] was : 351
wiping cursor->keys[6] : 0
wiping cursor->keys[7] was : 687
wiping cursor->keys[7] : 0
wiping cursor->pointers[6] was : 0x2322a4b04f0 + 140
wiping cursor->pointers[6] : 0 + 0
wiping cursor->pointers[7] was : 0x2322a4b01d0 + 160
wiping cursor->pointers[7] : 0 + 0
wiping cursor->pointers[8] was : 0x23215446830 + 0
wiping cursor->pointers[8] : 0 + 0
Need insert parent in middle: 159
Inserted record tt0000076 at block address: 0x2322a4b05b8 -> 0x2322a4b0608

Writing record: tt0000077
blocksallocated: 8 curblocksizeused + sizeRequired = 120 > 200
offset: 100
curblocksizeused was: 100 + 20
curblocksizeused: 120
actualsizeused was: 1500 + 20
actualsizeused: 1520
recordAddress: 0x2322a4b05b8 - 100
diskaddress: 0x2322a4b05b8 - 100
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b05b8 - 0x2322a4b061c -> 0x2322a4b0630 : 100 - 20
Inserting record: tt0000077 to bptree 
Inserting record 20 - 0x2322a4b05b8 + 100 = 0x2322a4b061c
Root exists for key 20 - 0x2322a4b05b8 + 100 = 0x2322a4b061c
address: 0x2322a4b05b8 + 100
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 1
Level: 0 - Key: 20 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 0
Larger than all other keys in node going to last: 0 == 0
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 7
Level: 1 - Key: 20 < 18 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 6
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 7
Level: 1 - Key: 20 < 159 :cursor-keys[ 1 ] 
key 20 lesser than 159
Cursor was: 0x23215445430
Cursor: 0x23215446990
Reached leaf node
Comparing: 5 < 8
Search left to right: 20 > 18 & 0 < 5
Checking for duplicates 21 == 20
cursor->numKeys: 5
next: 0x23215446af0 - 0
Shifting right: 5 > 4
Shifting right: 4 > 3
Shifting right: 3 > 2
Shifting right: 2 > 1
Inserting key to node 1 : 20
cursor->numKeys was: 5
cursor->numKeys: 6
Inserted record tt0000077 at block address: 0x2322a4b05b8 -> 0x2322a4b061c

Writing record: tt0000078
blocksallocated: 8 curblocksizeused + sizeRequired = 140 > 200
offset: 120
curblocksizeused was: 120 + 20
curblocksizeused: 140
actualsizeused was: 1520 + 20
actualsizeused: 1540
recordAddress: 0x2322a4b05b8 - 120
diskaddress: 0x2322a4b05b8 - 120
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b05b8 - 0x2322a4b0630 -> 0x2322a4b0644 : 120 - 20
Inserting record: tt0000078 to bptree 
Inserting record 49 - 0x2322a4b05b8 + 120 = 0x2322a4b0630
Root exists for key 49 - 0x2322a4b05b8 + 120 = 0x2322a4b0630
address: 0x2322a4b05b8 + 120
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 1
Level: 0 - Key: 49 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 0
Larger than all other keys in node going to last: 0 == 0
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 7
Level: 1 - Key: 49 < 18 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 6
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 7
Level: 1 - Key: 49 < 159 :cursor-keys[ 1 ] 
key 49 lesser than 159
Cursor was: 0x23215445430
Cursor: 0x23215446990
Reached leaf node
Comparing: 6 < 8
Search left to right: 49 > 18 & 0 < 6
Search left to right: 49 > 20 & 1 < 6
Search left to right: 49 > 21 & 2 < 6
Search left to right: 49 > 43 & 3 < 6
Checking for duplicates 60 == 49
cursor->numKeys: 6
next: 0x23215446af0 - 0
Shifting right: 6 > 5
Shifting right: 5 > 4
Inserting key to node 4 : 49
cursor->numKeys was: 6
cursor->numKeys: 7
Inserted record tt0000078 at block address: 0x2322a4b05b8 -> 0x2322a4b0630

Writing record: tt0000079
blocksallocated: 8 curblocksizeused + sizeRequired = 160 > 200
offset: 140
curblocksizeused was: 140 + 20
curblocksizeused: 160
actualsizeused was: 1540 + 20
actualsizeused: 1560
recordAddress: 0x2322a4b05b8 - 140
diskaddress: 0x2322a4b05b8 - 140
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b05b8 - 0x2322a4b0644 -> 0x2322a4b0658 : 140 - 20
Inserting record: tt0000079 to bptree 
Inserting record 19 - 0x2322a4b05b8 + 140 = 0x2322a4b0644
Root exists for key 19 - 0x2322a4b05b8 + 140 = 0x2322a4b0644
address: 0x2322a4b05b8 + 140
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 1
Level: 0 - Key: 19 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 0
Larger than all other keys in node going to last: 0 == 0
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 7
Level: 1 - Key: 19 < 18 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 6
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 7
Level: 1 - Key: 19 < 159 :cursor-keys[ 1 ] 
key 19 lesser than 159
Cursor was: 0x23215445430
Cursor: 0x23215446990
Reached leaf node
Comparing: 7 < 8
Search left to right: 19 > 18 & 0 < 7
Checking for duplicates 20 == 19
cursor->numKeys: 7
next: 0x23215446af0 - 0
Shifting right: 7 > 6
Shifting right: 6 > 5
Shifting right: 5 > 4
Shifting right: 4 > 3
Shifting right: 3 > 2
Shifting right: 2 > 1
Inserting key to node 1 : 19
cursor->numKeys was: 7
cursor->numKeys: 8
Inserted record tt0000079 at block address: 0x2322a4b05b8 -> 0x2322a4b0644

Writing record: tt0000080
blocksallocated: 8 curblocksizeused + sizeRequired = 180 > 200
offset: 160
curblocksizeused was: 160 + 20
curblocksizeused: 180
actualsizeused was: 1560 + 20
actualsizeused: 1580
recordAddress: 0x2322a4b05b8 - 160
diskaddress: 0x2322a4b05b8 - 160
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b05b8 - 0x2322a4b0658 -> 0x2322a4b066c : 160 - 20
Inserting record: tt0000080 to bptree 
Inserting record 15 - 0x2322a4b05b8 + 160 = 0x2322a4b0658
Root exists for key 15 - 0x2322a4b05b8 + 160 = 0x2322a4b0658
address: 0x2322a4b05b8 + 160
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 1
Level: 0 - Key: 15 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 0
Larger than all other keys in node going to last: 0 == 0
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 7
Level: 1 - Key: 15 < 18 :cursor-keys[ 0 ] 
key 15 lesser than 18
Cursor was: 0x23215445430
Cursor: 0x232155e3ea0
Reached leaf node
Comparing: 7 < 8
Search left to right: 15 > 9 & 0 < 7
Search left to right: 15 > 12 & 1 < 7
Search left to right: 15 > 14 & 2 < 7
Checking for duplicates 15 == 15
Duplicate: 15
Inserted record tt0000080 at block address: 0x2322a4b05b8 -> 0x2322a4b0658

Writing record: tt0000081
blocksallocated: 8 curblocksizeused + sizeRequired = 200 > 200
offset: 180
curblocksizeused was: 180 + 20
curblocksizeused: 200
actualsizeused was: 1580 + 20
actualsizeused: 1600
recordAddress: 0x2322a4b05b8 - 180
diskaddress: 0x2322a4b05b8 - 180
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b05b8 - 0x2322a4b066c -> 0x2322a4b0680 : 180 - 20
Inserting record: tt0000081 to bptree 
Inserting record 16 - 0x2322a4b05b8 + 180 = 0x2322a4b066c
Root exists for key 16 - 0x2322a4b05b8 + 180 = 0x2322a4b066c
address: 0x2322a4b05b8 + 180
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 1
Level: 0 - Key: 16 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 0
Larger than all other keys in node going to last: 0 == 0
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 7
Level: 1 - Key: 16 < 18 :cursor-keys[ 0 ] 
key 16 lesser than 18
Cursor was: 0x23215445430
Cursor: 0x232155e3ea0
Reached leaf node
Comparing: 7 < 8
Search left to right: 16 > 9 & 0 < 7
Search left to right: 16 > 12 & 1 < 7
Search left to right: 16 > 14 & 2 < 7
Search left to right: 16 > 15 & 3 < 7
Checking for duplicates 16 == 16
Duplicate: 16
Inserted record tt0000081 at block address: 0x2322a4b05b8 -> 0x2322a4b066c

Writing record: tt0000082
blocksallocated: 8 curblocksizeused + sizeRequired = 220 > 200
blockavailable: 749992
blocksallocated * blocksize: 1600 - poolptr + blocksallocated * blocksize: 0x2322a4b0680
blockptr was: 0x2322a4b05b8
blockptr: 0x2322a4b0680
blocksallocated: 9 blocksavailable: 749991 blocksizeused: 1800 curblocksizeused: 0
offset: 0
curblocksizeused was: 0 + 20
curblocksizeused: 20
actualsizeused was: 1600 + 20
actualsizeused: 1620
recordAddress: 0x2322a4b0680 - 0
diskaddress: 0x2322a4b0680 - 0
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0680 - 0x2322a4b0680 -> 0x2322a4b0694 : 0 - 20
Inserting record: tt0000082 to bptree 
Inserting record 25 - 0x2322a4b0680 + 0 = 0x2322a4b0680
Root exists for key 25 - 0x2322a4b0680 + 0 = 0x2322a4b0680
address: 0x2322a4b0680 + 0
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 1
Level: 0 - Key: 25 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 0
Larger than all other keys in node going to last: 0 == 0
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 7
Level: 1 - Key: 25 < 18 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 6
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 7
Level: 1 - Key: 25 < 159 :cursor-keys[ 1 ] 
key 25 lesser than 159
Cursor was: 0x23215445430
Cursor: 0x23215446990
Reached leaf node
Comparing: 8 < 8
Creating BPNode of size 8
Created new BPNode at 0x23215446c50
Copied 0 of 8 : 18 - 0x2322a4b0428 + 60
Copied 1 of 8 : 19 - 0x2322a4b05b8 + 140
Copied 2 of 8 : 20 - 0x2322a4b05b8 + 100
Copied 3 of 8 : 21 - 0x2322a4b0428 + 40
Copied 4 of 8 : 43 - 0x2322a4b04f0 + 100
Copied 5 of 8 : 49 - 0x2322a4b05b8 + 120
Copied 6 of 8 : 60 - 0x2322a4b0428 + 0
Copied 7 of 8 : 62 - 0x2322a4b0428 + 160
Search left to right: 25 > 18 & 0 < 8
Search left to right: 25 > 19 & 1 < 8
Search left to right: 25 > 20 & 2 < 8
Search left to right: 25 > 21 & 3 < 8
Shifting right: 8 > 7
Shifting right: 7 > 6
Shifting right: 6 > 5
Shifting right: 5 > 4
Inserting key to node 4 : 25
Inserting address to node 4 : 0x2322a4b0680 + 0
newLeaf->isLeaf was: 13
newLeaf->isLeaf: 1
Calc the new keys after split
cursor->numKeys was: 8
newLeaf->numKeys was: 0
cursor->numKeys: 5
newLeaf->numKeys: 4
newLeaf->pointers[4] was: 0x23215446af0 + 0
newLeaf->pointers[4] : 0x23215446af0 + 0
Adding the keyptr back to the nodes
Adding to cursor 0 : 18 - 0x2322a4b0428 + 60
Adding to cursor 1 : 19 - 0x2322a4b05b8 + 140
Adding to cursor 2 : 20 - 0x2322a4b05b8 + 100
Adding to cursor 3 : 21 - 0x2322a4b0428 + 40
Adding to cursor 4 : 25 - 0x2322a4b0680 + 0
Adding to newLeaf 0 : 43 - 0x2322a4b04f0 + 100
Adding to newLeaf 1 : 49 - 0x2322a4b05b8 + 120
Adding to newLeaf 2 : 60 - 0x2322a4b0428 + 0
Adding to newLeaf 3 : 62 - 0x2322a4b0428 + 160
cursor->pointers[5] was: 0x2322a4b05b8 + 120
cursor->pointers[5] : 0x23215446c50 + 0
wiping cursor->keys[5] was : 49
wiping cursor->keys[5] : 0
wiping cursor->keys[6] was : 60
wiping cursor->keys[6] : 0
wiping cursor->keys[7] was : 62
wiping cursor->keys[7] : 0
wiping cursor->pointers[6] was : 0x2322a4b0428 + 0
wiping cursor->pointers[6] : 0 + 0
wiping cursor->pointers[7] was : 0x2322a4b0428 + 160
wiping cursor->pointers[7] : 0 + 0
wiping cursor->pointers[8] was : 0x23215446af0 + 0
wiping cursor->pointers[8] : 0 + 0
Need insert parent in middle: 43
Inserted record tt0000082 at block address: 0x2322a4b0680 -> 0x2322a4b0680

Writing record: tt0000083
blocksallocated: 9 curblocksizeused + sizeRequired = 40 > 200
offset: 20
curblocksizeused was: 20 + 20
curblocksizeused: 40
actualsizeused was: 1620 + 20
actualsizeused: 1640
recordAddress: 0x2322a4b0680 - 20
diskaddress: 0x2322a4b0680 - 20
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0680 - 0x2322a4b0694 -> 0x2322a4b06a8 : 20 - 20
Inserting record: tt0000083 to bptree 
Inserting record 20 - 0x2322a4b0680 + 20 = 0x2322a4b0694
Root exists for key 20 - 0x2322a4b0680 + 20 = 0x2322a4b0694
address: 0x2322a4b0680 + 20
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 1
Level: 0 - Key: 20 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 0
Larger than all other keys in node going to last: 0 == 0
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 8
Level: 1 - Key: 20 < 18 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 8
Level: 1 - Key: 20 < 43 :cursor-keys[ 1 ] 
key 20 lesser than 43
Cursor was: 0x23215445430
Cursor: 0x23215446990
Reached leaf node
Comparing: 5 < 8
Search left to right: 20 > 18 & 0 < 5
Search left to right: 20 > 19 & 1 < 5
Checking for duplicates 20 == 20
Duplicate: 20
Inserted record tt0000083 at block address: 0x2322a4b0680 -> 0x2322a4b0694

Writing record: tt0000084
blocksallocated: 9 curblocksizeused + sizeRequired = 60 > 200
offset: 40
curblocksizeused was: 40 + 20
curblocksizeused: 60
actualsizeused was: 1640 + 20
actualsizeused: 1660
recordAddress: 0x2322a4b0680 - 40
diskaddress: 0x2322a4b0680 - 40
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0680 - 0x2322a4b06a8 -> 0x2322a4b06bc : 40 - 20
Inserting record: tt0000084 to bptree 
Inserting record 17 - 0x2322a4b0680 + 40 = 0x2322a4b06a8
Root exists for key 17 - 0x2322a4b0680 + 40 = 0x2322a4b06a8
address: 0x2322a4b0680 + 40
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 1
Level: 0 - Key: 17 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 0
Larger than all other keys in node going to last: 0 == 0
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 8
Level: 1 - Key: 17 < 18 :cursor-keys[ 0 ] 
key 17 lesser than 18
Cursor was: 0x23215445430
Cursor: 0x232155e3ea0
Reached leaf node
Comparing: 7 < 8
Search left to right: 17 > 9 & 0 < 7
Search left to right: 17 > 12 & 1 < 7
Search left to right: 17 > 14 & 2 < 7
Search left to right: 17 > 15 & 3 < 7
Search left to right: 17 > 16 & 4 < 7
Search left to right: 17 > 16 & 5 < 7
Checking for duplicates 17 == 17
Duplicate: 17
Inserted record tt0000084 at block address: 0x2322a4b0680 -> 0x2322a4b06a8

Writing record: tt0000085
blocksallocated: 9 curblocksizeused + sizeRequired = 80 > 200
offset: 60
curblocksizeused was: 60 + 20
curblocksizeused: 80
actualsizeused was: 1660 + 20
actualsizeused: 1680
recordAddress: 0x2322a4b0680 - 60
diskaddress: 0x2322a4b0680 - 60
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0680 - 0x2322a4b06bc -> 0x2322a4b06d0 : 60 - 20
Inserting record: tt0000085 to bptree 
Inserting record 18 - 0x2322a4b0680 + 60 = 0x2322a4b06bc
Root exists for key 18 - 0x2322a4b0680 + 60 = 0x2322a4b06bc
address: 0x2322a4b0680 + 60
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 1
Level: 0 - Key: 18 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 0
Larger than all other keys in node going to last: 0 == 0
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 8
Level: 1 - Key: 18 < 18 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 8
Level: 1 - Key: 18 < 43 :cursor-keys[ 1 ] 
key 18 lesser than 43
Cursor was: 0x23215445430
Cursor: 0x23215446990
Reached leaf node
Comparing: 5 < 8
Checking for duplicates 18 == 18
Duplicate: 18
Inserted record tt0000085 at block address: 0x2322a4b0680 -> 0x2322a4b06bc

Writing record: tt0000086
blocksallocated: 9 curblocksizeused + sizeRequired = 100 > 200
offset: 80
curblocksizeused was: 80 + 20
curblocksizeused: 100
actualsizeused was: 1680 + 20
actualsizeused: 1700
recordAddress: 0x2322a4b0680 - 80
diskaddress: 0x2322a4b0680 - 80
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0680 - 0x2322a4b06d0 -> 0x2322a4b06e4 : 80 - 20
Inserting record: tt0000086 to bptree 
Inserting record 16 - 0x2322a4b0680 + 80 = 0x2322a4b06d0
Root exists for key 16 - 0x2322a4b0680 + 80 = 0x2322a4b06d0
address: 0x2322a4b0680 + 80
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 1
Level: 0 - Key: 16 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 0
Larger than all other keys in node going to last: 0 == 0
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 8
Level: 1 - Key: 16 < 18 :cursor-keys[ 0 ] 
key 16 lesser than 18
Cursor was: 0x23215445430
Cursor: 0x232155e3ea0
Reached leaf node
Comparing: 7 < 8
Search left to right: 16 > 9 & 0 < 7
Search left to right: 16 > 12 & 1 < 7
Search left to right: 16 > 14 & 2 < 7
Search left to right: 16 > 15 & 3 < 7
Checking for duplicates 16 == 16
Duplicate: 16
Inserted record tt0000086 at block address: 0x2322a4b0680 -> 0x2322a4b06d0

Writing record: tt0000087
blocksallocated: 9 curblocksizeused + sizeRequired = 120 > 200
offset: 100
curblocksizeused was: 100 + 20
curblocksizeused: 120
actualsizeused was: 1700 + 20
actualsizeused: 1720
recordAddress: 0x2322a4b0680 - 100
diskaddress: 0x2322a4b0680 - 100
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0680 - 0x2322a4b06e4 -> 0x2322a4b06f8 : 100 - 20
Inserting record: tt0000087 to bptree 
Inserting record 20 - 0x2322a4b0680 + 100 = 0x2322a4b06e4
Root exists for key 20 - 0x2322a4b0680 + 100 = 0x2322a4b06e4
address: 0x2322a4b0680 + 100
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 1
Level: 0 - Key: 20 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 0
Larger than all other keys in node going to last: 0 == 0
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 8
Level: 1 - Key: 20 < 18 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 8
Level: 1 - Key: 20 < 43 :cursor-keys[ 1 ] 
key 20 lesser than 43
Cursor was: 0x23215445430
Cursor: 0x23215446990
Reached leaf node
Comparing: 5 < 8
Search left to right: 20 > 18 & 0 < 5
Search left to right: 20 > 19 & 1 < 5
Checking for duplicates 20 == 20
Duplicate: 20
Inserted record tt0000087 at block address: 0x2322a4b0680 -> 0x2322a4b06e4

Writing record: tt0000088
blocksallocated: 9 curblocksizeused + sizeRequired = 140 > 200
offset: 120
curblocksizeused was: 120 + 20
curblocksizeused: 140
actualsizeused was: 1720 + 20
actualsizeused: 1740
recordAddress: 0x2322a4b0680 - 120
diskaddress: 0x2322a4b0680 - 120
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0680 - 0x2322a4b06f8 -> 0x2322a4b070c : 120 - 20
Inserting record: tt0000088 to bptree 
Inserting record 17 - 0x2322a4b0680 + 120 = 0x2322a4b06f8
Root exists for key 17 - 0x2322a4b0680 + 120 = 0x2322a4b06f8
address: 0x2322a4b0680 + 120
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 1
Level: 0 - Key: 17 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 0
Larger than all other keys in node going to last: 0 == 0
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 8
Level: 1 - Key: 17 < 18 :cursor-keys[ 0 ] 
key 17 lesser than 18
Cursor was: 0x23215445430
Cursor: 0x232155e3ea0
Reached leaf node
Comparing: 7 < 8
Search left to right: 17 > 9 & 0 < 7
Search left to right: 17 > 12 & 1 < 7
Search left to right: 17 > 14 & 2 < 7
Search left to right: 17 > 15 & 3 < 7
Search left to right: 17 > 16 & 4 < 7
Search left to right: 17 > 16 & 5 < 7
Checking for duplicates 17 == 17
Duplicate: 17
Inserted record tt0000088 at block address: 0x2322a4b0680 -> 0x2322a4b06f8

Writing record: tt0000089
blocksallocated: 9 curblocksizeused + sizeRequired = 160 > 200
offset: 140
curblocksizeused was: 140 + 20
curblocksizeused: 160
actualsizeused was: 1740 + 20
actualsizeused: 1760
recordAddress: 0x2322a4b0680 - 140
diskaddress: 0x2322a4b0680 - 140
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0680 - 0x2322a4b070c -> 0x2322a4b0720 : 140 - 20
Inserting record: tt0000089 to bptree 
Inserting record 831 - 0x2322a4b0680 + 140 = 0x2322a4b070c
Root exists for key 831 - 0x2322a4b0680 + 140 = 0x2322a4b070c
address: 0x2322a4b0680 + 140
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 1
Level: 0 - Key: 831 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 0
Larger than all other keys in node going to last: 0 == 0
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 8
Level: 1 - Key: 831 < 18 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 8
Level: 1 - Key: 831 < 43 :cursor-keys[ 1 ] 
Checking if larger than all other keys: 1 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 2 < 8
Level: 1 - Key: 831 < 159 :cursor-keys[ 2 ] 
Checking if larger than all other keys: 2 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 3 < 8
Level: 1 - Key: 831 < 817 :cursor-keys[ 3 ] 
Checking if larger than all other keys: 3 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 4 < 8
Level: 1 - Key: 831 < 888 :cursor-keys[ 4 ] 
key 831 lesser than 888
Cursor was: 0x23215445430
Cursor: 0x23215446830
Reached leaf node
Comparing: 4 < 8
Search left to right: 831 > 817 & 0 < 4
Checking for duplicates 837 == 831
cursor->numKeys: 4
next: 0x232155e3be0 - 0
Shifting right: 4 > 3
Shifting right: 3 > 2
Shifting right: 2 > 1
Inserting key to node 1 : 831
cursor->numKeys was: 4
cursor->numKeys: 5
Inserted record tt0000089 at block address: 0x2322a4b0680 -> 0x2322a4b070c

Writing record: tt0000090
blocksallocated: 9 curblocksizeused + sizeRequired = 180 > 200
offset: 160
curblocksizeused was: 160 + 20
curblocksizeused: 180
actualsizeused was: 1760 + 20
actualsizeused: 1780
recordAddress: 0x2322a4b0680 - 160
diskaddress: 0x2322a4b0680 - 160
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0680 - 0x2322a4b0720 -> 0x2322a4b0734 : 160 - 20
Inserting record: tt0000090 to bptree 
Inserting record 16 - 0x2322a4b0680 + 160 = 0x2322a4b0720
Root exists for key 16 - 0x2322a4b0680 + 160 = 0x2322a4b0720
address: 0x2322a4b0680 + 160
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 1
Level: 0 - Key: 16 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 0
Larger than all other keys in node going to last: 0 == 0
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 8
Level: 1 - Key: 16 < 18 :cursor-keys[ 0 ] 
key 16 lesser than 18
Cursor was: 0x23215445430
Cursor: 0x232155e3ea0
Reached leaf node
Comparing: 7 < 8
Search left to right: 16 > 9 & 0 < 7
Search left to right: 16 > 12 & 1 < 7
Search left to right: 16 > 14 & 2 < 7
Search left to right: 16 > 15 & 3 < 7
Checking for duplicates 16 == 16
Duplicate: 16
Inserted record tt0000090 at block address: 0x2322a4b0680 -> 0x2322a4b0720

Writing record: tt0000091
blocksallocated: 9 curblocksizeused + sizeRequired = 200 > 200
offset: 180
curblocksizeused was: 180 + 20
curblocksizeused: 200
actualsizeused was: 1780 + 20
actualsizeused: 1800
recordAddress: 0x2322a4b0680 - 180
diskaddress: 0x2322a4b0680 - 180
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0680 - 0x2322a4b0734 -> 0x2322a4b0748 : 180 - 20
Inserting record: tt0000091 to bptree 
Inserting record 2775 - 0x2322a4b0680 + 180 = 0x2322a4b0734
Root exists for key 2775 - 0x2322a4b0680 + 180 = 0x2322a4b0734
address: 0x2322a4b0680 + 180
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 1
Level: 0 - Key: 2775 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 0
Larger than all other keys in node going to last: 0 == 0
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 8
Level: 1 - Key: 2775 < 18 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 8
Level: 1 - Key: 2775 < 43 :cursor-keys[ 1 ] 
Checking if larger than all other keys: 1 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 2 < 8
Level: 1 - Key: 2775 < 159 :cursor-keys[ 2 ] 
Checking if larger than all other keys: 2 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 3 < 8
Level: 1 - Key: 2775 < 817 :cursor-keys[ 3 ] 
Checking if larger than all other keys: 3 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 4 < 8
Level: 1 - Key: 2775 < 888 :cursor-keys[ 4 ] 
Checking if larger than all other keys: 4 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 5 < 8
Level: 1 - Key: 2775 < 1342 :cursor-keys[ 5 ] 
Checking if larger than all other keys: 5 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 6 < 8
Level: 1 - Key: 2775 < 2850 :cursor-keys[ 6 ] 
key 2775 lesser than 2850
Cursor was: 0x23215445430
Cursor: 0x232155e3620
Reached leaf node
Comparing: 8 < 8
Creating BPNode of size 8
Created new BPNode at 0x23215446db0
Copied 0 of 8 : 1342 - 0x2322a4b0040 + 40
Copied 1 of 8 : 1422 - 0x2322a4b0298 + 180
Copied 2 of 8 : 1561 - 0x2322a4b05b8 + 60
Copied 3 of 8 : 1572 - 0x2322a4b0108 + 40
Copied 4 of 8 : 1645 - 0x2322a4b0040 + 0
Copied 5 of 8 : 1807 - 0x2322a4b0040 + 140
Copied 6 of 8 : 2127 - 0x2322a4b0040 + 80
Copied 7 of 8 : 2263 - 0x2322a4b04f0 + 160
Search left to right: 2775 > 1342 & 0 < 8
Search left to right: 2775 > 1422 & 1 < 8
Search left to right: 2775 > 1561 & 2 < 8
Search left to right: 2775 > 1572 & 3 < 8
Search left to right: 2775 > 1645 & 4 < 8
Search left to right: 2775 > 1807 & 5 < 8
Search left to right: 2775 > 2127 & 6 < 8
Search left to right: 2775 > 2263 & 7 < 8
Inserting key to node 8 : 2775
Inserting address to node 8 : 0x2322a4b0680 + 180
newLeaf->isLeaf was: 13
newLeaf->isLeaf: 1
Calc the new keys after split
cursor->numKeys was: 8
newLeaf->numKeys was: 0
cursor->numKeys: 5
newLeaf->numKeys: 4
newLeaf->pointers[4] was: 0x232155e3d40 + 0
newLeaf->pointers[4] : 0x232155e3d40 + 0
Adding the keyptr back to the nodes
Adding to cursor 0 : 1342 - 0x2322a4b0040 + 40
Adding to cursor 1 : 1422 - 0x2322a4b0298 + 180
Adding to cursor 2 : 1561 - 0x2322a4b05b8 + 60
Adding to cursor 3 : 1572 - 0x2322a4b0108 + 40
Adding to cursor 4 : 1645 - 0x2322a4b0040 + 0
Adding to newLeaf 0 : 1807 - 0x2322a4b0040 + 140
Adding to newLeaf 1 : 2127 - 0x2322a4b0040 + 80
Adding to newLeaf 2 : 2263 - 0x2322a4b04f0 + 160
Adding to newLeaf 3 : 2775 - 0x2322a4b0680 + 180
cursor->pointers[5] was: 0x2322a4b0040 + 140
cursor->pointers[5] : 0x23215446db0 + 0
wiping cursor->keys[5] was : 1807
wiping cursor->keys[5] : 0
wiping cursor->keys[6] was : 2127
wiping cursor->keys[6] : 0
wiping cursor->keys[7] was : 2263
wiping cursor->keys[7] : 0
wiping cursor->pointers[6] was : 0x2322a4b0040 + 80
wiping cursor->pointers[6] : 0 + 0
wiping cursor->pointers[7] was : 0x2322a4b04f0 + 160
wiping cursor->pointers[7] : 0 + 0
wiping cursor->pointers[8] was : 0x232155e3d40 + 0
wiping cursor->pointers[8] : 0 + 0
Need insert parent in middle: 1807
Inserted record tt0000091 at block address: 0x2322a4b0680 -> 0x2322a4b0734

Writing record: tt0000092
blocksallocated: 9 curblocksizeused + sizeRequired = 220 > 200
blockavailable: 749991
blocksallocated * blocksize: 1800 - poolptr + blocksallocated * blocksize: 0x2322a4b0748
blockptr was: 0x2322a4b0680
blockptr: 0x2322a4b0748
blocksallocated: 10 blocksavailable: 749990 blocksizeused: 2000 curblocksizeused: 0
offset: 0
curblocksizeused was: 0 + 20
curblocksizeused: 20
actualsizeused was: 1800 + 20
actualsizeused: 1820
recordAddress: 0x2322a4b0748 - 0
diskaddress: 0x2322a4b0748 - 0
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0748 - 0x2322a4b0748 -> 0x2322a4b075c : 0 - 20
Inserting record: tt0000092 to bptree 
Inserting record 14 - 0x2322a4b0748 + 0 = 0x2322a4b0748
Root exists for key 14 - 0x2322a4b0748 + 0 = 0x2322a4b0748
address: 0x2322a4b0748 + 0
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 2
Level: 0 - Key: 14 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 1
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 2
Level: 0 - Key: 14 < 1342 :cursor-keys[ 1 ] 
key 14 lesser than 1342
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 5
Level: 1 - Key: 14 < 18 :cursor-keys[ 0 ] 
key 14 lesser than 18
Cursor was: 0x23215445430
Cursor: 0x232155e3ea0
Reached leaf node
Comparing: 7 < 8
Search left to right: 14 > 9 & 0 < 7
Search left to right: 14 > 12 & 1 < 7
Checking for duplicates 14 == 14
Duplicate: 14
Inserted record tt0000092 at block address: 0x2322a4b0748 -> 0x2322a4b0748

Writing record: tt0000093
blocksallocated: 10 curblocksizeused + sizeRequired = 40 > 200
offset: 20
curblocksizeused was: 20 + 20
curblocksizeused: 40
actualsizeused was: 1820 + 20
actualsizeused: 1840
recordAddress: 0x2322a4b0748 - 20
diskaddress: 0x2322a4b0748 - 20
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0748 - 0x2322a4b075c -> 0x2322a4b0770 : 20 - 20
Inserting record: tt0000093 to bptree 
Inserting record 66 - 0x2322a4b0748 + 20 = 0x2322a4b075c
Root exists for key 66 - 0x2322a4b0748 + 20 = 0x2322a4b075c
address: 0x2322a4b0748 + 20
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 2
Level: 0 - Key: 66 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 1
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 2
Level: 0 - Key: 66 < 1342 :cursor-keys[ 1 ] 
key 66 lesser than 1342
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 5
Level: 1 - Key: 66 < 18 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 4
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 5
Level: 1 - Key: 66 < 43 :cursor-keys[ 1 ] 
Checking if larger than all other keys: 1 == 4
Level: 1 - Leaf: 0 Checking thru all keys of node: 2 < 5
Level: 1 - Key: 66 < 159 :cursor-keys[ 2 ] 
key 66 lesser than 159
Cursor was: 0x23215445430
Cursor: 0x23215446c50
Reached leaf node
Comparing: 4 < 8
Search left to right: 66 > 43 & 0 < 4
Search left to right: 66 > 49 & 1 < 4
Search left to right: 66 > 60 & 2 < 4
Search left to right: 66 > 62 & 3 < 4
Checking for duplicates 0 == 66
cursor->numKeys: 4
next: 0x23215446af0 - 0
Inserting key to node 4 : 66
cursor->numKeys was: 4
cursor->numKeys: 5
Inserted record tt0000093 at block address: 0x2322a4b0748 -> 0x2322a4b075c

Writing record: tt0000094
blocksallocated: 10 curblocksizeused + sizeRequired = 60 > 200
offset: 40
curblocksizeused was: 40 + 20
curblocksizeused: 60
actualsizeused was: 1840 + 20
actualsizeused: 1860
recordAddress: 0x2322a4b0748 - 40
diskaddress: 0x2322a4b0748 - 40
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0748 - 0x2322a4b0770 -> 0x2322a4b0784 : 40 - 20
Inserting record: tt0000094 to bptree 
Inserting record 15 - 0x2322a4b0748 + 40 = 0x2322a4b0770
Root exists for key 15 - 0x2322a4b0748 + 40 = 0x2322a4b0770
address: 0x2322a4b0748 + 40
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 2
Level: 0 - Key: 15 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 1
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 2
Level: 0 - Key: 15 < 1342 :cursor-keys[ 1 ] 
key 15 lesser than 1342
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 5
Level: 1 - Key: 15 < 18 :cursor-keys[ 0 ] 
key 15 lesser than 18
Cursor was: 0x23215445430
Cursor: 0x232155e3ea0
Reached leaf node
Comparing: 7 < 8
Search left to right: 15 > 9 & 0 < 7
Search left to right: 15 > 12 & 1 < 7
Search left to right: 15 > 14 & 2 < 7
Checking for duplicates 15 == 15
Duplicate: 15
Inserted record tt0000094 at block address: 0x2322a4b0748 -> 0x2322a4b0770

Writing record: tt0000095
blocksallocated: 10 curblocksizeused + sizeRequired = 80 > 200
offset: 60
curblocksizeused was: 60 + 20
curblocksizeused: 80
actualsizeused was: 1860 + 20
actualsizeused: 1880
recordAddress: 0x2322a4b0748 - 60
diskaddress: 0x2322a4b0748 - 60
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0748 - 0x2322a4b0784 -> 0x2322a4b0798 : 60 - 20
Inserting record: tt0000095 to bptree 
Inserting record 22 - 0x2322a4b0748 + 60 = 0x2322a4b0784
Root exists for key 22 - 0x2322a4b0748 + 60 = 0x2322a4b0784
address: 0x2322a4b0748 + 60
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 2
Level: 0 - Key: 22 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 1
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 2
Level: 0 - Key: 22 < 1342 :cursor-keys[ 1 ] 
key 22 lesser than 1342
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 5
Level: 1 - Key: 22 < 18 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 4
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 5
Level: 1 - Key: 22 < 43 :cursor-keys[ 1 ] 
key 22 lesser than 43
Cursor was: 0x23215445430
Cursor: 0x23215446990
Reached leaf node
Comparing: 5 < 8
Search left to right: 22 > 18 & 0 < 5
Search left to right: 22 > 19 & 1 < 5
Search left to right: 22 > 20 & 2 < 5
Search left to right: 22 > 21 & 3 < 5
Checking for duplicates 25 == 22
cursor->numKeys: 5
next: 0x23215446c50 - 0
Shifting right: 5 > 4
Inserting key to node 4 : 22
cursor->numKeys was: 5
cursor->numKeys: 6
Inserted record tt0000095 at block address: 0x2322a4b0748 -> 0x2322a4b0784

Writing record: tt0000096
blocksallocated: 10 curblocksizeused + sizeRequired = 100 > 200
offset: 80
curblocksizeused was: 80 + 20
curblocksizeused: 100
actualsizeused was: 1880 + 20
actualsizeused: 1900
recordAddress: 0x2322a4b0748 - 80
diskaddress: 0x2322a4b0748 - 80
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0748 - 0x2322a4b0798 -> 0x2322a4b07ac : 80 - 20
Inserting record: tt0000096 to bptree 
Inserting record 13 - 0x2322a4b0748 + 80 = 0x2322a4b0798
Root exists for key 13 - 0x2322a4b0748 + 80 = 0x2322a4b0798
address: 0x2322a4b0748 + 80
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 2
Level: 0 - Key: 13 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 1
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 2
Level: 0 - Key: 13 < 1342 :cursor-keys[ 1 ] 
key 13 lesser than 1342
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 5
Level: 1 - Key: 13 < 18 :cursor-keys[ 0 ] 
key 13 lesser than 18
Cursor was: 0x23215445430
Cursor: 0x232155e3ea0
Reached leaf node
Comparing: 7 < 8
Search left to right: 13 > 9 & 0 < 7
Search left to right: 13 > 12 & 1 < 7
Checking for duplicates 14 == 13
cursor->numKeys: 7
next: 0x23215446990 - 0
Shifting right: 7 > 6
Shifting right: 6 > 5
Shifting right: 5 > 4
Shifting right: 4 > 3
Shifting right: 3 > 2
Inserting key to node 2 : 13
cursor->numKeys was: 7
cursor->numKeys: 8
Inserted record tt0000096 at block address: 0x2322a4b0748 -> 0x2322a4b0798

Writing record: tt0000097
blocksallocated: 10 curblocksizeused + sizeRequired = 120 > 200
offset: 100
curblocksizeused was: 100 + 20
curblocksizeused: 120
actualsizeused was: 1900 + 20
actualsizeused: 1920
recordAddress: 0x2322a4b0748 - 100
diskaddress: 0x2322a4b0748 - 100
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0748 - 0x2322a4b07ac -> 0x2322a4b07c0 : 100 - 20
Inserting record: tt0000097 to bptree 
Inserting record 19 - 0x2322a4b0748 + 100 = 0x2322a4b07ac
Root exists for key 19 - 0x2322a4b0748 + 100 = 0x2322a4b07ac
address: 0x2322a4b0748 + 100
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 2
Level: 0 - Key: 19 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 1
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 2
Level: 0 - Key: 19 < 1342 :cursor-keys[ 1 ] 
key 19 lesser than 1342
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 5
Level: 1 - Key: 19 < 18 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 4
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 5
Level: 1 - Key: 19 < 43 :cursor-keys[ 1 ] 
key 19 lesser than 43
Cursor was: 0x23215445430
Cursor: 0x23215446990
Reached leaf node
Comparing: 6 < 8
Search left to right: 19 > 18 & 0 < 6
Checking for duplicates 19 == 19
Duplicate: 19
Inserted record tt0000097 at block address: 0x2322a4b0748 -> 0x2322a4b07ac

Writing record: tt0000098
blocksallocated: 10 curblocksizeused + sizeRequired = 140 > 200
offset: 120
curblocksizeused was: 120 + 20
curblocksizeused: 140
actualsizeused was: 1920 + 20
actualsizeused: 1940
recordAddress: 0x2322a4b0748 - 120
diskaddress: 0x2322a4b0748 - 120
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0748 - 0x2322a4b07c0 -> 0x2322a4b07d4 : 120 - 20
Inserting record: tt0000098 to bptree 
Inserting record 21 - 0x2322a4b0748 + 120 = 0x2322a4b07c0
Root exists for key 21 - 0x2322a4b0748 + 120 = 0x2322a4b07c0
address: 0x2322a4b0748 + 120
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 2
Level: 0 - Key: 21 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 1
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 2
Level: 0 - Key: 21 < 1342 :cursor-keys[ 1 ] 
key 21 lesser than 1342
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 5
Level: 1 - Key: 21 < 18 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 4
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 5
Level: 1 - Key: 21 < 43 :cursor-keys[ 1 ] 
key 21 lesser than 43
Cursor was: 0x23215445430
Cursor: 0x23215446990
Reached leaf node
Comparing: 6 < 8
Search left to right: 21 > 18 & 0 < 6
Search left to right: 21 > 19 & 1 < 6
Search left to right: 21 > 20 & 2 < 6
Checking for duplicates 21 == 21
Duplicate: 21
Inserted record tt0000098 at block address: 0x2322a4b0748 -> 0x2322a4b07c0

Writing record: tt0000099
blocksallocated: 10 curblocksizeused + sizeRequired = 160 > 200
offset: 140
curblocksizeused was: 140 + 20
curblocksizeused: 160
actualsizeused was: 1940 + 20
actualsizeused: 1960
recordAddress: 0x2322a4b0748 - 140
diskaddress: 0x2322a4b0748 - 140
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0748 - 0x2322a4b07d4 -> 0x2322a4b07e8 : 140 - 20
Inserting record: tt0000099 to bptree 
Inserting record 16 - 0x2322a4b0748 + 140 = 0x2322a4b07d4
Root exists for key 16 - 0x2322a4b0748 + 140 = 0x2322a4b07d4
address: 0x2322a4b0748 + 140
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 2
Level: 0 - Key: 16 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 1
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 2
Level: 0 - Key: 16 < 1342 :cursor-keys[ 1 ] 
key 16 lesser than 1342
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 5
Level: 1 - Key: 16 < 18 :cursor-keys[ 0 ] 
key 16 lesser than 18
Cursor was: 0x23215445430
Cursor: 0x232155e3ea0
Reached leaf node
Comparing: 8 < 8
Creating BPNode of size 8
Created new BPNode at 0x23215447070
Copied 0 of 8 : 9 - 0x2322a4b0428 + 20
Copied 1 of 8 : 12 - 0x2322a4b0428 + 80
Copied 2 of 8 : 13 - 0x2322a4b0748 + 80
Copied 3 of 8 : 14 - 0x2322a4b0428 + 180
Copied 4 of 8 : 15 - 0x2322a4b04f0 + 20
Copied 5 of 8 : 16 - 0x2322a4b0428 + 140
Copied 6 of 8 : 16 - 0x2322a4b0428 + 120
Copied 7 of 8 : 17 - 0x2322a4b0428 + 100
Search left to right: 16 > 9 & 0 < 8
Search left to right: 16 > 12 & 1 < 8
Search left to right: 16 > 13 & 2 < 8
Search left to right: 16 > 14 & 3 < 8
Search left to right: 16 > 15 & 4 < 8
Duplicate Overflow: 16
Shifting right: 8 > 7
Shifting right: 7 > 6
Shifting right: 6 > 5
Inserting key to node 5 : 16
Inserting address to node 5 : 0x2322a4b0748 + 140
newLeaf->isLeaf was: 13
newLeaf->isLeaf: 1
Calc the new keys after split
cursor->numKeys was: 8
newLeaf->numKeys was: 0
cursor->numKeys: 5
newLeaf->numKeys: 4
newLeaf->pointers[4] was: 0x23215446990 + 0
newLeaf->pointers[4] : 0x23215446990 + 0
Adding the keyptr back to the nodes
Adding to cursor 0 : 9 - 0x2322a4b0428 + 20
Adding to cursor 1 : 12 - 0x2322a4b0428 + 80
Adding to cursor 2 : 13 - 0x2322a4b0748 + 80
Adding to cursor 3 : 14 - 0x2322a4b0428 + 180
Adding to cursor 4 : 15 - 0x2322a4b04f0 + 20
Adding to newLeaf 0 : 16 - 0x2322a4b0748 + 140
Adding to newLeaf 1 : 16 - 0x2322a4b0428 + 140
Adding to newLeaf 2 : 16 - 0x2322a4b0428 + 120
Adding to newLeaf 3 : 17 - 0x2322a4b0428 + 100
cursor->pointers[5] was: 0x2322a4b0428 + 140
cursor->pointers[5] : 0x23215447070 + 0
wiping cursor->keys[5] was : 16
wiping cursor->keys[5] : 0
wiping cursor->keys[6] was : 16
wiping cursor->keys[6] : 0
wiping cursor->keys[7] was : 17
wiping cursor->keys[7] : 0
wiping cursor->pointers[6] was : 0x2322a4b0428 + 120
wiping cursor->pointers[6] : 0 + 0
wiping cursor->pointers[7] was : 0x2322a4b0428 + 100
wiping cursor->pointers[7] : 0 + 0
wiping cursor->pointers[8] was : 0x23215446990 + 0
wiping cursor->pointers[8] : 0 + 0
Need insert parent in middle: 16
Inserted record tt0000099 at block address: 0x2322a4b0748 -> 0x2322a4b07d4

Writing record: tt0000100
blocksallocated: 10 curblocksizeused + sizeRequired = 180 > 200
offset: 160
curblocksizeused was: 160 + 20
curblocksizeused: 180
actualsizeused was: 1960 + 20
actualsizeused: 1980
recordAddress: 0x2322a4b0748 - 160
diskaddress: 0x2322a4b0748 - 160
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0748 - 0x2322a4b07e8 -> 0x2322a4b07fc : 160 - 20
Inserting record: tt0000100 to bptree 
Inserting record 34 - 0x2322a4b0748 + 160 = 0x2322a4b07e8
Root exists for key 34 - 0x2322a4b0748 + 160 = 0x2322a4b07e8
address: 0x2322a4b0748 + 160
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 2
Level: 0 - Key: 34 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 1
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 2
Level: 0 - Key: 34 < 1342 :cursor-keys[ 1 ] 
key 34 lesser than 1342
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 6
Level: 1 - Key: 34 < 16 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 6
Level: 1 - Key: 34 < 18 :cursor-keys[ 1 ] 
Checking if larger than all other keys: 1 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 2 < 6
Level: 1 - Key: 34 < 43 :cursor-keys[ 2 ] 
key 34 lesser than 43
Cursor was: 0x23215445430
Cursor: 0x23215446990
Reached leaf node
Comparing: 6 < 8
Search left to right: 34 > 18 & 0 < 6
Search left to right: 34 > 19 & 1 < 6
Search left to right: 34 > 20 & 2 < 6
Search left to right: 34 > 21 & 3 < 6
Search left to right: 34 > 22 & 4 < 6
Search left to right: 34 > 25 & 5 < 6
Checking for duplicates 0 == 34
cursor->numKeys: 6
next: 0x23215446c50 - 0
Inserting key to node 6 : 34
cursor->numKeys was: 6
cursor->numKeys: 7
Inserted record tt0000100 at block address: 0x2322a4b0748 -> 0x2322a4b07e8

Writing record: tt0000101
blocksallocated: 10 curblocksizeused + sizeRequired = 200 > 200
offset: 180
curblocksizeused was: 180 + 20
curblocksizeused: 200
actualsizeused was: 1980 + 20
actualsizeused: 2000
recordAddress: 0x2322a4b0748 - 180
diskaddress: 0x2322a4b0748 - 180
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0748 - 0x2322a4b07fc -> 0x2322a4b0810 : 180 - 20
Inserting record: tt0000101 to bptree 
Inserting record 14 - 0x2322a4b0748 + 180 = 0x2322a4b07fc
Root exists for key 14 - 0x2322a4b0748 + 180 = 0x2322a4b07fc
address: 0x2322a4b0748 + 180
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 2
Level: 0 - Key: 14 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 1
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 2
Level: 0 - Key: 14 < 1342 :cursor-keys[ 1 ] 
key 14 lesser than 1342
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 6
Level: 1 - Key: 14 < 16 :cursor-keys[ 0 ] 
key 14 lesser than 16
Cursor was: 0x23215445430
Cursor: 0x232155e3ea0
Reached leaf node
Comparing: 5 < 8
Search left to right: 14 > 9 & 0 < 5
Search left to right: 14 > 12 & 1 < 5
Search left to right: 14 > 13 & 2 < 5
Checking for duplicates 14 == 14
Duplicate: 14
Inserted record tt0000101 at block address: 0x2322a4b0748 -> 0x2322a4b07fc

Writing record: tt0000102
blocksallocated: 10 curblocksizeused + sizeRequired = 220 > 200
blockavailable: 749990
blocksallocated * blocksize: 2000 - poolptr + blocksallocated * blocksize: 0x2322a4b0810
blockptr was: 0x2322a4b0748
blockptr: 0x2322a4b0810
blocksallocated: 11 blocksavailable: 749989 blocksizeused: 2200 curblocksizeused: 0
offset: 0
curblocksizeused was: 0 + 20
curblocksizeused: 20
actualsizeused was: 2000 + 20
actualsizeused: 2020
recordAddress: 0x2322a4b0810 - 0
diskaddress: 0x2322a4b0810 - 0
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0810 - 0x2322a4b0810 -> 0x2322a4b0824 : 0 - 20
Inserting record: tt0000102 to bptree 
Inserting record 15 - 0x2322a4b0810 + 0 = 0x2322a4b0810
Root exists for key 15 - 0x2322a4b0810 + 0 = 0x2322a4b0810
address: 0x2322a4b0810 + 0
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 2
Level: 0 - Key: 15 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 1
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 2
Level: 0 - Key: 15 < 1342 :cursor-keys[ 1 ] 
key 15 lesser than 1342
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 6
Level: 1 - Key: 15 < 16 :cursor-keys[ 0 ] 
key 15 lesser than 16
Cursor was: 0x23215445430
Cursor: 0x232155e3ea0
Reached leaf node
Comparing: 5 < 8
Search left to right: 15 > 9 & 0 < 5
Search left to right: 15 > 12 & 1 < 5
Search left to right: 15 > 13 & 2 < 5
Search left to right: 15 > 14 & 3 < 5
Checking for duplicates 15 == 15
Duplicate: 15
Inserted record tt0000102 at block address: 0x2322a4b0810 -> 0x2322a4b0810

Writing record: tt0000103
blocksallocated: 11 curblocksizeused + sizeRequired = 40 > 200
offset: 20
curblocksizeused was: 20 + 20
curblocksizeused: 40
actualsizeused was: 2020 + 20
actualsizeused: 2040
recordAddress: 0x2322a4b0810 - 20
diskaddress: 0x2322a4b0810 - 20
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0810 - 0x2322a4b0824 -> 0x2322a4b0838 : 20 - 20
Inserting record: tt0000103 to bptree 
Inserting record 17 - 0x2322a4b0810 + 20 = 0x2322a4b0824
Root exists for key 17 - 0x2322a4b0810 + 20 = 0x2322a4b0824
address: 0x2322a4b0810 + 20
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 2
Level: 0 - Key: 17 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 1
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 2
Level: 0 - Key: 17 < 1342 :cursor-keys[ 1 ] 
key 17 lesser than 1342
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 6
Level: 1 - Key: 17 < 16 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 6
Level: 1 - Key: 17 < 18 :cursor-keys[ 1 ] 
key 17 lesser than 18
Cursor was: 0x23215445430
Cursor: 0x23215447070
Reached leaf node
Comparing: 4 < 8
Search left to right: 17 > 16 & 0 < 4
Search left to right: 17 > 16 & 1 < 4
Search left to right: 17 > 16 & 2 < 4
Checking for duplicates 17 == 17
Duplicate: 17
Inserted record tt0000103 at block address: 0x2322a4b0810 -> 0x2322a4b0824

Writing record: tt0000104
blocksallocated: 11 curblocksizeused + sizeRequired = 60 > 200
offset: 40
curblocksizeused was: 40 + 20
curblocksizeused: 60
actualsizeused was: 2040 + 20
actualsizeused: 2060
recordAddress: 0x2322a4b0810 - 40
diskaddress: 0x2322a4b0810 - 40
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0810 - 0x2322a4b0838 -> 0x2322a4b084c : 40 - 20
Inserting record: tt0000104 to bptree 
Inserting record 386 - 0x2322a4b0810 + 40 = 0x2322a4b0838
Root exists for key 386 - 0x2322a4b0810 + 40 = 0x2322a4b0838
address: 0x2322a4b0810 + 40
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 2
Level: 0 - Key: 386 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 1
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 2
Level: 0 - Key: 386 < 1342 :cursor-keys[ 1 ] 
key 386 lesser than 1342
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 6
Level: 1 - Key: 386 < 16 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 6
Level: 1 - Key: 386 < 18 :cursor-keys[ 1 ] 
Checking if larger than all other keys: 1 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 2 < 6
Level: 1 - Key: 386 < 43 :cursor-keys[ 2 ] 
Checking if larger than all other keys: 2 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 3 < 6
Level: 1 - Key: 386 < 159 :cursor-keys[ 3 ] 
Checking if larger than all other keys: 3 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 4 < 6
Level: 1 - Key: 386 < 817 :cursor-keys[ 4 ] 
key 386 lesser than 817
Cursor was: 0x23215445430
Cursor: 0x23215446af0
Reached leaf node
Comparing: 4 < 8
Search left to right: 386 > 159 & 0 < 4
Search left to right: 386 > 351 & 1 < 4
Checking for duplicates 430 == 386
cursor->numKeys: 4
next: 0x23215446830 - 0
Shifting right: 4 > 3
Shifting right: 3 > 2
Inserting key to node 2 : 386
cursor->numKeys was: 4
cursor->numKeys: 5
Inserted record tt0000104 at block address: 0x2322a4b0810 -> 0x2322a4b0838

Writing record: tt0000105
blocksallocated: 11 curblocksizeused + sizeRequired = 80 > 200
offset: 60
curblocksizeused was: 60 + 20
curblocksizeused: 80
actualsizeused was: 2060 + 20
actualsizeused: 2080
recordAddress: 0x2322a4b0810 - 60
diskaddress: 0x2322a4b0810 - 60
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0810 - 0x2322a4b084c -> 0x2322a4b0860 : 60 - 20
Inserting record: tt0000105 to bptree 
Inserting record 15 - 0x2322a4b0810 + 60 = 0x2322a4b084c
Root exists for key 15 - 0x2322a4b0810 + 60 = 0x2322a4b084c
address: 0x2322a4b0810 + 60
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 2
Level: 0 - Key: 15 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 1
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 2
Level: 0 - Key: 15 < 1342 :cursor-keys[ 1 ] 
key 15 lesser than 1342
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 6
Level: 1 - Key: 15 < 16 :cursor-keys[ 0 ] 
key 15 lesser than 16
Cursor was: 0x23215445430
Cursor: 0x232155e3ea0
Reached leaf node
Comparing: 5 < 8
Search left to right: 15 > 9 & 0 < 5
Search left to right: 15 > 12 & 1 < 5
Search left to right: 15 > 13 & 2 < 5
Search left to right: 15 > 14 & 3 < 5
Checking for duplicates 15 == 15
Duplicate: 15
Inserted record tt0000105 at block address: 0x2322a4b0810 -> 0x2322a4b084c

Writing record: tt0000106
blocksallocated: 11 curblocksizeused + sizeRequired = 100 > 200
offset: 80
curblocksizeused was: 80 + 20
curblocksizeused: 100
actualsizeused was: 2080 + 20
actualsizeused: 2100
recordAddress: 0x2322a4b0810 - 80
diskaddress: 0x2322a4b0810 - 80
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0810 - 0x2322a4b0860 -> 0x2322a4b0874 : 80 - 20
Inserting record: tt0000106 to bptree 
Inserting record 13 - 0x2322a4b0810 + 80 = 0x2322a4b0860
Root exists for key 13 - 0x2322a4b0810 + 80 = 0x2322a4b0860
address: 0x2322a4b0810 + 80
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 2
Level: 0 - Key: 13 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 1
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 2
Level: 0 - Key: 13 < 1342 :cursor-keys[ 1 ] 
key 13 lesser than 1342
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 6
Level: 1 - Key: 13 < 16 :cursor-keys[ 0 ] 
key 13 lesser than 16
Cursor was: 0x23215445430
Cursor: 0x232155e3ea0
Reached leaf node
Comparing: 5 < 8
Search left to right: 13 > 9 & 0 < 5
Search left to right: 13 > 12 & 1 < 5
Checking for duplicates 13 == 13
Duplicate: 13
Inserted record tt0000106 at block address: 0x2322a4b0810 -> 0x2322a4b0860

Writing record: tt0000107
blocksallocated: 11 curblocksizeused + sizeRequired = 120 > 200
offset: 100
curblocksizeused was: 100 + 20
curblocksizeused: 120
actualsizeused was: 2100 + 20
actualsizeused: 2120
recordAddress: 0x2322a4b0810 - 100
diskaddress: 0x2322a4b0810 - 100
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0810 - 0x2322a4b0874 -> 0x2322a4b0888 : 100 - 20
Inserting record: tt0000107 to bptree 
Inserting record 15 - 0x2322a4b0810 + 100 = 0x2322a4b0874
Root exists for key 15 - 0x2322a4b0810 + 100 = 0x2322a4b0874
address: 0x2322a4b0810 + 100
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 2
Level: 0 - Key: 15 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 1
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 2
Level: 0 - Key: 15 < 1342 :cursor-keys[ 1 ] 
key 15 lesser than 1342
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 6
Level: 1 - Key: 15 < 16 :cursor-keys[ 0 ] 
key 15 lesser than 16
Cursor was: 0x23215445430
Cursor: 0x232155e3ea0
Reached leaf node
Comparing: 5 < 8
Search left to right: 15 > 9 & 0 < 5
Search left to right: 15 > 12 & 1 < 5
Search left to right: 15 > 13 & 2 < 5
Search left to right: 15 > 14 & 3 < 5
Checking for duplicates 15 == 15
Duplicate: 15
Inserted record tt0000107 at block address: 0x2322a4b0810 -> 0x2322a4b0874

Writing record: tt0000108
blocksallocated: 11 curblocksizeused + sizeRequired = 140 > 200
offset: 120
curblocksizeused was: 120 + 20
curblocksizeused: 140
actualsizeused was: 2120 + 20
actualsizeused: 2140
recordAddress: 0x2322a4b0810 - 120
diskaddress: 0x2322a4b0810 - 120
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0810 - 0x2322a4b0888 -> 0x2322a4b089c : 120 - 20
Inserting record: tt0000108 to bptree 
Inserting record 442 - 0x2322a4b0810 + 120 = 0x2322a4b0888
Root exists for key 442 - 0x2322a4b0810 + 120 = 0x2322a4b0888
address: 0x2322a4b0810 + 120
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 2
Level: 0 - Key: 442 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 1
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 2
Level: 0 - Key: 442 < 1342 :cursor-keys[ 1 ] 
key 442 lesser than 1342
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 6
Level: 1 - Key: 442 < 16 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 6
Level: 1 - Key: 442 < 18 :cursor-keys[ 1 ] 
Checking if larger than all other keys: 1 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 2 < 6
Level: 1 - Key: 442 < 43 :cursor-keys[ 2 ] 
Checking if larger than all other keys: 2 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 3 < 6
Level: 1 - Key: 442 < 159 :cursor-keys[ 3 ] 
Checking if larger than all other keys: 3 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 4 < 6
Level: 1 - Key: 442 < 817 :cursor-keys[ 4 ] 
key 442 lesser than 817
Cursor was: 0x23215445430
Cursor: 0x23215446af0
Reached leaf node
Comparing: 5 < 8
Search left to right: 442 > 159 & 0 < 5
Search left to right: 442 > 351 & 1 < 5
Search left to right: 442 > 386 & 2 < 5
Search left to right: 442 > 430 & 3 < 5
Checking for duplicates 687 == 442
cursor->numKeys: 5
next: 0x23215446830 - 0
Shifting right: 5 > 4
Inserting key to node 4 : 442
cursor->numKeys was: 5
cursor->numKeys: 6
Inserted record tt0000108 at block address: 0x2322a4b0810 -> 0x2322a4b0888

Writing record: tt0000109
blocksallocated: 11 curblocksizeused + sizeRequired = 160 > 200
offset: 140
curblocksizeused was: 140 + 20
curblocksizeused: 160
actualsizeused was: 2140 + 20
actualsizeused: 2160
recordAddress: 0x2322a4b0810 - 140
diskaddress: 0x2322a4b0810 - 140
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0810 - 0x2322a4b089c -> 0x2322a4b08b0 : 140 - 20
Inserting record: tt0000109 to bptree 
Inserting record 436 - 0x2322a4b0810 + 140 = 0x2322a4b089c
Root exists for key 436 - 0x2322a4b0810 + 140 = 0x2322a4b089c
address: 0x2322a4b0810 + 140
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 2
Level: 0 - Key: 436 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 1
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 2
Level: 0 - Key: 436 < 1342 :cursor-keys[ 1 ] 
key 436 lesser than 1342
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 6
Level: 1 - Key: 436 < 16 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 6
Level: 1 - Key: 436 < 18 :cursor-keys[ 1 ] 
Checking if larger than all other keys: 1 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 2 < 6
Level: 1 - Key: 436 < 43 :cursor-keys[ 2 ] 
Checking if larger than all other keys: 2 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 3 < 6
Level: 1 - Key: 436 < 159 :cursor-keys[ 3 ] 
Checking if larger than all other keys: 3 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 4 < 6
Level: 1 - Key: 436 < 817 :cursor-keys[ 4 ] 
key 436 lesser than 817
Cursor was: 0x23215445430
Cursor: 0x23215446af0
Reached leaf node
Comparing: 6 < 8
Search left to right: 436 > 159 & 0 < 6
Search left to right: 436 > 351 & 1 < 6
Search left to right: 436 > 386 & 2 < 6
Search left to right: 436 > 430 & 3 < 6
Checking for duplicates 442 == 436
cursor->numKeys: 6
next: 0x23215446830 - 0
Shifting right: 6 > 5
Shifting right: 5 > 4
Inserting key to node 4 : 436
cursor->numKeys was: 6
cursor->numKeys: 7
Inserted record tt0000109 at block address: 0x2322a4b0810 -> 0x2322a4b089c

Writing record: tt0000110
blocksallocated: 11 curblocksizeused + sizeRequired = 180 > 200
offset: 160
curblocksizeused was: 160 + 20
curblocksizeused: 180
actualsizeused was: 2160 + 20
actualsizeused: 2180
recordAddress: 0x2322a4b0810 - 160
diskaddress: 0x2322a4b0810 - 160
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0810 - 0x2322a4b08b0 -> 0x2322a4b08c4 : 160 - 20
Inserting record: tt0000110 to bptree 
Inserting record 439 - 0x2322a4b0810 + 160 = 0x2322a4b08b0
Root exists for key 439 - 0x2322a4b0810 + 160 = 0x2322a4b08b0
address: 0x2322a4b0810 + 160
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 2
Level: 0 - Key: 439 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 1
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 2
Level: 0 - Key: 439 < 1342 :cursor-keys[ 1 ] 
key 439 lesser than 1342
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 6
Level: 1 - Key: 439 < 16 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 6
Level: 1 - Key: 439 < 18 :cursor-keys[ 1 ] 
Checking if larger than all other keys: 1 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 2 < 6
Level: 1 - Key: 439 < 43 :cursor-keys[ 2 ] 
Checking if larger than all other keys: 2 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 3 < 6
Level: 1 - Key: 439 < 159 :cursor-keys[ 3 ] 
Checking if larger than all other keys: 3 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 4 < 6
Level: 1 - Key: 439 < 817 :cursor-keys[ 4 ] 
key 439 lesser than 817
Cursor was: 0x23215445430
Cursor: 0x23215446af0
Reached leaf node
Comparing: 7 < 8
Search left to right: 439 > 159 & 0 < 7
Search left to right: 439 > 351 & 1 < 7
Search left to right: 439 > 386 & 2 < 7
Search left to right: 439 > 430 & 3 < 7
Search left to right: 439 > 436 & 4 < 7
Checking for duplicates 442 == 439
cursor->numKeys: 7
next: 0x23215446830 - 0
Shifting right: 7 > 6
Shifting right: 6 > 5
Inserting key to node 5 : 439
cursor->numKeys was: 7
cursor->numKeys: 8
Inserted record tt0000110 at block address: 0x2322a4b0810 -> 0x2322a4b08b0

Writing record: tt0000111
blocksallocated: 11 curblocksizeused + sizeRequired = 200 > 200
offset: 180
curblocksizeused was: 180 + 20
curblocksizeused: 200
actualsizeused was: 2180 + 20
actualsizeused: 2200
recordAddress: 0x2322a4b0810 - 180
diskaddress: 0x2322a4b0810 - 180
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0810 - 0x2322a4b08c4 -> 0x2322a4b08d8 : 180 - 20
Inserting record: tt0000111 to bptree 
Inserting record 448 - 0x2322a4b0810 + 180 = 0x2322a4b08c4
Root exists for key 448 - 0x2322a4b0810 + 180 = 0x2322a4b08c4
address: 0x2322a4b0810 + 180
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 2
Level: 0 - Key: 448 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 1
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 2
Level: 0 - Key: 448 < 1342 :cursor-keys[ 1 ] 
key 448 lesser than 1342
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 6
Level: 1 - Key: 448 < 16 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 6
Level: 1 - Key: 448 < 18 :cursor-keys[ 1 ] 
Checking if larger than all other keys: 1 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 2 < 6
Level: 1 - Key: 448 < 43 :cursor-keys[ 2 ] 
Checking if larger than all other keys: 2 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 3 < 6
Level: 1 - Key: 448 < 159 :cursor-keys[ 3 ] 
Checking if larger than all other keys: 3 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 4 < 6
Level: 1 - Key: 448 < 817 :cursor-keys[ 4 ] 
key 448 lesser than 817
Cursor was: 0x23215445430
Cursor: 0x23215446af0
Reached leaf node
Comparing: 8 < 8
Creating BPNode of size 8
Created new BPNode at 0x232154471d0
Copied 0 of 8 : 159 - 0x2322a4b04f0 + 0
Copied 1 of 8 : 351 - 0x2322a4b04f0 + 140
Copied 2 of 8 : 386 - 0x2322a4b0810 + 40
Copied 3 of 8 : 430 - 0x2322a4b05b8 + 80
Copied 4 of 8 : 436 - 0x2322a4b0810 + 140
Copied 5 of 8 : 439 - 0x2322a4b0810 + 160
Copied 6 of 8 : 442 - 0x2322a4b0810 + 120
Copied 7 of 8 : 687 - 0x2322a4b01d0 + 160
Search left to right: 448 > 159 & 0 < 8
Search left to right: 448 > 351 & 1 < 8
Search left to right: 448 > 386 & 2 < 8
Search left to right: 448 > 430 & 3 < 8
Search left to right: 448 > 436 & 4 < 8
Search left to right: 448 > 439 & 5 < 8
Search left to right: 448 > 442 & 6 < 8
Shifting right: 8 > 7
Inserting key to node 7 : 448
Inserting address to node 7 : 0x2322a4b0810 + 180
newLeaf->isLeaf was: 13
newLeaf->isLeaf: 1
Calc the new keys after split
cursor->numKeys was: 8
newLeaf->numKeys was: 0
cursor->numKeys: 5
newLeaf->numKeys: 4
newLeaf->pointers[4] was: 0x23215446830 + 0
newLeaf->pointers[4] : 0x23215446830 + 0
Adding the keyptr back to the nodes
Adding to cursor 0 : 159 - 0x2322a4b04f0 + 0
Adding to cursor 1 : 351 - 0x2322a4b04f0 + 140
Adding to cursor 2 : 386 - 0x2322a4b0810 + 40
Adding to cursor 3 : 430 - 0x2322a4b05b8 + 80
Adding to cursor 4 : 436 - 0x2322a4b0810 + 140
Adding to newLeaf 0 : 439 - 0x2322a4b0810 + 160
Adding to newLeaf 1 : 442 - 0x2322a4b0810 + 120
Adding to newLeaf 2 : 448 - 0x2322a4b0810 + 180
Adding to newLeaf 3 : 687 - 0x2322a4b01d0 + 160
cursor->pointers[5] was: 0x2322a4b0810 + 160
cursor->pointers[5] : 0x232154471d0 + 0
wiping cursor->keys[5] was : 439
wiping cursor->keys[5] : 0
wiping cursor->keys[6] was : 442
wiping cursor->keys[6] : 0
wiping cursor->keys[7] was : 687
wiping cursor->keys[7] : 0
wiping cursor->pointers[6] was : 0x2322a4b0810 + 120
wiping cursor->pointers[6] : 0 + 0
wiping cursor->pointers[7] was : 0x2322a4b01d0 + 160
wiping cursor->pointers[7] : 0 + 0
wiping cursor->pointers[8] was : 0x23215446830 + 0
wiping cursor->pointers[8] : 0 + 0
Need insert parent in middle: 439
Inserted record tt0000111 at block address: 0x2322a4b0810 -> 0x2322a4b08c4

Writing record: tt0000112
blocksallocated: 11 curblocksizeused + sizeRequired = 220 > 200
blockavailable: 749989
blocksallocated * blocksize: 2200 - poolptr + blocksallocated * blocksize: 0x2322a4b08d8
blockptr was: 0x2322a4b0810
blockptr: 0x2322a4b08d8
blocksallocated: 12 blocksavailable: 749988 blocksizeused: 2400 curblocksizeused: 0
offset: 0
curblocksizeused was: 0 + 20
curblocksizeused: 20
actualsizeused was: 2200 + 20
actualsizeused: 2220
recordAddress: 0x2322a4b08d8 - 0
diskaddress: 0x2322a4b08d8 - 0
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b08d8 - 0x2322a4b08d8 -> 0x2322a4b08ec : 0 - 20
Inserting record: tt0000112 to bptree 
Inserting record 437 - 0x2322a4b08d8 + 0 = 0x2322a4b08d8
Root exists for key 437 - 0x2322a4b08d8 + 0 = 0x2322a4b08d8
address: 0x2322a4b08d8 + 0
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 2
Level: 0 - Key: 437 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 1
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 2
Level: 0 - Key: 437 < 1342 :cursor-keys[ 1 ] 
key 437 lesser than 1342
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 7
Level: 1 - Key: 437 < 16 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 6
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 7
Level: 1 - Key: 437 < 18 :cursor-keys[ 1 ] 
Checking if larger than all other keys: 1 == 6
Level: 1 - Leaf: 0 Checking thru all keys of node: 2 < 7
Level: 1 - Key: 437 < 43 :cursor-keys[ 2 ] 
Checking if larger than all other keys: 2 == 6
Level: 1 - Leaf: 0 Checking thru all keys of node: 3 < 7
Level: 1 - Key: 437 < 159 :cursor-keys[ 3 ] 
Checking if larger than all other keys: 3 == 6
Level: 1 - Leaf: 0 Checking thru all keys of node: 4 < 7
Level: 1 - Key: 437 < 439 :cursor-keys[ 4 ] 
key 437 lesser than 439
Cursor was: 0x23215445430
Cursor: 0x23215446af0
Reached leaf node
Comparing: 5 < 8
Search left to right: 437 > 159 & 0 < 5
Search left to right: 437 > 351 & 1 < 5
Search left to right: 437 > 386 & 2 < 5
Search left to right: 437 > 430 & 3 < 5
Search left to right: 437 > 436 & 4 < 5
Checking for duplicates 0 == 437
cursor->numKeys: 5
next: 0x232154471d0 - 0
Inserting key to node 5 : 437
cursor->numKeys was: 5
cursor->numKeys: 6
Inserted record tt0000112 at block address: 0x2322a4b08d8 -> 0x2322a4b08d8

Writing record: tt0000113
blocksallocated: 12 curblocksizeused + sizeRequired = 40 > 200
offset: 20
curblocksizeused was: 20 + 20
curblocksizeused: 40
actualsizeused was: 2220 + 20
actualsizeused: 2240
recordAddress: 0x2322a4b08d8 - 20
diskaddress: 0x2322a4b08d8 - 20
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b08d8 - 0x2322a4b08ec -> 0x2322a4b0900 : 20 - 20
Inserting record: tt0000113 to bptree 
Inserting record 451 - 0x2322a4b08d8 + 20 = 0x2322a4b08ec
Root exists for key 451 - 0x2322a4b08d8 + 20 = 0x2322a4b08ec
address: 0x2322a4b08d8 + 20
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 2
Level: 0 - Key: 451 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 1
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 2
Level: 0 - Key: 451 < 1342 :cursor-keys[ 1 ] 
key 451 lesser than 1342
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 7
Level: 1 - Key: 451 < 16 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 6
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 7
Level: 1 - Key: 451 < 18 :cursor-keys[ 1 ] 
Checking if larger than all other keys: 1 == 6
Level: 1 - Leaf: 0 Checking thru all keys of node: 2 < 7
Level: 1 - Key: 451 < 43 :cursor-keys[ 2 ] 
Checking if larger than all other keys: 2 == 6
Level: 1 - Leaf: 0 Checking thru all keys of node: 3 < 7
Level: 1 - Key: 451 < 159 :cursor-keys[ 3 ] 
Checking if larger than all other keys: 3 == 6
Level: 1 - Leaf: 0 Checking thru all keys of node: 4 < 7
Level: 1 - Key: 451 < 439 :cursor-keys[ 4 ] 
Checking if larger than all other keys: 4 == 6
Level: 1 - Leaf: 0 Checking thru all keys of node: 5 < 7
Level: 1 - Key: 451 < 817 :cursor-keys[ 5 ] 
key 451 lesser than 817
Cursor was: 0x23215445430
Cursor: 0x232154471d0
Reached leaf node
Comparing: 4 < 8
Search left to right: 451 > 439 & 0 < 4
Search left to right: 451 > 442 & 1 < 4
Search left to right: 451 > 448 & 2 < 4
Checking for duplicates 687 == 451
cursor->numKeys: 4
next: 0x23215446830 - 0
Shifting right: 4 > 3
Inserting key to node 3 : 451
cursor->numKeys was: 4
cursor->numKeys: 5
Inserted record tt0000113 at block address: 0x2322a4b08d8 -> 0x2322a4b08ec

Writing record: tt0000114
blocksallocated: 12 curblocksizeused + sizeRequired = 60 > 200
offset: 40
curblocksizeused was: 40 + 20
curblocksizeused: 60
actualsizeused was: 2240 + 20
actualsizeused: 2260
recordAddress: 0x2322a4b08d8 - 40
diskaddress: 0x2322a4b08d8 - 40
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b08d8 - 0x2322a4b0900 -> 0x2322a4b0914 : 40 - 20
Inserting record: tt0000114 to bptree 
Inserting record 16 - 0x2322a4b08d8 + 40 = 0x2322a4b0900
Root exists for key 16 - 0x2322a4b08d8 + 40 = 0x2322a4b0900
address: 0x2322a4b08d8 + 40
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 2
Level: 0 - Key: 16 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 1
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 2
Level: 0 - Key: 16 < 1342 :cursor-keys[ 1 ] 
key 16 lesser than 1342
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 7
Level: 1 - Key: 16 < 16 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 6
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 7
Level: 1 - Key: 16 < 18 :cursor-keys[ 1 ] 
key 16 lesser than 18
Cursor was: 0x23215445430
Cursor: 0x23215447070
Reached leaf node
Comparing: 4 < 8
Checking for duplicates 16 == 16
Duplicate: 16
Inserted record tt0000114 at block address: 0x2322a4b08d8 -> 0x2322a4b0900

Writing record: tt0000115
blocksallocated: 12 curblocksizeused + sizeRequired = 80 > 200
offset: 60
curblocksizeused was: 60 + 20
curblocksizeused: 80
actualsizeused was: 2260 + 20
actualsizeused: 2280
recordAddress: 0x2322a4b08d8 - 60
diskaddress: 0x2322a4b08d8 - 60
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b08d8 - 0x2322a4b0914 -> 0x2322a4b0928 : 60 - 20
Inserting record: tt0000115 to bptree 
Inserting record 19 - 0x2322a4b08d8 + 60 = 0x2322a4b0914
Root exists for key 19 - 0x2322a4b08d8 + 60 = 0x2322a4b0914
address: 0x2322a4b08d8 + 60
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 2
Level: 0 - Key: 19 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 1
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 2
Level: 0 - Key: 19 < 1342 :cursor-keys[ 1 ] 
key 19 lesser than 1342
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 7
Level: 1 - Key: 19 < 16 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 6
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 7
Level: 1 - Key: 19 < 18 :cursor-keys[ 1 ] 
Checking if larger than all other keys: 1 == 6
Level: 1 - Leaf: 0 Checking thru all keys of node: 2 < 7
Level: 1 - Key: 19 < 43 :cursor-keys[ 2 ] 
key 19 lesser than 43
Cursor was: 0x23215445430
Cursor: 0x23215446990
Reached leaf node
Comparing: 7 < 8
Search left to right: 19 > 18 & 0 < 7
Checking for duplicates 19 == 19
Duplicate: 19
Inserted record tt0000115 at block address: 0x2322a4b08d8 -> 0x2322a4b0914

Writing record: tt0000116
blocksallocated: 12 curblocksizeused + sizeRequired = 100 > 200
offset: 80
curblocksizeused was: 80 + 20
curblocksizeused: 100
actualsizeused was: 2280 + 20
actualsizeused: 2300
recordAddress: 0x2322a4b08d8 - 80
diskaddress: 0x2322a4b08d8 - 80
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b08d8 - 0x2322a4b0928 -> 0x2322a4b093c : 80 - 20
Inserting record: tt0000116 to bptree 
Inserting record 16 - 0x2322a4b08d8 + 80 = 0x2322a4b0928
Root exists for key 16 - 0x2322a4b08d8 + 80 = 0x2322a4b0928
address: 0x2322a4b08d8 + 80
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 2
Level: 0 - Key: 16 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 1
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 2
Level: 0 - Key: 16 < 1342 :cursor-keys[ 1 ] 
key 16 lesser than 1342
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 7
Level: 1 - Key: 16 < 16 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 6
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 7
Level: 1 - Key: 16 < 18 :cursor-keys[ 1 ] 
key 16 lesser than 18
Cursor was: 0x23215445430
Cursor: 0x23215447070
Reached leaf node
Comparing: 4 < 8
Checking for duplicates 16 == 16
Duplicate: 16
Inserted record tt0000116 at block address: 0x2322a4b08d8 -> 0x2322a4b0928

Writing record: tt0000117
blocksallocated: 12 curblocksizeused + sizeRequired = 120 > 200
offset: 100
curblocksizeused was: 100 + 20
curblocksizeused: 120
actualsizeused was: 2300 + 20
actualsizeused: 2320
recordAddress: 0x2322a4b08d8 - 100
diskaddress: 0x2322a4b08d8 - 100
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b08d8 - 0x2322a4b093c -> 0x2322a4b0950 : 100 - 20
Inserting record: tt0000117 to bptree 
Inserting record 118 - 0x2322a4b08d8 + 100 = 0x2322a4b093c
Root exists for key 118 - 0x2322a4b08d8 + 100 = 0x2322a4b093c
address: 0x2322a4b08d8 + 100
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 2
Level: 0 - Key: 118 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 1
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 2
Level: 0 - Key: 118 < 1342 :cursor-keys[ 1 ] 
key 118 lesser than 1342
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 7
Level: 1 - Key: 118 < 16 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 6
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 7
Level: 1 - Key: 118 < 18 :cursor-keys[ 1 ] 
Checking if larger than all other keys: 1 == 6
Level: 1 - Leaf: 0 Checking thru all keys of node: 2 < 7
Level: 1 - Key: 118 < 43 :cursor-keys[ 2 ] 
Checking if larger than all other keys: 2 == 6
Level: 1 - Leaf: 0 Checking thru all keys of node: 3 < 7
Level: 1 - Key: 118 < 159 :cursor-keys[ 3 ] 
key 118 lesser than 159
Cursor was: 0x23215445430
Cursor: 0x23215446c50
Reached leaf node
Comparing: 5 < 8
Search left to right: 118 > 43 & 0 < 5
Search left to right: 118 > 49 & 1 < 5
Search left to right: 118 > 60 & 2 < 5
Search left to right: 118 > 62 & 3 < 5
Search left to right: 118 > 66 & 4 < 5
Checking for duplicates 0 == 118
cursor->numKeys: 5
next: 0x23215446af0 - 0
Inserting key to node 5 : 118
cursor->numKeys was: 5
cursor->numKeys: 6
Inserted record tt0000117 at block address: 0x2322a4b08d8 -> 0x2322a4b093c

Writing record: tt0000118
blocksallocated: 12 curblocksizeused + sizeRequired = 140 > 200
offset: 120
curblocksizeused was: 120 + 20
curblocksizeused: 140
actualsizeused was: 2320 + 20
actualsizeused: 2340
recordAddress: 0x2322a4b08d8 - 120
diskaddress: 0x2322a4b08d8 - 120
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b08d8 - 0x2322a4b0950 -> 0x2322a4b0964 : 120 - 20
Inserting record: tt0000118 to bptree 
Inserting record 17 - 0x2322a4b08d8 + 120 = 0x2322a4b0950
Root exists for key 17 - 0x2322a4b08d8 + 120 = 0x2322a4b0950
address: 0x2322a4b08d8 + 120
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 2
Level: 0 - Key: 17 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 1
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 2
Level: 0 - Key: 17 < 1342 :cursor-keys[ 1 ] 
key 17 lesser than 1342
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 7
Level: 1 - Key: 17 < 16 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 6
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 7
Level: 1 - Key: 17 < 18 :cursor-keys[ 1 ] 
key 17 lesser than 18
Cursor was: 0x23215445430
Cursor: 0x23215447070
Reached leaf node
Comparing: 4 < 8
Search left to right: 17 > 16 & 0 < 4
Search left to right: 17 > 16 & 1 < 4
Search left to right: 17 > 16 & 2 < 4
Checking for duplicates 17 == 17
Duplicate: 17
Inserted record tt0000118 at block address: 0x2322a4b08d8 -> 0x2322a4b0950

Writing record: tt0000119
blocksallocated: 12 curblocksizeused + sizeRequired = 160 > 200
offset: 140
curblocksizeused was: 140 + 20
curblocksizeused: 160
actualsizeused was: 2340 + 20
actualsizeused: 2360
recordAddress: 0x2322a4b08d8 - 140
diskaddress: 0x2322a4b08d8 - 140
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b08d8 - 0x2322a4b0964 -> 0x2322a4b0978 : 140 - 20
Inserting record: tt0000119 to bptree 
Inserting record 30 - 0x2322a4b08d8 + 140 = 0x2322a4b0964
Root exists for key 30 - 0x2322a4b08d8 + 140 = 0x2322a4b0964
address: 0x2322a4b08d8 + 140
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 2
Level: 0 - Key: 30 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 1
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 2
Level: 0 - Key: 30 < 1342 :cursor-keys[ 1 ] 
key 30 lesser than 1342
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 7
Level: 1 - Key: 30 < 16 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 6
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 7
Level: 1 - Key: 30 < 18 :cursor-keys[ 1 ] 
Checking if larger than all other keys: 1 == 6
Level: 1 - Leaf: 0 Checking thru all keys of node: 2 < 7
Level: 1 - Key: 30 < 43 :cursor-keys[ 2 ] 
key 30 lesser than 43
Cursor was: 0x23215445430
Cursor: 0x23215446990
Reached leaf node
Comparing: 7 < 8
Search left to right: 30 > 18 & 0 < 7
Search left to right: 30 > 19 & 1 < 7
Search left to right: 30 > 20 & 2 < 7
Search left to right: 30 > 21 & 3 < 7
Search left to right: 30 > 22 & 4 < 7
Search left to right: 30 > 25 & 5 < 7
Checking for duplicates 34 == 30
cursor->numKeys: 7
next: 0x23215446c50 - 0
Shifting right: 7 > 6
Inserting key to node 6 : 30
cursor->numKeys was: 7
cursor->numKeys: 8
Inserted record tt0000119 at block address: 0x2322a4b08d8 -> 0x2322a4b0964

Writing record: tt0000120
blocksallocated: 12 curblocksizeused + sizeRequired = 180 > 200
offset: 160
curblocksizeused was: 160 + 20
curblocksizeused: 180
actualsizeused was: 2360 + 20
actualsizeused: 2380
recordAddress: 0x2322a4b08d8 - 160
diskaddress: 0x2322a4b08d8 - 160
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b08d8 - 0x2322a4b0978 -> 0x2322a4b098c : 160 - 20
Inserting record: tt0000120 to bptree 
Inserting record 30 - 0x2322a4b08d8 + 160 = 0x2322a4b0978
Root exists for key 30 - 0x2322a4b08d8 + 160 = 0x2322a4b0978
address: 0x2322a4b08d8 + 160
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 2
Level: 0 - Key: 30 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 1
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 2
Level: 0 - Key: 30 < 1342 :cursor-keys[ 1 ] 
key 30 lesser than 1342
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 7
Level: 1 - Key: 30 < 16 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 6
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 7
Level: 1 - Key: 30 < 18 :cursor-keys[ 1 ] 
Checking if larger than all other keys: 1 == 6
Level: 1 - Leaf: 0 Checking thru all keys of node: 2 < 7
Level: 1 - Key: 30 < 43 :cursor-keys[ 2 ] 
key 30 lesser than 43
Cursor was: 0x23215445430
Cursor: 0x23215446990
Reached leaf node
Comparing: 8 < 8
Creating BPNode of size 8
Created new BPNode at 0x23215447330
Copied 0 of 8 : 18 - 0x2322a4b0428 + 60
Copied 1 of 8 : 19 - 0x2322a4b05b8 + 140
Copied 2 of 8 : 20 - 0x2322a4b05b8 + 100
Copied 3 of 8 : 21 - 0x2322a4b0428 + 40
Copied 4 of 8 : 22 - 0x2322a4b0748 + 60
Copied 5 of 8 : 25 - 0x2322a4b0680 + 0
Copied 6 of 8 : 30 - 0x2322a4b08d8 + 140
Copied 7 of 8 : 34 - 0x2322a4b0748 + 160
Search left to right: 30 > 18 & 0 < 8
Search left to right: 30 > 19 & 1 < 8
Search left to right: 30 > 20 & 2 < 8
Search left to right: 30 > 21 & 3 < 8
Search left to right: 30 > 22 & 4 < 8
Search left to right: 30 > 25 & 5 < 8
Duplicate Overflow: 30
Shifting right: 8 > 7
Shifting right: 7 > 6
Inserting key to node 6 : 30
Inserting address to node 6 : 0x2322a4b08d8 + 160
newLeaf->isLeaf was: 13
newLeaf->isLeaf: 1
Calc the new keys after split
cursor->numKeys was: 8
newLeaf->numKeys was: 0
cursor->numKeys: 5
newLeaf->numKeys: 4
newLeaf->pointers[4] was: 0x23215446c50 + 0
newLeaf->pointers[4] : 0x23215446c50 + 0
Adding the keyptr back to the nodes
Adding to cursor 0 : 18 - 0x2322a4b0428 + 60
Adding to cursor 1 : 19 - 0x2322a4b05b8 + 140
Adding to cursor 2 : 20 - 0x2322a4b05b8 + 100
Adding to cursor 3 : 21 - 0x2322a4b0428 + 40
Adding to cursor 4 : 22 - 0x2322a4b0748 + 60
Adding to newLeaf 0 : 25 - 0x2322a4b0680 + 0
Adding to newLeaf 1 : 30 - 0x2322a4b08d8 + 160
Adding to newLeaf 2 : 30 - 0x2322a4b08d8 + 140
Adding to newLeaf 3 : 34 - 0x2322a4b0748 + 160
cursor->pointers[5] was: 0x2322a4b0680 + 0
cursor->pointers[5] : 0x23215447330 + 0
wiping cursor->keys[5] was : 25
wiping cursor->keys[5] : 0
wiping cursor->keys[6] was : 30
wiping cursor->keys[6] : 0
wiping cursor->keys[7] was : 34
wiping cursor->keys[7] : 0
wiping cursor->pointers[6] was : 0x2322a4b08d8 + 140
wiping cursor->pointers[6] : 0 + 0
wiping cursor->pointers[7] was : 0x2322a4b0748 + 160
wiping cursor->pointers[7] : 0 + 0
wiping cursor->pointers[8] was : 0x23215446c50 + 0
wiping cursor->pointers[8] : 0 + 0
Need insert parent in middle: 25
Inserted record tt0000120 at block address: 0x2322a4b08d8 -> 0x2322a4b0978

Writing record: tt0000121
blocksallocated: 12 curblocksizeused + sizeRequired = 200 > 200
offset: 180
curblocksizeused was: 180 + 20
curblocksizeused: 200
actualsizeused was: 2380 + 20
actualsizeused: 2400
recordAddress: 0x2322a4b08d8 - 180
diskaddress: 0x2322a4b08d8 - 180
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b08d8 - 0x2322a4b098c -> 0x2322a4b09a0 : 180 - 20
Inserting record: tt0000121 to bptree 
Inserting record 49 - 0x2322a4b08d8 + 180 = 0x2322a4b098c
Root exists for key 49 - 0x2322a4b08d8 + 180 = 0x2322a4b098c
address: 0x2322a4b08d8 + 180
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 2
Level: 0 - Key: 49 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 1
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 2
Level: 0 - Key: 49 < 1342 :cursor-keys[ 1 ] 
key 49 lesser than 1342
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 8
Level: 1 - Key: 49 < 16 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 8
Level: 1 - Key: 49 < 18 :cursor-keys[ 1 ] 
Checking if larger than all other keys: 1 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 2 < 8
Level: 1 - Key: 49 < 25 :cursor-keys[ 2 ] 
Checking if larger than all other keys: 2 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 3 < 8
Level: 1 - Key: 49 < 43 :cursor-keys[ 3 ] 
Checking if larger than all other keys: 3 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 4 < 8
Level: 1 - Key: 49 < 159 :cursor-keys[ 4 ] 
key 49 lesser than 159
Cursor was: 0x23215445430
Cursor: 0x23215446c50
Reached leaf node
Comparing: 6 < 8
Search left to right: 49 > 43 & 0 < 6
Checking for duplicates 49 == 49
Duplicate: 49
Inserted record tt0000121 at block address: 0x2322a4b08d8 -> 0x2322a4b098c

Writing record: tt0000122
blocksallocated: 12 curblocksizeused + sizeRequired = 220 > 200
blockavailable: 749988
blocksallocated * blocksize: 2400 - poolptr + blocksallocated * blocksize: 0x2322a4b09a0
blockptr was: 0x2322a4b08d8
blockptr: 0x2322a4b09a0
blocksallocated: 13 blocksavailable: 749987 blocksizeused: 2600 curblocksizeused: 0
offset: 0
curblocksizeused was: 0 + 20
curblocksizeused: 20
actualsizeused was: 2400 + 20
actualsizeused: 2420
recordAddress: 0x2322a4b09a0 - 0
diskaddress: 0x2322a4b09a0 - 0
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b09a0 - 0x2322a4b09a0 -> 0x2322a4b09b4 : 0 - 20
Inserting record: tt0000122 to bptree 
Inserting record 16 - 0x2322a4b09a0 + 0 = 0x2322a4b09a0
Root exists for key 16 - 0x2322a4b09a0 + 0 = 0x2322a4b09a0
address: 0x2322a4b09a0 + 0
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 2
Level: 0 - Key: 16 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 1
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 2
Level: 0 - Key: 16 < 1342 :cursor-keys[ 1 ] 
key 16 lesser than 1342
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 8
Level: 1 - Key: 16 < 16 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 8
Level: 1 - Key: 16 < 18 :cursor-keys[ 1 ] 
key 16 lesser than 18
Cursor was: 0x23215445430
Cursor: 0x23215447070
Reached leaf node
Comparing: 4 < 8
Checking for duplicates 16 == 16
Duplicate: 16
Inserted record tt0000122 at block address: 0x2322a4b09a0 -> 0x2322a4b09a0

Writing record: tt0000123
blocksallocated: 13 curblocksizeused + sizeRequired = 40 > 200
offset: 20
curblocksizeused was: 20 + 20
curblocksizeused: 40
actualsizeused was: 2420 + 20
actualsizeused: 2440
recordAddress: 0x2322a4b09a0 - 20
diskaddress: 0x2322a4b09a0 - 20
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b09a0 - 0x2322a4b09b4 -> 0x2322a4b09c8 : 20 - 20
Inserting record: tt0000123 to bptree 
Inserting record 74 - 0x2322a4b09a0 + 20 = 0x2322a4b09b4
Root exists for key 74 - 0x2322a4b09a0 + 20 = 0x2322a4b09b4
address: 0x2322a4b09a0 + 20
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 2
Level: 0 - Key: 74 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 1
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 2
Level: 0 - Key: 74 < 1342 :cursor-keys[ 1 ] 
key 74 lesser than 1342
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 8
Level: 1 - Key: 74 < 16 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 8
Level: 1 - Key: 74 < 18 :cursor-keys[ 1 ] 
Checking if larger than all other keys: 1 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 2 < 8
Level: 1 - Key: 74 < 25 :cursor-keys[ 2 ] 
Checking if larger than all other keys: 2 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 3 < 8
Level: 1 - Key: 74 < 43 :cursor-keys[ 3 ] 
Checking if larger than all other keys: 3 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 4 < 8
Level: 1 - Key: 74 < 159 :cursor-keys[ 4 ] 
key 74 lesser than 159
Cursor was: 0x23215445430
Cursor: 0x23215446c50
Reached leaf node
Comparing: 6 < 8
Search left to right: 74 > 43 & 0 < 6
Search left to right: 74 > 49 & 1 < 6
Search left to right: 74 > 60 & 2 < 6
Search left to right: 74 > 62 & 3 < 6
Search left to right: 74 > 66 & 4 < 6
Checking for duplicates 118 == 74
cursor->numKeys: 6
next: 0x23215446af0 - 0
Shifting right: 6 > 5
Inserting key to node 5 : 74
cursor->numKeys was: 6
cursor->numKeys: 7
Inserted record tt0000123 at block address: 0x2322a4b09a0 -> 0x2322a4b09b4

Writing record: tt0000124
blocksallocated: 13 curblocksizeused + sizeRequired = 60 > 200
offset: 40
curblocksizeused was: 40 + 20
curblocksizeused: 60
actualsizeused was: 2440 + 20
actualsizeused: 2460
recordAddress: 0x2322a4b09a0 - 40
diskaddress: 0x2322a4b09a0 - 40
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b09a0 - 0x2322a4b09c8 -> 0x2322a4b09dc : 40 - 20
Inserting record: tt0000124 to bptree 
Inserting record 17 - 0x2322a4b09a0 + 40 = 0x2322a4b09c8
Root exists for key 17 - 0x2322a4b09a0 + 40 = 0x2322a4b09c8
address: 0x2322a4b09a0 + 40
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 2
Level: 0 - Key: 17 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 1
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 2
Level: 0 - Key: 17 < 1342 :cursor-keys[ 1 ] 
key 17 lesser than 1342
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 8
Level: 1 - Key: 17 < 16 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 8
Level: 1 - Key: 17 < 18 :cursor-keys[ 1 ] 
key 17 lesser than 18
Cursor was: 0x23215445430
Cursor: 0x23215447070
Reached leaf node
Comparing: 4 < 8
Search left to right: 17 > 16 & 0 < 4
Search left to right: 17 > 16 & 1 < 4
Search left to right: 17 > 16 & 2 < 4
Checking for duplicates 17 == 17
Duplicate: 17
Inserted record tt0000124 at block address: 0x2322a4b09a0 -> 0x2322a4b09c8

Writing record: tt0000125
blocksallocated: 13 curblocksizeused + sizeRequired = 80 > 200
offset: 60
curblocksizeused was: 60 + 20
curblocksizeused: 80
actualsizeused was: 2460 + 20
actualsizeused: 2480
recordAddress: 0x2322a4b09a0 - 60
diskaddress: 0x2322a4b09a0 - 60
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b09a0 - 0x2322a4b09dc -> 0x2322a4b09f0 : 60 - 20
Inserting record: tt0000125 to bptree 
Inserting record 8 - 0x2322a4b09a0 + 60 = 0x2322a4b09dc
Root exists for key 8 - 0x2322a4b09a0 + 60 = 0x2322a4b09dc
address: 0x2322a4b09a0 + 60
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 2
Level: 0 - Key: 8 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 1
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 2
Level: 0 - Key: 8 < 1342 :cursor-keys[ 1 ] 
key 8 lesser than 1342
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 8
Level: 1 - Key: 8 < 16 :cursor-keys[ 0 ] 
key 8 lesser than 16
Cursor was: 0x23215445430
Cursor: 0x232155e3ea0
Reached leaf node
Comparing: 5 < 8
Checking for duplicates 9 == 8
cursor->numKeys: 5
next: 0x23215447070 - 0
Shifting right: 5 > 4
Shifting right: 4 > 3
Shifting right: 3 > 2
Shifting right: 2 > 1
Shifting right: 1 > 0
Inserting key to node 0 : 8
cursor->numKeys was: 5
cursor->numKeys: 6
Inserted record tt0000125 at block address: 0x2322a4b09a0 -> 0x2322a4b09dc

Writing record: tt0000126
blocksallocated: 13 curblocksizeused + sizeRequired = 100 > 200
offset: 80
curblocksizeused was: 80 + 20
curblocksizeused: 100
actualsizeused was: 2480 + 20
actualsizeused: 2500
recordAddress: 0x2322a4b09a0 - 80
diskaddress: 0x2322a4b09a0 - 80
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b09a0 - 0x2322a4b09f0 -> 0x2322a4b0a04 : 80 - 20
Inserting record: tt0000126 to bptree 
Inserting record 18 - 0x2322a4b09a0 + 80 = 0x2322a4b09f0
Root exists for key 18 - 0x2322a4b09a0 + 80 = 0x2322a4b09f0
address: 0x2322a4b09a0 + 80
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 2
Level: 0 - Key: 18 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 1
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 2
Level: 0 - Key: 18 < 1342 :cursor-keys[ 1 ] 
key 18 lesser than 1342
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 8
Level: 1 - Key: 18 < 16 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 8
Level: 1 - Key: 18 < 18 :cursor-keys[ 1 ] 
Checking if larger than all other keys: 1 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 2 < 8
Level: 1 - Key: 18 < 25 :cursor-keys[ 2 ] 
key 18 lesser than 25
Cursor was: 0x23215445430
Cursor: 0x23215446990
Reached leaf node
Comparing: 5 < 8
Checking for duplicates 18 == 18
Duplicate: 18
Inserted record tt0000126 at block address: 0x2322a4b09a0 -> 0x2322a4b09f0

Writing record: tt0000127
blocksallocated: 13 curblocksizeused + sizeRequired = 120 > 200
offset: 100
curblocksizeused was: 100 + 20
curblocksizeused: 120
actualsizeused was: 2500 + 20
actualsizeused: 2520
recordAddress: 0x2322a4b09a0 - 100
diskaddress: 0x2322a4b09a0 - 100
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b09a0 - 0x2322a4b0a04 -> 0x2322a4b0a18 : 100 - 20
Inserting record: tt0000127 to bptree 
Inserting record 15 - 0x2322a4b09a0 + 100 = 0x2322a4b0a04
Root exists for key 15 - 0x2322a4b09a0 + 100 = 0x2322a4b0a04
address: 0x2322a4b09a0 + 100
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 2
Level: 0 - Key: 15 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 1
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 2
Level: 0 - Key: 15 < 1342 :cursor-keys[ 1 ] 
key 15 lesser than 1342
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 8
Level: 1 - Key: 15 < 16 :cursor-keys[ 0 ] 
key 15 lesser than 16
Cursor was: 0x23215445430
Cursor: 0x232155e3ea0
Reached leaf node
Comparing: 6 < 8
Search left to right: 15 > 8 & 0 < 6
Search left to right: 15 > 9 & 1 < 6
Search left to right: 15 > 12 & 2 < 6
Search left to right: 15 > 13 & 3 < 6
Search left to right: 15 > 14 & 4 < 6
Checking for duplicates 15 == 15
Duplicate: 15
Inserted record tt0000127 at block address: 0x2322a4b09a0 -> 0x2322a4b0a04

Writing record: tt0000128
blocksallocated: 13 curblocksizeused + sizeRequired = 140 > 200
offset: 120
curblocksizeused was: 120 + 20
curblocksizeused: 140
actualsizeused was: 2520 + 20
actualsizeused: 2540
recordAddress: 0x2322a4b09a0 - 120
diskaddress: 0x2322a4b09a0 - 120
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b09a0 - 0x2322a4b0a18 -> 0x2322a4b0a2c : 120 - 20
Inserting record: tt0000128 to bptree 
Inserting record 26 - 0x2322a4b09a0 + 120 = 0x2322a4b0a18
Root exists for key 26 - 0x2322a4b09a0 + 120 = 0x2322a4b0a18
address: 0x2322a4b09a0 + 120
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 2
Level: 0 - Key: 26 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 1
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 2
Level: 0 - Key: 26 < 1342 :cursor-keys[ 1 ] 
key 26 lesser than 1342
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 8
Level: 1 - Key: 26 < 16 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 8
Level: 1 - Key: 26 < 18 :cursor-keys[ 1 ] 
Checking if larger than all other keys: 1 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 2 < 8
Level: 1 - Key: 26 < 25 :cursor-keys[ 2 ] 
Checking if larger than all other keys: 2 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 3 < 8
Level: 1 - Key: 26 < 43 :cursor-keys[ 3 ] 
key 26 lesser than 43
Cursor was: 0x23215445430
Cursor: 0x23215447330
Reached leaf node
Comparing: 4 < 8
Search left to right: 26 > 25 & 0 < 4
Checking for duplicates 30 == 26
cursor->numKeys: 4
next: 0x23215446c50 - 0
Shifting right: 4 > 3
Shifting right: 3 > 2
Shifting right: 2 > 1
Inserting key to node 1 : 26
cursor->numKeys was: 4
cursor->numKeys: 5
Inserted record tt0000128 at block address: 0x2322a4b09a0 -> 0x2322a4b0a18

Writing record: tt0000129
blocksallocated: 13 curblocksizeused + sizeRequired = 160 > 200
offset: 140
curblocksizeused was: 140 + 20
curblocksizeused: 160
actualsizeused was: 2540 + 20
actualsizeused: 2560
recordAddress: 0x2322a4b09a0 - 140
diskaddress: 0x2322a4b09a0 - 140
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b09a0 - 0x2322a4b0a2c -> 0x2322a4b0a40 : 140 - 20
Inserting record: tt0000129 to bptree 
Inserting record 37 - 0x2322a4b09a0 + 140 = 0x2322a4b0a2c
Root exists for key 37 - 0x2322a4b09a0 + 140 = 0x2322a4b0a2c
address: 0x2322a4b09a0 + 140
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 2
Level: 0 - Key: 37 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 1
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 2
Level: 0 - Key: 37 < 1342 :cursor-keys[ 1 ] 
key 37 lesser than 1342
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 8
Level: 1 - Key: 37 < 16 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 8
Level: 1 - Key: 37 < 18 :cursor-keys[ 1 ] 
Checking if larger than all other keys: 1 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 2 < 8
Level: 1 - Key: 37 < 25 :cursor-keys[ 2 ] 
Checking if larger than all other keys: 2 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 3 < 8
Level: 1 - Key: 37 < 43 :cursor-keys[ 3 ] 
key 37 lesser than 43
Cursor was: 0x23215445430
Cursor: 0x23215447330
Reached leaf node
Comparing: 5 < 8
Search left to right: 37 > 25 & 0 < 5
Search left to right: 37 > 26 & 1 < 5
Search left to right: 37 > 30 & 2 < 5
Search left to right: 37 > 30 & 3 < 5
Search left to right: 37 > 34 & 4 < 5
Checking for duplicates 0 == 37
cursor->numKeys: 5
next: 0x23215446c50 - 0
Inserting key to node 5 : 37
cursor->numKeys was: 5
cursor->numKeys: 6
Inserted record tt0000129 at block address: 0x2322a4b09a0 -> 0x2322a4b0a2c

Writing record: tt0000130
blocksallocated: 13 curblocksizeused + sizeRequired = 180 > 200
offset: 160
curblocksizeused was: 160 + 20
curblocksizeused: 180
actualsizeused was: 2560 + 20
actualsizeused: 2580
recordAddress: 0x2322a4b09a0 - 160
diskaddress: 0x2322a4b09a0 - 160
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b09a0 - 0x2322a4b0a40 -> 0x2322a4b0a54 : 160 - 20
Inserting record: tt0000130 to bptree 
Inserting record 17 - 0x2322a4b09a0 + 160 = 0x2322a4b0a40
Root exists for key 17 - 0x2322a4b09a0 + 160 = 0x2322a4b0a40
address: 0x2322a4b09a0 + 160
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 2
Level: 0 - Key: 17 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 1
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 2
Level: 0 - Key: 17 < 1342 :cursor-keys[ 1 ] 
key 17 lesser than 1342
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 8
Level: 1 - Key: 17 < 16 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 8
Level: 1 - Key: 17 < 18 :cursor-keys[ 1 ] 
key 17 lesser than 18
Cursor was: 0x23215445430
Cursor: 0x23215447070
Reached leaf node
Comparing: 4 < 8
Search left to right: 17 > 16 & 0 < 4
Search left to right: 17 > 16 & 1 < 4
Search left to right: 17 > 16 & 2 < 4
Checking for duplicates 17 == 17
Duplicate: 17
Inserted record tt0000130 at block address: 0x2322a4b09a0 -> 0x2322a4b0a40

Writing record: tt0000131
blocksallocated: 13 curblocksizeused + sizeRequired = 200 > 200
offset: 180
curblocksizeused was: 180 + 20
curblocksizeused: 200
actualsizeused was: 2580 + 20
actualsizeused: 2600
recordAddress: 0x2322a4b09a0 - 180
diskaddress: 0x2322a4b09a0 - 180
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b09a0 - 0x2322a4b0a54 -> 0x2322a4b0a68 : 180 - 20
Inserting record: tt0000131 to bptree 
Inserting record 1079 - 0x2322a4b09a0 + 180 = 0x2322a4b0a54
Root exists for key 1079 - 0x2322a4b09a0 + 180 = 0x2322a4b0a54
address: 0x2322a4b09a0 + 180
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 2
Level: 0 - Key: 1079 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 1
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 2
Level: 0 - Key: 1079 < 1342 :cursor-keys[ 1 ] 
key 1079 lesser than 1342
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 8
Level: 1 - Key: 1079 < 16 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 8
Level: 1 - Key: 1079 < 18 :cursor-keys[ 1 ] 
Checking if larger than all other keys: 1 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 2 < 8
Level: 1 - Key: 1079 < 25 :cursor-keys[ 2 ] 
Checking if larger than all other keys: 2 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 3 < 8
Level: 1 - Key: 1079 < 43 :cursor-keys[ 3 ] 
Checking if larger than all other keys: 3 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 4 < 8
Level: 1 - Key: 1079 < 159 :cursor-keys[ 4 ] 
Checking if larger than all other keys: 4 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 5 < 8
Level: 1 - Key: 1079 < 439 :cursor-keys[ 5 ] 
Checking if larger than all other keys: 5 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 6 < 8
Level: 1 - Key: 1079 < 817 :cursor-keys[ 6 ] 
Checking if larger than all other keys: 6 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 7 < 8
Level: 1 - Key: 1079 < 888 :cursor-keys[ 7 ] 
Checking if larger than all other keys: 7 == 7
Larger than all other keys in node going to last: 7 == 7
Cursor was: 0x23215445430
Cursor: 0x23215446db0
Reached leaf node
Comparing: 4 < 8
Checking for duplicates 1807 == 1079
cursor->numKeys: 4
next: 0x232155e3d40 - 0
Shifting right: 4 > 3
Shifting right: 3 > 2
Shifting right: 2 > 1
Shifting right: 1 > 0
Inserting key to node 0 : 1079
cursor->numKeys was: 4
cursor->numKeys: 5
Inserted record tt0000131 at block address: 0x2322a4b09a0 -> 0x2322a4b0a54

Writing record: tt0000132
blocksallocated: 13 curblocksizeused + sizeRequired = 220 > 200
blockavailable: 749987
blocksallocated * blocksize: 2600 - poolptr + blocksallocated * blocksize: 0x2322a4b0a68
blockptr was: 0x2322a4b09a0
blockptr: 0x2322a4b0a68
blocksallocated: 14 blocksavailable: 749986 blocksizeused: 2800 curblocksizeused: 0
offset: 0
curblocksizeused was: 0 + 20
curblocksizeused: 20
actualsizeused was: 2600 + 20
actualsizeused: 2620
recordAddress: 0x2322a4b0a68 - 0
diskaddress: 0x2322a4b0a68 - 0
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0a68 - 0x2322a4b0a68 -> 0x2322a4b0a7c : 0 - 20
Inserting record: tt0000132 to bptree 
Inserting record 869 - 0x2322a4b0a68 + 0 = 0x2322a4b0a68
Root exists for key 869 - 0x2322a4b0a68 + 0 = 0x2322a4b0a68
address: 0x2322a4b0a68 + 0
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 2
Level: 0 - Key: 869 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 1
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 2
Level: 0 - Key: 869 < 1342 :cursor-keys[ 1 ] 
key 869 lesser than 1342
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 8
Level: 1 - Key: 869 < 16 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 8
Level: 1 - Key: 869 < 18 :cursor-keys[ 1 ] 
Checking if larger than all other keys: 1 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 2 < 8
Level: 1 - Key: 869 < 25 :cursor-keys[ 2 ] 
Checking if larger than all other keys: 2 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 3 < 8
Level: 1 - Key: 869 < 43 :cursor-keys[ 3 ] 
Checking if larger than all other keys: 3 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 4 < 8
Level: 1 - Key: 869 < 159 :cursor-keys[ 4 ] 
Checking if larger than all other keys: 4 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 5 < 8
Level: 1 - Key: 869 < 439 :cursor-keys[ 5 ] 
Checking if larger than all other keys: 5 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 6 < 8
Level: 1 - Key: 869 < 817 :cursor-keys[ 6 ] 
Checking if larger than all other keys: 6 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 7 < 8
Level: 1 - Key: 869 < 888 :cursor-keys[ 7 ] 
key 869 lesser than 888
Cursor was: 0x23215445430
Cursor: 0x23215446830
Reached leaf node
Comparing: 5 < 8
Search left to right: 869 > 817 & 0 < 5
Search left to right: 869 > 831 & 1 < 5
Search left to right: 869 > 837 & 2 < 5
Search left to right: 869 > 856 & 3 < 5
Search left to right: 869 > 857 & 4 < 5
Checking for duplicates 0 == 869
cursor->numKeys: 5
next: 0x232155e3be0 - 0
Inserting key to node 5 : 869
cursor->numKeys was: 5
cursor->numKeys: 6
Inserted record tt0000132 at block address: 0x2322a4b0a68 -> 0x2322a4b0a68

Writing record: tt0000133
blocksallocated: 14 curblocksizeused + sizeRequired = 40 > 200
offset: 20
curblocksizeused was: 20 + 20
curblocksizeused: 40
actualsizeused was: 2620 + 20
actualsizeused: 2640
recordAddress: 0x2322a4b0a68 - 20
diskaddress: 0x2322a4b0a68 - 20
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0a68 - 0x2322a4b0a7c -> 0x2322a4b0a90 : 20 - 20
Inserting record: tt0000133 to bptree 
Inserting record 24 - 0x2322a4b0a68 + 20 = 0x2322a4b0a7c
Root exists for key 24 - 0x2322a4b0a68 + 20 = 0x2322a4b0a7c
address: 0x2322a4b0a68 + 20
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 2
Level: 0 - Key: 24 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 1
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 2
Level: 0 - Key: 24 < 1342 :cursor-keys[ 1 ] 
key 24 lesser than 1342
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 8
Level: 1 - Key: 24 < 16 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 8
Level: 1 - Key: 24 < 18 :cursor-keys[ 1 ] 
Checking if larger than all other keys: 1 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 2 < 8
Level: 1 - Key: 24 < 25 :cursor-keys[ 2 ] 
key 24 lesser than 25
Cursor was: 0x23215445430
Cursor: 0x23215446990
Reached leaf node
Comparing: 5 < 8
Search left to right: 24 > 18 & 0 < 5
Search left to right: 24 > 19 & 1 < 5
Search left to right: 24 > 20 & 2 < 5
Search left to right: 24 > 21 & 3 < 5
Search left to right: 24 > 22 & 4 < 5
Checking for duplicates 0 == 24
cursor->numKeys: 5
next: 0x23215447330 - 0
Inserting key to node 5 : 24
cursor->numKeys was: 5
cursor->numKeys: 6
Inserted record tt0000133 at block address: 0x2322a4b0a68 -> 0x2322a4b0a7c

Writing record: tt0000134
blocksallocated: 14 curblocksizeused + sizeRequired = 60 > 200
offset: 40
curblocksizeused was: 40 + 20
curblocksizeused: 60
actualsizeused was: 2640 + 20
actualsizeused: 2660
recordAddress: 0x2322a4b0a68 - 40
diskaddress: 0x2322a4b0a68 - 40
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0a68 - 0x2322a4b0a90 -> 0x2322a4b0aa4 : 40 - 20
Inserting record: tt0000134 to bptree 
Inserting record 8 - 0x2322a4b0a68 + 40 = 0x2322a4b0a90
Root exists for key 8 - 0x2322a4b0a68 + 40 = 0x2322a4b0a90
address: 0x2322a4b0a68 + 40
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 2
Level: 0 - Key: 8 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 1
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 2
Level: 0 - Key: 8 < 1342 :cursor-keys[ 1 ] 
key 8 lesser than 1342
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 8
Level: 1 - Key: 8 < 16 :cursor-keys[ 0 ] 
key 8 lesser than 16
Cursor was: 0x23215445430
Cursor: 0x232155e3ea0
Reached leaf node
Comparing: 6 < 8
Checking for duplicates 8 == 8
Duplicate: 8
Inserted record tt0000134 at block address: 0x2322a4b0a68 -> 0x2322a4b0a90

Writing record: tt0000135
blocksallocated: 14 curblocksizeused + sizeRequired = 80 > 200
offset: 60
curblocksizeused was: 60 + 20
curblocksizeused: 80
actualsizeused was: 2660 + 20
actualsizeused: 2680
recordAddress: 0x2322a4b0a68 - 60
diskaddress: 0x2322a4b0a68 - 60
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0a68 - 0x2322a4b0aa4 -> 0x2322a4b0ab8 : 60 - 20
Inserting record: tt0000135 to bptree 
Inserting record 52 - 0x2322a4b0a68 + 60 = 0x2322a4b0aa4
Root exists for key 52 - 0x2322a4b0a68 + 60 = 0x2322a4b0aa4
address: 0x2322a4b0a68 + 60
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 2
Level: 0 - Key: 52 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 1
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 2
Level: 0 - Key: 52 < 1342 :cursor-keys[ 1 ] 
key 52 lesser than 1342
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 8
Level: 1 - Key: 52 < 16 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 8
Level: 1 - Key: 52 < 18 :cursor-keys[ 1 ] 
Checking if larger than all other keys: 1 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 2 < 8
Level: 1 - Key: 52 < 25 :cursor-keys[ 2 ] 
Checking if larger than all other keys: 2 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 3 < 8
Level: 1 - Key: 52 < 43 :cursor-keys[ 3 ] 
Checking if larger than all other keys: 3 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 4 < 8
Level: 1 - Key: 52 < 159 :cursor-keys[ 4 ] 
key 52 lesser than 159
Cursor was: 0x23215445430
Cursor: 0x23215446c50
Reached leaf node
Comparing: 7 < 8
Search left to right: 52 > 43 & 0 < 7
Search left to right: 52 > 49 & 1 < 7
Checking for duplicates 60 == 52
cursor->numKeys: 7
next: 0x23215446af0 - 0
Shifting right: 7 > 6
Shifting right: 6 > 5
Shifting right: 5 > 4
Shifting right: 4 > 3
Shifting right: 3 > 2
Inserting key to node 2 : 52
cursor->numKeys was: 7
cursor->numKeys: 8
Inserted record tt0000135 at block address: 0x2322a4b0a68 -> 0x2322a4b0aa4

Writing record: tt0000137
blocksallocated: 14 curblocksizeused + sizeRequired = 100 > 200
offset: 80
curblocksizeused was: 80 + 20
curblocksizeused: 100
actualsizeused was: 2680 + 20
actualsizeused: 2700
recordAddress: 0x2322a4b0a68 - 80
diskaddress: 0x2322a4b0a68 - 80
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0a68 - 0x2322a4b0ab8 -> 0x2322a4b0acc : 80 - 20
Inserting record: tt0000137 to bptree 
Inserting record 12 - 0x2322a4b0a68 + 80 = 0x2322a4b0ab8
Root exists for key 12 - 0x2322a4b0a68 + 80 = 0x2322a4b0ab8
address: 0x2322a4b0a68 + 80
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 2
Level: 0 - Key: 12 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 1
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 2
Level: 0 - Key: 12 < 1342 :cursor-keys[ 1 ] 
key 12 lesser than 1342
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 8
Level: 1 - Key: 12 < 16 :cursor-keys[ 0 ] 
key 12 lesser than 16
Cursor was: 0x23215445430
Cursor: 0x232155e3ea0
Reached leaf node
Comparing: 6 < 8
Search left to right: 12 > 8 & 0 < 6
Search left to right: 12 > 9 & 1 < 6
Checking for duplicates 12 == 12
Duplicate: 12
Inserted record tt0000137 at block address: 0x2322a4b0a68 -> 0x2322a4b0ab8

Writing record: tt0000138
blocksallocated: 14 curblocksizeused + sizeRequired = 120 > 200
offset: 100
curblocksizeused was: 100 + 20
curblocksizeused: 120
actualsizeused was: 2700 + 20
actualsizeused: 2720
recordAddress: 0x2322a4b0a68 - 100
diskaddress: 0x2322a4b0a68 - 100
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0a68 - 0x2322a4b0acc -> 0x2322a4b0ae0 : 100 - 20
Inserting record: tt0000138 to bptree 
Inserting record 852 - 0x2322a4b0a68 + 100 = 0x2322a4b0acc
Root exists for key 852 - 0x2322a4b0a68 + 100 = 0x2322a4b0acc
address: 0x2322a4b0a68 + 100
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 2
Level: 0 - Key: 852 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 1
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 2
Level: 0 - Key: 852 < 1342 :cursor-keys[ 1 ] 
key 852 lesser than 1342
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 8
Level: 1 - Key: 852 < 16 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 8
Level: 1 - Key: 852 < 18 :cursor-keys[ 1 ] 
Checking if larger than all other keys: 1 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 2 < 8
Level: 1 - Key: 852 < 25 :cursor-keys[ 2 ] 
Checking if larger than all other keys: 2 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 3 < 8
Level: 1 - Key: 852 < 43 :cursor-keys[ 3 ] 
Checking if larger than all other keys: 3 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 4 < 8
Level: 1 - Key: 852 < 159 :cursor-keys[ 4 ] 
Checking if larger than all other keys: 4 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 5 < 8
Level: 1 - Key: 852 < 439 :cursor-keys[ 5 ] 
Checking if larger than all other keys: 5 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 6 < 8
Level: 1 - Key: 852 < 817 :cursor-keys[ 6 ] 
Checking if larger than all other keys: 6 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 7 < 8
Level: 1 - Key: 852 < 888 :cursor-keys[ 7 ] 
key 852 lesser than 888
Cursor was: 0x23215445430
Cursor: 0x23215446830
Reached leaf node
Comparing: 6 < 8
Search left to right: 852 > 817 & 0 < 6
Search left to right: 852 > 831 & 1 < 6
Search left to right: 852 > 837 & 2 < 6
Checking for duplicates 856 == 852
cursor->numKeys: 6
next: 0x232155e3be0 - 0
Shifting right: 6 > 5
Shifting right: 5 > 4
Shifting right: 4 > 3
Inserting key to node 3 : 852
cursor->numKeys was: 6
cursor->numKeys: 7
Inserted record tt0000138 at block address: 0x2322a4b0a68 -> 0x2322a4b0acc

Writing record: tt0000139
blocksallocated: 14 curblocksizeused + sizeRequired = 140 > 200
offset: 120
curblocksizeused was: 120 + 20
curblocksizeused: 140
actualsizeused was: 2720 + 20
actualsizeused: 2740
recordAddress: 0x2322a4b0a68 - 120
diskaddress: 0x2322a4b0a68 - 120
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0a68 - 0x2322a4b0ae0 -> 0x2322a4b0af4 : 120 - 20
Inserting record: tt0000139 to bptree 
Inserting record 16 - 0x2322a4b0a68 + 120 = 0x2322a4b0ae0
Root exists for key 16 - 0x2322a4b0a68 + 120 = 0x2322a4b0ae0
address: 0x2322a4b0a68 + 120
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 2
Level: 0 - Key: 16 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 1
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 2
Level: 0 - Key: 16 < 1342 :cursor-keys[ 1 ] 
key 16 lesser than 1342
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 8
Level: 1 - Key: 16 < 16 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 8
Level: 1 - Key: 16 < 18 :cursor-keys[ 1 ] 
key 16 lesser than 18
Cursor was: 0x23215445430
Cursor: 0x23215447070
Reached leaf node
Comparing: 4 < 8
Checking for duplicates 16 == 16
Duplicate: 16
Inserted record tt0000139 at block address: 0x2322a4b0a68 -> 0x2322a4b0ae0

Writing record: tt0000140
blocksallocated: 14 curblocksizeused + sizeRequired = 160 > 200
offset: 140
curblocksizeused was: 140 + 20
curblocksizeused: 160
actualsizeused was: 2740 + 20
actualsizeused: 2760
recordAddress: 0x2322a4b0a68 - 140
diskaddress: 0x2322a4b0a68 - 140
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0a68 - 0x2322a4b0af4 -> 0x2322a4b0b08 : 140 - 20
Inserting record: tt0000140 to bptree 
Inserting record 222 - 0x2322a4b0a68 + 140 = 0x2322a4b0af4
Root exists for key 222 - 0x2322a4b0a68 + 140 = 0x2322a4b0af4
address: 0x2322a4b0a68 + 140
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 2
Level: 0 - Key: 222 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 1
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 2
Level: 0 - Key: 222 < 1342 :cursor-keys[ 1 ] 
key 222 lesser than 1342
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 8
Level: 1 - Key: 222 < 16 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 8
Level: 1 - Key: 222 < 18 :cursor-keys[ 1 ] 
Checking if larger than all other keys: 1 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 2 < 8
Level: 1 - Key: 222 < 25 :cursor-keys[ 2 ] 
Checking if larger than all other keys: 2 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 3 < 8
Level: 1 - Key: 222 < 43 :cursor-keys[ 3 ] 
Checking if larger than all other keys: 3 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 4 < 8
Level: 1 - Key: 222 < 159 :cursor-keys[ 4 ] 
Checking if larger than all other keys: 4 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 5 < 8
Level: 1 - Key: 222 < 439 :cursor-keys[ 5 ] 
key 222 lesser than 439
Cursor was: 0x23215445430
Cursor: 0x23215446af0
Reached leaf node
Comparing: 6 < 8
Search left to right: 222 > 159 & 0 < 6
Checking for duplicates 351 == 222
cursor->numKeys: 6
next: 0x232154471d0 - 0
Shifting right: 6 > 5
Shifting right: 5 > 4
Shifting right: 4 > 3
Shifting right: 3 > 2
Shifting right: 2 > 1
Inserting key to node 1 : 222
cursor->numKeys was: 6
cursor->numKeys: 7
Inserted record tt0000140 at block address: 0x2322a4b0a68 -> 0x2322a4b0af4

Writing record: tt0000141
blocksallocated: 14 curblocksizeused + sizeRequired = 180 > 200
offset: 160
curblocksizeused was: 160 + 20
curblocksizeused: 180
actualsizeused was: 2760 + 20
actualsizeused: 2780
recordAddress: 0x2322a4b0a68 - 160
diskaddress: 0x2322a4b0a68 - 160
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0a68 - 0x2322a4b0b08 -> 0x2322a4b0b1c : 160 - 20
Inserting record: tt0000141 to bptree 
Inserting record 61 - 0x2322a4b0a68 + 160 = 0x2322a4b0b08
Root exists for key 61 - 0x2322a4b0a68 + 160 = 0x2322a4b0b08
address: 0x2322a4b0a68 + 160
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 2
Level: 0 - Key: 61 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 1
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 2
Level: 0 - Key: 61 < 1342 :cursor-keys[ 1 ] 
key 61 lesser than 1342
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 8
Level: 1 - Key: 61 < 16 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 8
Level: 1 - Key: 61 < 18 :cursor-keys[ 1 ] 
Checking if larger than all other keys: 1 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 2 < 8
Level: 1 - Key: 61 < 25 :cursor-keys[ 2 ] 
Checking if larger than all other keys: 2 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 3 < 8
Level: 1 - Key: 61 < 43 :cursor-keys[ 3 ] 
Checking if larger than all other keys: 3 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 4 < 8
Level: 1 - Key: 61 < 159 :cursor-keys[ 4 ] 
key 61 lesser than 159
Cursor was: 0x23215445430
Cursor: 0x23215446c50
Reached leaf node
Comparing: 8 < 8
Creating BPNode of size 8
Created new BPNode at 0x23215447490
Copied 0 of 8 : 43 - 0x2322a4b04f0 + 100
Copied 1 of 8 : 49 - 0x2322a4b05b8 + 120
Copied 2 of 8 : 52 - 0x2322a4b0a68 + 60
Copied 3 of 8 : 60 - 0x2322a4b0428 + 0
Copied 4 of 8 : 62 - 0x2322a4b0428 + 160
Copied 5 of 8 : 66 - 0x2322a4b0748 + 20
Copied 6 of 8 : 74 - 0x2322a4b09a0 + 20
Copied 7 of 8 : 118 - 0x2322a4b08d8 + 100
Search left to right: 61 > 43 & 0 < 8
Search left to right: 61 > 49 & 1 < 8
Search left to right: 61 > 52 & 2 < 8
Search left to right: 61 > 60 & 3 < 8
Shifting right: 8 > 7
Shifting right: 7 > 6
Shifting right: 6 > 5
Shifting right: 5 > 4
Inserting key to node 4 : 61
Inserting address to node 4 : 0x2322a4b0a68 + 160
newLeaf->isLeaf was: 13
newLeaf->isLeaf: 1
Calc the new keys after split
cursor->numKeys was: 8
newLeaf->numKeys was: 0
cursor->numKeys: 5
newLeaf->numKeys: 4
newLeaf->pointers[4] was: 0x23215446af0 + 0
newLeaf->pointers[4] : 0x23215446af0 + 0
Adding the keyptr back to the nodes
Adding to cursor 0 : 43 - 0x2322a4b04f0 + 100
Adding to cursor 1 : 49 - 0x2322a4b05b8 + 120
Adding to cursor 2 : 52 - 0x2322a4b0a68 + 60
Adding to cursor 3 : 60 - 0x2322a4b0428 + 0
Adding to cursor 4 : 61 - 0x2322a4b0a68 + 160
Adding to newLeaf 0 : 62 - 0x2322a4b0428 + 160
Adding to newLeaf 1 : 66 - 0x2322a4b0748 + 20
Adding to newLeaf 2 : 74 - 0x2322a4b09a0 + 20
Adding to newLeaf 3 : 118 - 0x2322a4b08d8 + 100
cursor->pointers[5] was: 0x2322a4b0748 + 20
cursor->pointers[5] : 0x23215447490 + 0
wiping cursor->keys[5] was : 66
wiping cursor->keys[5] : 0
wiping cursor->keys[6] was : 74
wiping cursor->keys[6] : 0
wiping cursor->keys[7] was : 118
wiping cursor->keys[7] : 0
wiping cursor->pointers[6] was : 0x2322a4b09a0 + 20
wiping cursor->pointers[6] : 0 + 0
wiping cursor->pointers[7] was : 0x2322a4b08d8 + 100
wiping cursor->pointers[7] : 0 + 0
wiping cursor->pointers[8] was : 0x23215446af0 + 0
wiping cursor->pointers[8] : 0 + 0
Need insert parent in middle: 62
Inserted record tt0000141 at block address: 0x2322a4b0a68 -> 0x2322a4b0b08

Writing record: tt0000142
blocksallocated: 14 curblocksizeused + sizeRequired = 200 > 200
offset: 180
curblocksizeused was: 180 + 20
curblocksizeused: 200
actualsizeused was: 2780 + 20
actualsizeused: 2800
recordAddress: 0x2322a4b0a68 - 180
diskaddress: 0x2322a4b0a68 - 180
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0a68 - 0x2322a4b0b1c -> 0x2322a4b0b30 : 180 - 20
Inserting record: tt0000142 to bptree 
Inserting record 11 - 0x2322a4b0a68 + 180 = 0x2322a4b0b1c
Root exists for key 11 - 0x2322a4b0a68 + 180 = 0x2322a4b0b1c
address: 0x2322a4b0a68 + 180
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 3
Level: 0 - Key: 11 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 2
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 3
Level: 0 - Key: 11 < 159 :cursor-keys[ 1 ] 
key 11 lesser than 159
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 5
Level: 1 - Key: 11 < 16 :cursor-keys[ 0 ] 
key 11 lesser than 16
Cursor was: 0x23215445430
Cursor: 0x232155e3ea0
Reached leaf node
Comparing: 6 < 8
Search left to right: 11 > 8 & 0 < 6
Search left to right: 11 > 9 & 1 < 6
Checking for duplicates 12 == 11
cursor->numKeys: 6
next: 0x23215447070 - 0
Shifting right: 6 > 5
Shifting right: 5 > 4
Shifting right: 4 > 3
Shifting right: 3 > 2
Inserting key to node 2 : 11
cursor->numKeys was: 6
cursor->numKeys: 7
Inserted record tt0000142 at block address: 0x2322a4b0a68 -> 0x2322a4b0b1c

Writing record: tt0000143
blocksallocated: 14 curblocksizeused + sizeRequired = 220 > 200
blockavailable: 749986
blocksallocated * blocksize: 2800 - poolptr + blocksallocated * blocksize: 0x2322a4b0b30
blockptr was: 0x2322a4b0a68
blockptr: 0x2322a4b0b30
blocksallocated: 15 blocksavailable: 749985 blocksizeused: 3000 curblocksizeused: 0
offset: 0
curblocksizeused was: 0 + 20
curblocksizeused: 20
actualsizeused was: 2800 + 20
actualsizeused: 2820
recordAddress: 0x2322a4b0b30 - 0
diskaddress: 0x2322a4b0b30 - 0
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0b30 - 0x2322a4b0b30 -> 0x2322a4b0b44 : 0 - 20
Inserting record: tt0000143 to bptree 
Inserting record 198 - 0x2322a4b0b30 + 0 = 0x2322a4b0b30
Root exists for key 198 - 0x2322a4b0b30 + 0 = 0x2322a4b0b30
address: 0x2322a4b0b30 + 0
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 3
Level: 0 - Key: 198 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 2
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 3
Level: 0 - Key: 198 < 159 :cursor-keys[ 1 ] 
Checking if larger than all other keys: 1 == 2
Level: 0 - Leaf: 0 Checking thru all keys of node: 2 < 3
Level: 0 - Key: 198 < 1342 :cursor-keys[ 2 ] 
key 198 lesser than 1342
Cursor was: 0x232154457d0
Cursor: 0x232154475f0
Parent was: 0x232154457d0
Parent: 0x232154475f0
Cursor: 0x232154475f0
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 4
Level: 1 - Key: 198 < 439 :cursor-keys[ 0 ] 
key 198 lesser than 439
Cursor was: 0x232154475f0
Cursor: 0x23215446af0
Reached leaf node
Comparing: 7 < 8
Search left to right: 198 > 159 & 0 < 7
Checking for duplicates 222 == 198
cursor->numKeys: 7
next: 0x232154471d0 - 0
Shifting right: 7 > 6
Shifting right: 6 > 5
Shifting right: 5 > 4
Shifting right: 4 > 3
Shifting right: 3 > 2
Shifting right: 2 > 1
Inserting key to node 1 : 198
cursor->numKeys was: 7
cursor->numKeys: 8
Inserted record tt0000143 at block address: 0x2322a4b0b30 -> 0x2322a4b0b30

Writing record: tt0000144
blocksallocated: 15 curblocksizeused + sizeRequired = 40 > 200
offset: 20
curblocksizeused was: 20 + 20
curblocksizeused: 40
actualsizeused was: 2820 + 20
actualsizeused: 2840
recordAddress: 0x2322a4b0b30 - 20
diskaddress: 0x2322a4b0b30 - 20
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0b30 - 0x2322a4b0b44 -> 0x2322a4b0b58 : 20 - 20
Inserting record: tt0000144 to bptree 
Inserting record 223 - 0x2322a4b0b30 + 20 = 0x2322a4b0b44
Root exists for key 223 - 0x2322a4b0b30 + 20 = 0x2322a4b0b44
address: 0x2322a4b0b30 + 20
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 3
Level: 0 - Key: 223 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 2
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 3
Level: 0 - Key: 223 < 159 :cursor-keys[ 1 ] 
Checking if larger than all other keys: 1 == 2
Level: 0 - Leaf: 0 Checking thru all keys of node: 2 < 3
Level: 0 - Key: 223 < 1342 :cursor-keys[ 2 ] 
key 223 lesser than 1342
Cursor was: 0x232154457d0
Cursor: 0x232154475f0
Parent was: 0x232154457d0
Parent: 0x232154475f0
Cursor: 0x232154475f0
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 4
Level: 1 - Key: 223 < 439 :cursor-keys[ 0 ] 
key 223 lesser than 439
Cursor was: 0x232154475f0
Cursor: 0x23215446af0
Reached leaf node
Comparing: 8 < 8
Creating BPNode of size 8
Created new BPNode at 0x23215447750
Copied 0 of 8 : 159 - 0x2322a4b04f0 + 0
Copied 1 of 8 : 198 - 0x2322a4b0b30 + 0
Copied 2 of 8 : 222 - 0x2322a4b0a68 + 140
Copied 3 of 8 : 351 - 0x2322a4b04f0 + 140
Copied 4 of 8 : 386 - 0x2322a4b0810 + 40
Copied 5 of 8 : 430 - 0x2322a4b05b8 + 80
Copied 6 of 8 : 436 - 0x2322a4b0810 + 140
Copied 7 of 8 : 437 - 0x2322a4b08d8 + 0
Search left to right: 223 > 159 & 0 < 8
Search left to right: 223 > 198 & 1 < 8
Search left to right: 223 > 222 & 2 < 8
Shifting right: 8 > 7
Shifting right: 7 > 6
Shifting right: 6 > 5
Shifting right: 5 > 4
Shifting right: 4 > 3
Inserting key to node 3 : 223
Inserting address to node 3 : 0x2322a4b0b30 + 20
newLeaf->isLeaf was: 13
newLeaf->isLeaf: 1
Calc the new keys after split
cursor->numKeys was: 8
newLeaf->numKeys was: 0
cursor->numKeys: 5
newLeaf->numKeys: 4
newLeaf->pointers[4] was: 0x232154471d0 + 0
newLeaf->pointers[4] : 0x232154471d0 + 0
Adding the keyptr back to the nodes
Adding to cursor 0 : 159 - 0x2322a4b04f0 + 0
Adding to cursor 1 : 198 - 0x2322a4b0b30 + 0
Adding to cursor 2 : 222 - 0x2322a4b0a68 + 140
Adding to cursor 3 : 223 - 0x2322a4b0b30 + 20
Adding to cursor 4 : 351 - 0x2322a4b04f0 + 140
Adding to newLeaf 0 : 386 - 0x2322a4b0810 + 40
Adding to newLeaf 1 : 430 - 0x2322a4b05b8 + 80
Adding to newLeaf 2 : 436 - 0x2322a4b0810 + 140
Adding to newLeaf 3 : 437 - 0x2322a4b08d8 + 0
cursor->pointers[5] was: 0x2322a4b05b8 + 80
cursor->pointers[5] : 0x23215447750 + 0
wiping cursor->keys[5] was : 430
wiping cursor->keys[5] : 0
wiping cursor->keys[6] was : 436
wiping cursor->keys[6] : 0
wiping cursor->keys[7] was : 437
wiping cursor->keys[7] : 0
wiping cursor->pointers[6] was : 0x2322a4b0810 + 140
wiping cursor->pointers[6] : 0 + 0
wiping cursor->pointers[7] was : 0x2322a4b08d8 + 0
wiping cursor->pointers[7] : 0 + 0
wiping cursor->pointers[8] was : 0x232154471d0 + 0
wiping cursor->pointers[8] : 0 + 0
Need insert parent in middle: 386
Inserted record tt0000144 at block address: 0x2322a4b0b30 -> 0x2322a4b0b44

Writing record: tt0000145
blocksallocated: 15 curblocksizeused + sizeRequired = 60 > 200
offset: 40
curblocksizeused was: 40 + 20
curblocksizeused: 60
actualsizeused was: 2840 + 20
actualsizeused: 2860
recordAddress: 0x2322a4b0b30 - 40
diskaddress: 0x2322a4b0b30 - 40
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0b30 - 0x2322a4b0b58 -> 0x2322a4b0b6c : 40 - 20
Inserting record: tt0000145 to bptree 
Inserting record 7 - 0x2322a4b0b30 + 40 = 0x2322a4b0b58
Root exists for key 7 - 0x2322a4b0b30 + 40 = 0x2322a4b0b58
address: 0x2322a4b0b30 + 40
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 3
Level: 0 - Key: 7 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 2
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 3
Level: 0 - Key: 7 < 159 :cursor-keys[ 1 ] 
key 7 lesser than 159
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 5
Level: 1 - Key: 7 < 16 :cursor-keys[ 0 ] 
key 7 lesser than 16
Cursor was: 0x23215445430
Cursor: 0x232155e3ea0
Reached leaf node
Comparing: 7 < 8
Checking for duplicates 8 == 7
cursor->numKeys: 7
next: 0x23215447070 - 0
Shifting right: 7 > 6
Shifting right: 6 > 5
Shifting right: 5 > 4
Shifting right: 4 > 3
Shifting right: 3 > 2
Shifting right: 2 > 1
Shifting right: 1 > 0
Inserting key to node 0 : 7
cursor->numKeys was: 7
cursor->numKeys: 8
Inserted record tt0000145 at block address: 0x2322a4b0b30 -> 0x2322a4b0b58

Writing record: tt0000146
blocksallocated: 15 curblocksizeused + sizeRequired = 80 > 200
offset: 60
curblocksizeused was: 60 + 20
curblocksizeused: 80
actualsizeused was: 2860 + 20
actualsizeused: 2880
recordAddress: 0x2322a4b0b30 - 60
diskaddress: 0x2322a4b0b30 - 60
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0b30 - 0x2322a4b0b6c -> 0x2322a4b0b80 : 60 - 20
Inserting record: tt0000146 to bptree 
Inserting record 14 - 0x2322a4b0b30 + 60 = 0x2322a4b0b6c
Root exists for key 14 - 0x2322a4b0b30 + 60 = 0x2322a4b0b6c
address: 0x2322a4b0b30 + 60
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 3
Level: 0 - Key: 14 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 2
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 3
Level: 0 - Key: 14 < 159 :cursor-keys[ 1 ] 
key 14 lesser than 159
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 5
Level: 1 - Key: 14 < 16 :cursor-keys[ 0 ] 
key 14 lesser than 16
Cursor was: 0x23215445430
Cursor: 0x232155e3ea0
Reached leaf node
Comparing: 8 < 8
Creating BPNode of size 8
Created new BPNode at 0x232154478b0
Copied 0 of 8 : 7 - 0x2322a4b0b30 + 40
Copied 1 of 8 : 8 - 0x2322a4b09a0 + 60
Copied 2 of 8 : 9 - 0x2322a4b0428 + 20
Copied 3 of 8 : 11 - 0x2322a4b0a68 + 180
Copied 4 of 8 : 12 - 0x2322a4b0428 + 80
Copied 5 of 8 : 13 - 0x2322a4b0748 + 80
Copied 6 of 8 : 14 - 0x2322a4b0428 + 180
Copied 7 of 8 : 15 - 0x2322a4b04f0 + 20
Search left to right: 14 > 7 & 0 < 8
Search left to right: 14 > 8 & 1 < 8
Search left to right: 14 > 9 & 2 < 8
Search left to right: 14 > 11 & 3 < 8
Search left to right: 14 > 12 & 4 < 8
Search left to right: 14 > 13 & 5 < 8
Duplicate Overflow: 14
Shifting right: 8 > 7
Shifting right: 7 > 6
Inserting key to node 6 : 14
Inserting address to node 6 : 0x2322a4b0b30 + 60
newLeaf->isLeaf was: 13
newLeaf->isLeaf: 1
Calc the new keys after split
cursor->numKeys was: 8
newLeaf->numKeys was: 0
cursor->numKeys: 5
newLeaf->numKeys: 4
newLeaf->pointers[4] was: 0x23215447070 + 0
newLeaf->pointers[4] : 0x23215447070 + 0
Adding the keyptr back to the nodes
Adding to cursor 0 : 7 - 0x2322a4b0b30 + 40
Adding to cursor 1 : 8 - 0x2322a4b09a0 + 60
Adding to cursor 2 : 9 - 0x2322a4b0428 + 20
Adding to cursor 3 : 11 - 0x2322a4b0a68 + 180
Adding to cursor 4 : 12 - 0x2322a4b0428 + 80
Adding to newLeaf 0 : 13 - 0x2322a4b0748 + 80
Adding to newLeaf 1 : 14 - 0x2322a4b0b30 + 60
Adding to newLeaf 2 : 14 - 0x2322a4b0428 + 180
Adding to newLeaf 3 : 15 - 0x2322a4b04f0 + 20
cursor->pointers[5] was: 0x2322a4b0748 + 80
cursor->pointers[5] : 0x232154478b0 + 0
wiping cursor->keys[5] was : 13
wiping cursor->keys[5] : 0
wiping cursor->keys[6] was : 14
wiping cursor->keys[6] : 0
wiping cursor->keys[7] was : 15
wiping cursor->keys[7] : 0
wiping cursor->pointers[6] was : 0x2322a4b0428 + 180
wiping cursor->pointers[6] : 0 + 0
wiping cursor->pointers[7] was : 0x2322a4b04f0 + 20
wiping cursor->pointers[7] : 0 + 0
wiping cursor->pointers[8] was : 0x23215447070 + 0
wiping cursor->pointers[8] : 0 + 0
Need insert parent in middle: 13
Inserted record tt0000146 at block address: 0x2322a4b0b30 -> 0x2322a4b0b6c

Writing record: tt0000147
blocksallocated: 15 curblocksizeused + sizeRequired = 100 > 200
offset: 80
curblocksizeused was: 80 + 20
curblocksizeused: 100
actualsizeused was: 2880 + 20
actualsizeused: 2900
recordAddress: 0x2322a4b0b30 - 80
diskaddress: 0x2322a4b0b30 - 80
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0b30 - 0x2322a4b0b80 -> 0x2322a4b0b94 : 80 - 20
Inserting record: tt0000147 to bptree 
Inserting record 356 - 0x2322a4b0b30 + 80 = 0x2322a4b0b80
Root exists for key 356 - 0x2322a4b0b30 + 80 = 0x2322a4b0b80
address: 0x2322a4b0b30 + 80
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 3
Level: 0 - Key: 356 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 2
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 3
Level: 0 - Key: 356 < 159 :cursor-keys[ 1 ] 
Checking if larger than all other keys: 1 == 2
Level: 0 - Leaf: 0 Checking thru all keys of node: 2 < 3
Level: 0 - Key: 356 < 1342 :cursor-keys[ 2 ] 
key 356 lesser than 1342
Cursor was: 0x232154457d0
Cursor: 0x232154475f0
Parent was: 0x232154457d0
Parent: 0x232154475f0
Cursor: 0x232154475f0
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 5
Level: 1 - Key: 356 < 386 :cursor-keys[ 0 ] 
key 356 lesser than 386
Cursor was: 0x232154475f0
Cursor: 0x23215446af0
Reached leaf node
Comparing: 5 < 8
Search left to right: 356 > 159 & 0 < 5
Search left to right: 356 > 198 & 1 < 5
Search left to right: 356 > 222 & 2 < 5
Search left to right: 356 > 223 & 3 < 5
Search left to right: 356 > 351 & 4 < 5
Checking for duplicates 0 == 356
cursor->numKeys: 5
next: 0x23215447750 - 0
Inserting key to node 5 : 356
cursor->numKeys was: 5
cursor->numKeys: 6
Inserted record tt0000147 at block address: 0x2322a4b0b30 -> 0x2322a4b0b80

Writing record: tt0000148
blocksallocated: 15 curblocksizeused + sizeRequired = 120 > 200
offset: 100
curblocksizeused was: 100 + 20
curblocksizeused: 120
actualsizeused was: 2900 + 20
actualsizeused: 2920
recordAddress: 0x2322a4b0b30 - 100
diskaddress: 0x2322a4b0b30 - 100
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0b30 - 0x2322a4b0b94 -> 0x2322a4b0ba8 : 100 - 20
Inserting record: tt0000148 to bptree 
Inserting record 7 - 0x2322a4b0b30 + 100 = 0x2322a4b0b94
Root exists for key 7 - 0x2322a4b0b30 + 100 = 0x2322a4b0b94
address: 0x2322a4b0b30 + 100
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 3
Level: 0 - Key: 7 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 2
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 3
Level: 0 - Key: 7 < 159 :cursor-keys[ 1 ] 
key 7 lesser than 159
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 6
Level: 1 - Key: 7 < 13 :cursor-keys[ 0 ] 
key 7 lesser than 13
Cursor was: 0x23215445430
Cursor: 0x232155e3ea0
Reached leaf node
Comparing: 5 < 8
Checking for duplicates 7 == 7
Duplicate: 7
Inserted record tt0000148 at block address: 0x2322a4b0b30 -> 0x2322a4b0b94

Writing record: tt0000149
blocksallocated: 15 curblocksizeused + sizeRequired = 140 > 200
offset: 120
curblocksizeused was: 120 + 20
curblocksizeused: 140
actualsizeused was: 2920 + 20
actualsizeused: 2940
recordAddress: 0x2322a4b0b30 - 120
diskaddress: 0x2322a4b0b30 - 120
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0b30 - 0x2322a4b0ba8 -> 0x2322a4b0bbc : 120 - 20
Inserting record: tt0000149 to bptree 
Inserting record 12 - 0x2322a4b0b30 + 120 = 0x2322a4b0ba8
Root exists for key 12 - 0x2322a4b0b30 + 120 = 0x2322a4b0ba8
address: 0x2322a4b0b30 + 120
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 3
Level: 0 - Key: 12 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 2
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 3
Level: 0 - Key: 12 < 159 :cursor-keys[ 1 ] 
key 12 lesser than 159
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 6
Level: 1 - Key: 12 < 13 :cursor-keys[ 0 ] 
key 12 lesser than 13
Cursor was: 0x23215445430
Cursor: 0x232155e3ea0
Reached leaf node
Comparing: 5 < 8
Search left to right: 12 > 7 & 0 < 5
Search left to right: 12 > 8 & 1 < 5
Search left to right: 12 > 9 & 2 < 5
Search left to right: 12 > 11 & 3 < 5
Checking for duplicates 12 == 12
Duplicate: 12
Inserted record tt0000149 at block address: 0x2322a4b0b30 -> 0x2322a4b0ba8

Writing record: tt0000150
blocksallocated: 15 curblocksizeused + sizeRequired = 160 > 200
offset: 140
curblocksizeused was: 140 + 20
curblocksizeused: 160
actualsizeused was: 2940 + 20
actualsizeused: 2960
recordAddress: 0x2322a4b0b30 - 140
diskaddress: 0x2322a4b0b30 - 140
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0b30 - 0x2322a4b0bbc -> 0x2322a4b0bd0 : 140 - 20
Inserting record: tt0000150 to bptree 
Inserting record 112 - 0x2322a4b0b30 + 140 = 0x2322a4b0bbc
Root exists for key 112 - 0x2322a4b0b30 + 140 = 0x2322a4b0bbc
address: 0x2322a4b0b30 + 140
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 3
Level: 0 - Key: 112 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 2
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 3
Level: 0 - Key: 112 < 159 :cursor-keys[ 1 ] 
key 112 lesser than 159
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 6
Level: 1 - Key: 112 < 13 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 6
Level: 1 - Key: 112 < 16 :cursor-keys[ 1 ] 
Checking if larger than all other keys: 1 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 2 < 6
Level: 1 - Key: 112 < 18 :cursor-keys[ 2 ] 
Checking if larger than all other keys: 2 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 3 < 6
Level: 1 - Key: 112 < 25 :cursor-keys[ 3 ] 
Checking if larger than all other keys: 3 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 4 < 6
Level: 1 - Key: 112 < 43 :cursor-keys[ 4 ] 
Checking if larger than all other keys: 4 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 5 < 6
Level: 1 - Key: 112 < 62 :cursor-keys[ 5 ] 
Checking if larger than all other keys: 5 == 5
Larger than all other keys in node going to last: 5 == 5
Cursor was: 0x23215445430
Cursor: 0x23215447490
Reached leaf node
Comparing: 4 < 8
Search left to right: 112 > 62 & 0 < 4
Search left to right: 112 > 66 & 1 < 4
Search left to right: 112 > 74 & 2 < 4
Checking for duplicates 118 == 112
cursor->numKeys: 4
next: 0x23215446af0 - 0
Shifting right: 4 > 3
Inserting key to node 3 : 112
cursor->numKeys was: 4
cursor->numKeys: 5
Inserted record tt0000150 at block address: 0x2322a4b0b30 -> 0x2322a4b0bbc

Writing record: tt0000151
blocksallocated: 15 curblocksizeused + sizeRequired = 180 > 200
offset: 160
curblocksizeused was: 160 + 20
curblocksizeused: 180
actualsizeused was: 2960 + 20
actualsizeused: 2980
recordAddress: 0x2322a4b0b30 - 160
diskaddress: 0x2322a4b0b30 - 160
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0b30 - 0x2322a4b0bd0 -> 0x2322a4b0be4 : 160 - 20
Inserting record: tt0000151 to bptree 
Inserting record 32 - 0x2322a4b0b30 + 160 = 0x2322a4b0bd0
Root exists for key 32 - 0x2322a4b0b30 + 160 = 0x2322a4b0bd0
address: 0x2322a4b0b30 + 160
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 3
Level: 0 - Key: 32 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 2
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 3
Level: 0 - Key: 32 < 159 :cursor-keys[ 1 ] 
key 32 lesser than 159
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 6
Level: 1 - Key: 32 < 13 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 6
Level: 1 - Key: 32 < 16 :cursor-keys[ 1 ] 
Checking if larger than all other keys: 1 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 2 < 6
Level: 1 - Key: 32 < 18 :cursor-keys[ 2 ] 
Checking if larger than all other keys: 2 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 3 < 6
Level: 1 - Key: 32 < 25 :cursor-keys[ 3 ] 
Checking if larger than all other keys: 3 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 4 < 6
Level: 1 - Key: 32 < 43 :cursor-keys[ 4 ] 
key 32 lesser than 43
Cursor was: 0x23215445430
Cursor: 0x23215447330
Reached leaf node
Comparing: 6 < 8
Search left to right: 32 > 25 & 0 < 6
Search left to right: 32 > 26 & 1 < 6
Search left to right: 32 > 30 & 2 < 6
Search left to right: 32 > 30 & 3 < 6
Checking for duplicates 34 == 32
cursor->numKeys: 6
next: 0x23215446c50 - 0
Shifting right: 6 > 5
Shifting right: 5 > 4
Inserting key to node 4 : 32
cursor->numKeys was: 6
cursor->numKeys: 7
Inserted record tt0000151 at block address: 0x2322a4b0b30 -> 0x2322a4b0bd0

Writing record: tt0000152
blocksallocated: 15 curblocksizeused + sizeRequired = 200 > 200
offset: 180
curblocksizeused was: 180 + 20
curblocksizeused: 200
actualsizeused was: 2980 + 20
actualsizeused: 3000
recordAddress: 0x2322a4b0b30 - 180
diskaddress: 0x2322a4b0b30 - 180
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0b30 - 0x2322a4b0be4 -> 0x2322a4b0bf8 : 180 - 20
Inserting record: tt0000152 to bptree 
Inserting record 180 - 0x2322a4b0b30 + 180 = 0x2322a4b0be4
Root exists for key 180 - 0x2322a4b0b30 + 180 = 0x2322a4b0be4
address: 0x2322a4b0b30 + 180
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 3
Level: 0 - Key: 180 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 2
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 3
Level: 0 - Key: 180 < 159 :cursor-keys[ 1 ] 
Checking if larger than all other keys: 1 == 2
Level: 0 - Leaf: 0 Checking thru all keys of node: 2 < 3
Level: 0 - Key: 180 < 1342 :cursor-keys[ 2 ] 
key 180 lesser than 1342
Cursor was: 0x232154457d0
Cursor: 0x232154475f0
Parent was: 0x232154457d0
Parent: 0x232154475f0
Cursor: 0x232154475f0
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 5
Level: 1 - Key: 180 < 386 :cursor-keys[ 0 ] 
key 180 lesser than 386
Cursor was: 0x232154475f0
Cursor: 0x23215446af0
Reached leaf node
Comparing: 6 < 8
Search left to right: 180 > 159 & 0 < 6
Checking for duplicates 198 == 180
cursor->numKeys: 6
next: 0x23215447750 - 0
Shifting right: 6 > 5
Shifting right: 5 > 4
Shifting right: 4 > 3
Shifting right: 3 > 2
Shifting right: 2 > 1
Inserting key to node 1 : 180
cursor->numKeys was: 6
cursor->numKeys: 7
Inserted record tt0000152 at block address: 0x2322a4b0b30 -> 0x2322a4b0be4

Writing record: tt0000153
blocksallocated: 15 curblocksizeused + sizeRequired = 220 > 200
blockavailable: 749985
blocksallocated * blocksize: 3000 - poolptr + blocksallocated * blocksize: 0x2322a4b0bf8
blockptr was: 0x2322a4b0b30
blockptr: 0x2322a4b0bf8
blocksallocated: 16 blocksavailable: 749984 blocksizeused: 3200 curblocksizeused: 0
offset: 0
curblocksizeused was: 0 + 20
curblocksizeused: 20
actualsizeused was: 3000 + 20
actualsizeused: 3020
recordAddress: 0x2322a4b0bf8 - 0
diskaddress: 0x2322a4b0bf8 - 0
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0bf8 - 0x2322a4b0bf8 -> 0x2322a4b0c0c : 0 - 20
Inserting record: tt0000153 to bptree 
Inserting record 330 - 0x2322a4b0bf8 + 0 = 0x2322a4b0bf8
Root exists for key 330 - 0x2322a4b0bf8 + 0 = 0x2322a4b0bf8
address: 0x2322a4b0bf8 + 0
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 3
Level: 0 - Key: 330 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 2
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 3
Level: 0 - Key: 330 < 159 :cursor-keys[ 1 ] 
Checking if larger than all other keys: 1 == 2
Level: 0 - Leaf: 0 Checking thru all keys of node: 2 < 3
Level: 0 - Key: 330 < 1342 :cursor-keys[ 2 ] 
key 330 lesser than 1342
Cursor was: 0x232154457d0
Cursor: 0x232154475f0
Parent was: 0x232154457d0
Parent: 0x232154475f0
Cursor: 0x232154475f0
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 5
Level: 1 - Key: 330 < 386 :cursor-keys[ 0 ] 
key 330 lesser than 386
Cursor was: 0x232154475f0
Cursor: 0x23215446af0
Reached leaf node
Comparing: 7 < 8
Search left to right: 330 > 159 & 0 < 7
Search left to right: 330 > 180 & 1 < 7
Search left to right: 330 > 198 & 2 < 7
Search left to right: 330 > 222 & 3 < 7
Search left to right: 330 > 223 & 4 < 7
Checking for duplicates 351 == 330
cursor->numKeys: 7
next: 0x23215447750 - 0
Shifting right: 7 > 6
Shifting right: 6 > 5
Inserting key to node 5 : 330
cursor->numKeys was: 7
cursor->numKeys: 8
Inserted record tt0000153 at block address: 0x2322a4b0bf8 -> 0x2322a4b0bf8

Writing record: tt0000154
blocksallocated: 16 curblocksizeused + sizeRequired = 40 > 200
offset: 20
curblocksizeused was: 20 + 20
curblocksizeused: 40
actualsizeused was: 3020 + 20
actualsizeused: 3040
recordAddress: 0x2322a4b0bf8 - 20
diskaddress: 0x2322a4b0bf8 - 20
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0bf8 - 0x2322a4b0c0c -> 0x2322a4b0c20 : 20 - 20
Inserting record: tt0000154 to bptree 
Inserting record 8 - 0x2322a4b0bf8 + 20 = 0x2322a4b0c0c
Root exists for key 8 - 0x2322a4b0bf8 + 20 = 0x2322a4b0c0c
address: 0x2322a4b0bf8 + 20
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 3
Level: 0 - Key: 8 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 2
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 3
Level: 0 - Key: 8 < 159 :cursor-keys[ 1 ] 
key 8 lesser than 159
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 6
Level: 1 - Key: 8 < 13 :cursor-keys[ 0 ] 
key 8 lesser than 13
Cursor was: 0x23215445430
Cursor: 0x232155e3ea0
Reached leaf node
Comparing: 5 < 8
Search left to right: 8 > 7 & 0 < 5
Checking for duplicates 8 == 8
Duplicate: 8
Inserted record tt0000154 at block address: 0x2322a4b0bf8 -> 0x2322a4b0c0c

Writing record: tt0000155
blocksallocated: 16 curblocksizeused + sizeRequired = 60 > 200
offset: 40
curblocksizeused was: 40 + 20
curblocksizeused: 60
actualsizeused was: 3040 + 20
actualsizeused: 3060
recordAddress: 0x2322a4b0bf8 - 40
diskaddress: 0x2322a4b0bf8 - 40
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0bf8 - 0x2322a4b0c20 -> 0x2322a4b0c34 : 40 - 20
Inserting record: tt0000155 to bptree 
Inserting record 15 - 0x2322a4b0bf8 + 40 = 0x2322a4b0c20
Root exists for key 15 - 0x2322a4b0bf8 + 40 = 0x2322a4b0c20
address: 0x2322a4b0bf8 + 40
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 3
Level: 0 - Key: 15 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 2
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 3
Level: 0 - Key: 15 < 159 :cursor-keys[ 1 ] 
key 15 lesser than 159
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 6
Level: 1 - Key: 15 < 13 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 6
Level: 1 - Key: 15 < 16 :cursor-keys[ 1 ] 
key 15 lesser than 16
Cursor was: 0x23215445430
Cursor: 0x232154478b0
Reached leaf node
Comparing: 4 < 8
Search left to right: 15 > 13 & 0 < 4
Search left to right: 15 > 14 & 1 < 4
Search left to right: 15 > 14 & 2 < 4
Checking for duplicates 15 == 15
Duplicate: 15
Inserted record tt0000155 at block address: 0x2322a4b0bf8 -> 0x2322a4b0c20

Writing record: tt0000156
blocksallocated: 16 curblocksizeused + sizeRequired = 80 > 200
offset: 60
curblocksizeused was: 60 + 20
curblocksizeused: 80
actualsizeused was: 3060 + 20
actualsizeused: 3080
recordAddress: 0x2322a4b0bf8 - 60
diskaddress: 0x2322a4b0bf8 - 60
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0bf8 - 0x2322a4b0c34 -> 0x2322a4b0c48 : 60 - 20
Inserting record: tt0000156 to bptree 
Inserting record 13 - 0x2322a4b0bf8 + 60 = 0x2322a4b0c34
Root exists for key 13 - 0x2322a4b0bf8 + 60 = 0x2322a4b0c34
address: 0x2322a4b0bf8 + 60
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 3
Level: 0 - Key: 13 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 2
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 3
Level: 0 - Key: 13 < 159 :cursor-keys[ 1 ] 
key 13 lesser than 159
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 6
Level: 1 - Key: 13 < 13 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 6
Level: 1 - Key: 13 < 16 :cursor-keys[ 1 ] 
key 13 lesser than 16
Cursor was: 0x23215445430
Cursor: 0x232154478b0
Reached leaf node
Comparing: 4 < 8
Checking for duplicates 13 == 13
Duplicate: 13
Inserted record tt0000156 at block address: 0x2322a4b0bf8 -> 0x2322a4b0c34

Writing record: tt0000157
blocksallocated: 16 curblocksizeused + sizeRequired = 100 > 200
offset: 80
curblocksizeused was: 80 + 20
curblocksizeused: 100
actualsizeused was: 3080 + 20
actualsizeused: 3100
recordAddress: 0x2322a4b0bf8 - 80
diskaddress: 0x2322a4b0bf8 - 80
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0bf8 - 0x2322a4b0c48 -> 0x2322a4b0c5c : 80 - 20
Inserting record: tt0000157 to bptree 
Inserting record 8 - 0x2322a4b0bf8 + 80 = 0x2322a4b0c48
Root exists for key 8 - 0x2322a4b0bf8 + 80 = 0x2322a4b0c48
address: 0x2322a4b0bf8 + 80
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 3
Level: 0 - Key: 8 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 2
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 3
Level: 0 - Key: 8 < 159 :cursor-keys[ 1 ] 
key 8 lesser than 159
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 6
Level: 1 - Key: 8 < 13 :cursor-keys[ 0 ] 
key 8 lesser than 13
Cursor was: 0x23215445430
Cursor: 0x232155e3ea0
Reached leaf node
Comparing: 5 < 8
Search left to right: 8 > 7 & 0 < 5
Checking for duplicates 8 == 8
Duplicate: 8
Inserted record tt0000157 at block address: 0x2322a4b0bf8 -> 0x2322a4b0c48

Writing record: tt0000158
blocksallocated: 16 curblocksizeused + sizeRequired = 120 > 200
offset: 100
curblocksizeused was: 100 + 20
curblocksizeused: 120
actualsizeused was: 3100 + 20
actualsizeused: 3120
recordAddress: 0x2322a4b0bf8 - 100
diskaddress: 0x2322a4b0bf8 - 100
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0bf8 - 0x2322a4b0c5c -> 0x2322a4b0c70 : 100 - 20
Inserting record: tt0000158 to bptree 
Inserting record 8 - 0x2322a4b0bf8 + 100 = 0x2322a4b0c5c
Root exists for key 8 - 0x2322a4b0bf8 + 100 = 0x2322a4b0c5c
address: 0x2322a4b0bf8 + 100
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 3
Level: 0 - Key: 8 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 2
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 3
Level: 0 - Key: 8 < 159 :cursor-keys[ 1 ] 
key 8 lesser than 159
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 6
Level: 1 - Key: 8 < 13 :cursor-keys[ 0 ] 
key 8 lesser than 13
Cursor was: 0x23215445430
Cursor: 0x232155e3ea0
Reached leaf node
Comparing: 5 < 8
Search left to right: 8 > 7 & 0 < 5
Checking for duplicates 8 == 8
Duplicate: 8
Inserted record tt0000158 at block address: 0x2322a4b0bf8 -> 0x2322a4b0c5c

Writing record: tt0000159
blocksallocated: 16 curblocksizeused + sizeRequired = 140 > 200
offset: 120
curblocksizeused was: 120 + 20
curblocksizeused: 140
actualsizeused was: 3120 + 20
actualsizeused: 3140
recordAddress: 0x2322a4b0bf8 - 120
diskaddress: 0x2322a4b0bf8 - 120
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0bf8 - 0x2322a4b0c70 -> 0x2322a4b0c84 : 120 - 20
Inserting record: tt0000159 to bptree 
Inserting record 70 - 0x2322a4b0bf8 + 120 = 0x2322a4b0c70
Root exists for key 70 - 0x2322a4b0bf8 + 120 = 0x2322a4b0c70
address: 0x2322a4b0bf8 + 120
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 3
Level: 0 - Key: 70 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 2
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 3
Level: 0 - Key: 70 < 159 :cursor-keys[ 1 ] 
key 70 lesser than 159
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 6
Level: 1 - Key: 70 < 13 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 6
Level: 1 - Key: 70 < 16 :cursor-keys[ 1 ] 
Checking if larger than all other keys: 1 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 2 < 6
Level: 1 - Key: 70 < 18 :cursor-keys[ 2 ] 
Checking if larger than all other keys: 2 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 3 < 6
Level: 1 - Key: 70 < 25 :cursor-keys[ 3 ] 
Checking if larger than all other keys: 3 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 4 < 6
Level: 1 - Key: 70 < 43 :cursor-keys[ 4 ] 
Checking if larger than all other keys: 4 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 5 < 6
Level: 1 - Key: 70 < 62 :cursor-keys[ 5 ] 
Checking if larger than all other keys: 5 == 5
Larger than all other keys in node going to last: 5 == 5
Cursor was: 0x23215445430
Cursor: 0x23215447490
Reached leaf node
Comparing: 5 < 8
Search left to right: 70 > 62 & 0 < 5
Search left to right: 70 > 66 & 1 < 5
Checking for duplicates 74 == 70
cursor->numKeys: 5
next: 0x23215446af0 - 0
Shifting right: 5 > 4
Shifting right: 4 > 3
Shifting right: 3 > 2
Inserting key to node 2 : 70
cursor->numKeys was: 5
cursor->numKeys: 6
Inserted record tt0000159 at block address: 0x2322a4b0bf8 -> 0x2322a4b0c70

Writing record: tt0000160
blocksallocated: 16 curblocksizeused + sizeRequired = 160 > 200
offset: 140
curblocksizeused was: 140 + 20
curblocksizeused: 160
actualsizeused was: 3140 + 20
actualsizeused: 3160
recordAddress: 0x2322a4b0bf8 - 140
diskaddress: 0x2322a4b0bf8 - 140
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0bf8 - 0x2322a4b0c84 -> 0x2322a4b0c98 : 140 - 20
Inserting record: tt0000160 to bptree 
Inserting record 9 - 0x2322a4b0bf8 + 140 = 0x2322a4b0c84
Root exists for key 9 - 0x2322a4b0bf8 + 140 = 0x2322a4b0c84
address: 0x2322a4b0bf8 + 140
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 3
Level: 0 - Key: 9 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 2
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 3
Level: 0 - Key: 9 < 159 :cursor-keys[ 1 ] 
key 9 lesser than 159
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 6
Level: 1 - Key: 9 < 13 :cursor-keys[ 0 ] 
key 9 lesser than 13
Cursor was: 0x23215445430
Cursor: 0x232155e3ea0
Reached leaf node
Comparing: 5 < 8
Search left to right: 9 > 7 & 0 < 5
Search left to right: 9 > 8 & 1 < 5
Checking for duplicates 9 == 9
Duplicate: 9
Inserted record tt0000160 at block address: 0x2322a4b0bf8 -> 0x2322a4b0c84

Writing record: tt0000161
blocksallocated: 16 curblocksizeused + sizeRequired = 180 > 200
offset: 160
curblocksizeused was: 160 + 20
curblocksizeused: 180
actualsizeused was: 3160 + 20
actualsizeused: 3180
recordAddress: 0x2322a4b0bf8 - 160
diskaddress: 0x2322a4b0bf8 - 160
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0bf8 - 0x2322a4b0c98 -> 0x2322a4b0cac : 160 - 20
Inserting record: tt0000161 to bptree 
Inserting record 8 - 0x2322a4b0bf8 + 160 = 0x2322a4b0c98
Root exists for key 8 - 0x2322a4b0bf8 + 160 = 0x2322a4b0c98
address: 0x2322a4b0bf8 + 160
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 3
Level: 0 - Key: 8 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 2
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 3
Level: 0 - Key: 8 < 159 :cursor-keys[ 1 ] 
key 8 lesser than 159
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 6
Level: 1 - Key: 8 < 13 :cursor-keys[ 0 ] 
key 8 lesser than 13
Cursor was: 0x23215445430
Cursor: 0x232155e3ea0
Reached leaf node
Comparing: 5 < 8
Search left to right: 8 > 7 & 0 < 5
Checking for duplicates 8 == 8
Duplicate: 8
Inserted record tt0000161 at block address: 0x2322a4b0bf8 -> 0x2322a4b0c98

Writing record: tt0000162
blocksallocated: 16 curblocksizeused + sizeRequired = 200 > 200
offset: 180
curblocksizeused was: 180 + 20
curblocksizeused: 200
actualsizeused was: 3180 + 20
actualsizeused: 3200
recordAddress: 0x2322a4b0bf8 - 180
diskaddress: 0x2322a4b0bf8 - 180
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0bf8 - 0x2322a4b0cac -> 0x2322a4b0cc0 : 180 - 20
Inserting record: tt0000162 to bptree 
Inserting record 395 - 0x2322a4b0bf8 + 180 = 0x2322a4b0cac
Root exists for key 395 - 0x2322a4b0bf8 + 180 = 0x2322a4b0cac
address: 0x2322a4b0bf8 + 180
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 3
Level: 0 - Key: 395 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 2
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 3
Level: 0 - Key: 395 < 159 :cursor-keys[ 1 ] 
Checking if larger than all other keys: 1 == 2
Level: 0 - Leaf: 0 Checking thru all keys of node: 2 < 3
Level: 0 - Key: 395 < 1342 :cursor-keys[ 2 ] 
key 395 lesser than 1342
Cursor was: 0x232154457d0
Cursor: 0x232154475f0
Parent was: 0x232154457d0
Parent: 0x232154475f0
Cursor: 0x232154475f0
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 5
Level: 1 - Key: 395 < 386 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 4
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 5
Level: 1 - Key: 395 < 439 :cursor-keys[ 1 ] 
key 395 lesser than 439
Cursor was: 0x232154475f0
Cursor: 0x23215447750
Reached leaf node
Comparing: 4 < 8
Search left to right: 395 > 386 & 0 < 4
Checking for duplicates 430 == 395
cursor->numKeys: 4
next: 0x232154471d0 - 0
Shifting right: 4 > 3
Shifting right: 3 > 2
Shifting right: 2 > 1
Inserting key to node 1 : 395
cursor->numKeys was: 4
cursor->numKeys: 5
Inserted record tt0000162 at block address: 0x2322a4b0bf8 -> 0x2322a4b0cac

Writing record: tt0000163
blocksallocated: 16 curblocksizeused + sizeRequired = 220 > 200
blockavailable: 749984
blocksallocated * blocksize: 3200 - poolptr + blocksallocated * blocksize: 0x2322a4b0cc0
blockptr was: 0x2322a4b0bf8
blockptr: 0x2322a4b0cc0
blocksallocated: 17 blocksavailable: 749983 blocksizeused: 3400 curblocksizeused: 0
offset: 0
curblocksizeused was: 0 + 20
curblocksizeused: 20
actualsizeused was: 3200 + 20
actualsizeused: 3220
recordAddress: 0x2322a4b0cc0 - 0
diskaddress: 0x2322a4b0cc0 - 0
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0cc0 - 0x2322a4b0cc0 -> 0x2322a4b0cd4 : 0 - 20
Inserting record: tt0000163 to bptree 
Inserting record 6 - 0x2322a4b0cc0 + 0 = 0x2322a4b0cc0
Root exists for key 6 - 0x2322a4b0cc0 + 0 = 0x2322a4b0cc0
address: 0x2322a4b0cc0 + 0
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 3
Level: 0 - Key: 6 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 2
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 3
Level: 0 - Key: 6 < 159 :cursor-keys[ 1 ] 
key 6 lesser than 159
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 6
Level: 1 - Key: 6 < 13 :cursor-keys[ 0 ] 
key 6 lesser than 13
Cursor was: 0x23215445430
Cursor: 0x232155e3ea0
Reached leaf node
Comparing: 5 < 8
Checking for duplicates 7 == 6
cursor->numKeys: 5
next: 0x232154478b0 - 0
Shifting right: 5 > 4
Shifting right: 4 > 3
Shifting right: 3 > 2
Shifting right: 2 > 1
Shifting right: 1 > 0
Inserting key to node 0 : 6
cursor->numKeys was: 5
cursor->numKeys: 6
Inserted record tt0000163 at block address: 0x2322a4b0cc0 -> 0x2322a4b0cc0

Writing record: tt0000164
blocksallocated: 17 curblocksizeused + sizeRequired = 40 > 200
offset: 20
curblocksizeused was: 20 + 20
curblocksizeused: 40
actualsizeused was: 3220 + 20
actualsizeused: 3240
recordAddress: 0x2322a4b0cc0 - 20
diskaddress: 0x2322a4b0cc0 - 20
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0cc0 - 0x2322a4b0cd4 -> 0x2322a4b0ce8 : 20 - 20
Inserting record: tt0000164 to bptree 
Inserting record 227 - 0x2322a4b0cc0 + 20 = 0x2322a4b0cd4
Root exists for key 227 - 0x2322a4b0cc0 + 20 = 0x2322a4b0cd4
address: 0x2322a4b0cc0 + 20
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 3
Level: 0 - Key: 227 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 2
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 3
Level: 0 - Key: 227 < 159 :cursor-keys[ 1 ] 
Checking if larger than all other keys: 1 == 2
Level: 0 - Leaf: 0 Checking thru all keys of node: 2 < 3
Level: 0 - Key: 227 < 1342 :cursor-keys[ 2 ] 
key 227 lesser than 1342
Cursor was: 0x232154457d0
Cursor: 0x232154475f0
Parent was: 0x232154457d0
Parent: 0x232154475f0
Cursor: 0x232154475f0
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 5
Level: 1 - Key: 227 < 386 :cursor-keys[ 0 ] 
key 227 lesser than 386
Cursor was: 0x232154475f0
Cursor: 0x23215446af0
Reached leaf node
Comparing: 8 < 8
Creating BPNode of size 8
Created new BPNode at 0x23215447a10
Copied 0 of 8 : 159 - 0x2322a4b04f0 + 0
Copied 1 of 8 : 180 - 0x2322a4b0b30 + 180
Copied 2 of 8 : 198 - 0x2322a4b0b30 + 0
Copied 3 of 8 : 222 - 0x2322a4b0a68 + 140
Copied 4 of 8 : 223 - 0x2322a4b0b30 + 20
Copied 5 of 8 : 330 - 0x2322a4b0bf8 + 0
Copied 6 of 8 : 351 - 0x2322a4b04f0 + 140
Copied 7 of 8 : 356 - 0x2322a4b0b30 + 80
Search left to right: 227 > 159 & 0 < 8
Search left to right: 227 > 180 & 1 < 8
Search left to right: 227 > 198 & 2 < 8
Search left to right: 227 > 222 & 3 < 8
Search left to right: 227 > 223 & 4 < 8
Shifting right: 8 > 7
Shifting right: 7 > 6
Shifting right: 6 > 5
Inserting key to node 5 : 227
Inserting address to node 5 : 0x2322a4b0cc0 + 20
newLeaf->isLeaf was: 13
newLeaf->isLeaf: 1
Calc the new keys after split
cursor->numKeys was: 8
newLeaf->numKeys was: 0
cursor->numKeys: 5
newLeaf->numKeys: 4
newLeaf->pointers[4] was: 0x23215447750 + 0
newLeaf->pointers[4] : 0x23215447750 + 0
Adding the keyptr back to the nodes
Adding to cursor 0 : 159 - 0x2322a4b04f0 + 0
Adding to cursor 1 : 180 - 0x2322a4b0b30 + 180
Adding to cursor 2 : 198 - 0x2322a4b0b30 + 0
Adding to cursor 3 : 222 - 0x2322a4b0a68 + 140
Adding to cursor 4 : 223 - 0x2322a4b0b30 + 20
Adding to newLeaf 0 : 227 - 0x2322a4b0cc0 + 20
Adding to newLeaf 1 : 330 - 0x2322a4b0bf8 + 0
Adding to newLeaf 2 : 351 - 0x2322a4b04f0 + 140
Adding to newLeaf 3 : 356 - 0x2322a4b0b30 + 80
cursor->pointers[5] was: 0x2322a4b0bf8 + 0
cursor->pointers[5] : 0x23215447a10 + 0
wiping cursor->keys[5] was : 330
wiping cursor->keys[5] : 0
wiping cursor->keys[6] was : 351
wiping cursor->keys[6] : 0
wiping cursor->keys[7] was : 356
wiping cursor->keys[7] : 0
wiping cursor->pointers[6] was : 0x2322a4b04f0 + 140
wiping cursor->pointers[6] : 0 + 0
wiping cursor->pointers[7] was : 0x2322a4b0b30 + 80
wiping cursor->pointers[7] : 0 + 0
wiping cursor->pointers[8] was : 0x23215447750 + 0
wiping cursor->pointers[8] : 0 + 0
Need insert parent in middle: 227
Inserted record tt0000164 at block address: 0x2322a4b0cc0 -> 0x2322a4b0cd4

Writing record: tt0000165
blocksallocated: 17 curblocksizeused + sizeRequired = 60 > 200
offset: 40
curblocksizeused was: 40 + 20
curblocksizeused: 60
actualsizeused was: 3240 + 20
actualsizeused: 3260
recordAddress: 0x2322a4b0cc0 - 40
diskaddress: 0x2322a4b0cc0 - 40
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0cc0 - 0x2322a4b0ce8 -> 0x2322a4b0cfc : 40 - 20
Inserting record: tt0000165 to bptree 
Inserting record 89 - 0x2322a4b0cc0 + 40 = 0x2322a4b0ce8
Root exists for key 89 - 0x2322a4b0cc0 + 40 = 0x2322a4b0ce8
address: 0x2322a4b0cc0 + 40
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 3
Level: 0 - Key: 89 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 2
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 3
Level: 0 - Key: 89 < 159 :cursor-keys[ 1 ] 
key 89 lesser than 159
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 6
Level: 1 - Key: 89 < 13 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 6
Level: 1 - Key: 89 < 16 :cursor-keys[ 1 ] 
Checking if larger than all other keys: 1 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 2 < 6
Level: 1 - Key: 89 < 18 :cursor-keys[ 2 ] 
Checking if larger than all other keys: 2 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 3 < 6
Level: 1 - Key: 89 < 25 :cursor-keys[ 3 ] 
Checking if larger than all other keys: 3 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 4 < 6
Level: 1 - Key: 89 < 43 :cursor-keys[ 4 ] 
Checking if larger than all other keys: 4 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 5 < 6
Level: 1 - Key: 89 < 62 :cursor-keys[ 5 ] 
Checking if larger than all other keys: 5 == 5
Larger than all other keys in node going to last: 5 == 5
Cursor was: 0x23215445430
Cursor: 0x23215447490
Reached leaf node
Comparing: 6 < 8
Search left to right: 89 > 62 & 0 < 6
Search left to right: 89 > 66 & 1 < 6
Search left to right: 89 > 70 & 2 < 6
Search left to right: 89 > 74 & 3 < 6
Checking for duplicates 112 == 89
cursor->numKeys: 6
next: 0x23215446af0 - 0
Shifting right: 6 > 5
Shifting right: 5 > 4
Inserting key to node 4 : 89
cursor->numKeys was: 6
cursor->numKeys: 7
Inserted record tt0000165 at block address: 0x2322a4b0cc0 -> 0x2322a4b0ce8

Writing record: tt0000166
blocksallocated: 17 curblocksizeused + sizeRequired = 80 > 200
offset: 60
curblocksizeused was: 60 + 20
curblocksizeused: 80
actualsizeused was: 3260 + 20
actualsizeused: 3280
recordAddress: 0x2322a4b0cc0 - 60
diskaddress: 0x2322a4b0cc0 - 60
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0cc0 - 0x2322a4b0cfc -> 0x2322a4b0d10 : 60 - 20
Inserting record: tt0000166 to bptree 
Inserting record 7 - 0x2322a4b0cc0 + 60 = 0x2322a4b0cfc
Root exists for key 7 - 0x2322a4b0cc0 + 60 = 0x2322a4b0cfc
address: 0x2322a4b0cc0 + 60
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 3
Level: 0 - Key: 7 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 2
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 3
Level: 0 - Key: 7 < 159 :cursor-keys[ 1 ] 
key 7 lesser than 159
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 6
Level: 1 - Key: 7 < 13 :cursor-keys[ 0 ] 
key 7 lesser than 13
Cursor was: 0x23215445430
Cursor: 0x232155e3ea0
Reached leaf node
Comparing: 6 < 8
Search left to right: 7 > 6 & 0 < 6
Checking for duplicates 7 == 7
Duplicate: 7
Inserted record tt0000166 at block address: 0x2322a4b0cc0 -> 0x2322a4b0cfc

Writing record: tt0000167
blocksallocated: 17 curblocksizeused + sizeRequired = 100 > 200
offset: 80
curblocksizeused was: 80 + 20
curblocksizeused: 100
actualsizeused was: 3280 + 20
actualsizeused: 3300
recordAddress: 0x2322a4b0cc0 - 80
diskaddress: 0x2322a4b0cc0 - 80
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0cc0 - 0x2322a4b0d10 -> 0x2322a4b0d24 : 80 - 20
Inserting record: tt0000167 to bptree 
Inserting record 100 - 0x2322a4b0cc0 + 80 = 0x2322a4b0d10
Root exists for key 100 - 0x2322a4b0cc0 + 80 = 0x2322a4b0d10
address: 0x2322a4b0cc0 + 80
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 3
Level: 0 - Key: 100 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 2
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 3
Level: 0 - Key: 100 < 159 :cursor-keys[ 1 ] 
key 100 lesser than 159
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 6
Level: 1 - Key: 100 < 13 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 6
Level: 1 - Key: 100 < 16 :cursor-keys[ 1 ] 
Checking if larger than all other keys: 1 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 2 < 6
Level: 1 - Key: 100 < 18 :cursor-keys[ 2 ] 
Checking if larger than all other keys: 2 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 3 < 6
Level: 1 - Key: 100 < 25 :cursor-keys[ 3 ] 
Checking if larger than all other keys: 3 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 4 < 6
Level: 1 - Key: 100 < 43 :cursor-keys[ 4 ] 
Checking if larger than all other keys: 4 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 5 < 6
Level: 1 - Key: 100 < 62 :cursor-keys[ 5 ] 
Checking if larger than all other keys: 5 == 5
Larger than all other keys in node going to last: 5 == 5
Cursor was: 0x23215445430
Cursor: 0x23215447490
Reached leaf node
Comparing: 7 < 8
Search left to right: 100 > 62 & 0 < 7
Search left to right: 100 > 66 & 1 < 7
Search left to right: 100 > 70 & 2 < 7
Search left to right: 100 > 74 & 3 < 7
Search left to right: 100 > 89 & 4 < 7
Checking for duplicates 112 == 100
cursor->numKeys: 7
next: 0x23215446af0 - 0
Shifting right: 7 > 6
Shifting right: 6 > 5
Inserting key to node 5 : 100
cursor->numKeys was: 7
cursor->numKeys: 8
Inserted record tt0000167 at block address: 0x2322a4b0cc0 -> 0x2322a4b0d10

Writing record: tt0000168
blocksallocated: 17 curblocksizeused + sizeRequired = 120 > 200
offset: 100
curblocksizeused was: 100 + 20
curblocksizeused: 120
actualsizeused was: 3300 + 20
actualsizeused: 3320
recordAddress: 0x2322a4b0cc0 - 100
diskaddress: 0x2322a4b0cc0 - 100
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0cc0 - 0x2322a4b0d24 -> 0x2322a4b0d38 : 100 - 20
Inserting record: tt0000168 to bptree 
Inserting record 7 - 0x2322a4b0cc0 + 100 = 0x2322a4b0d24
Root exists for key 7 - 0x2322a4b0cc0 + 100 = 0x2322a4b0d24
address: 0x2322a4b0cc0 + 100
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 3
Level: 0 - Key: 7 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 2
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 3
Level: 0 - Key: 7 < 159 :cursor-keys[ 1 ] 
key 7 lesser than 159
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 6
Level: 1 - Key: 7 < 13 :cursor-keys[ 0 ] 
key 7 lesser than 13
Cursor was: 0x23215445430
Cursor: 0x232155e3ea0
Reached leaf node
Comparing: 6 < 8
Search left to right: 7 > 6 & 0 < 6
Checking for duplicates 7 == 7
Duplicate: 7
Inserted record tt0000168 at block address: 0x2322a4b0cc0 -> 0x2322a4b0d24

Writing record: tt0000169
blocksallocated: 17 curblocksizeused + sizeRequired = 140 > 200
offset: 120
curblocksizeused was: 120 + 20
curblocksizeused: 140
actualsizeused was: 3320 + 20
actualsizeused: 3340
recordAddress: 0x2322a4b0cc0 - 120
diskaddress: 0x2322a4b0cc0 - 120
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0cc0 - 0x2322a4b0d38 -> 0x2322a4b0d4c : 120 - 20
Inserting record: tt0000169 to bptree 
Inserting record 17 - 0x2322a4b0cc0 + 120 = 0x2322a4b0d38
Root exists for key 17 - 0x2322a4b0cc0 + 120 = 0x2322a4b0d38
address: 0x2322a4b0cc0 + 120
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 3
Level: 0 - Key: 17 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 2
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 3
Level: 0 - Key: 17 < 159 :cursor-keys[ 1 ] 
key 17 lesser than 159
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 6
Level: 1 - Key: 17 < 13 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 6
Level: 1 - Key: 17 < 16 :cursor-keys[ 1 ] 
Checking if larger than all other keys: 1 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 2 < 6
Level: 1 - Key: 17 < 18 :cursor-keys[ 2 ] 
key 17 lesser than 18
Cursor was: 0x23215445430
Cursor: 0x23215447070
Reached leaf node
Comparing: 4 < 8
Search left to right: 17 > 16 & 0 < 4
Search left to right: 17 > 16 & 1 < 4
Search left to right: 17 > 16 & 2 < 4
Checking for duplicates 17 == 17
Duplicate: 17
Inserted record tt0000169 at block address: 0x2322a4b0cc0 -> 0x2322a4b0d38

Writing record: tt0000170
blocksallocated: 17 curblocksizeused + sizeRequired = 160 > 200
offset: 140
curblocksizeused was: 140 + 20
curblocksizeused: 160
actualsizeused was: 3340 + 20
actualsizeused: 3360
recordAddress: 0x2322a4b0cc0 - 140
diskaddress: 0x2322a4b0cc0 - 140
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0cc0 - 0x2322a4b0d4c -> 0x2322a4b0d60 : 140 - 20
Inserting record: tt0000170 to bptree 
Inserting record 181 - 0x2322a4b0cc0 + 140 = 0x2322a4b0d4c
Root exists for key 181 - 0x2322a4b0cc0 + 140 = 0x2322a4b0d4c
address: 0x2322a4b0cc0 + 140
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 3
Level: 0 - Key: 181 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 2
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 3
Level: 0 - Key: 181 < 159 :cursor-keys[ 1 ] 
Checking if larger than all other keys: 1 == 2
Level: 0 - Leaf: 0 Checking thru all keys of node: 2 < 3
Level: 0 - Key: 181 < 1342 :cursor-keys[ 2 ] 
key 181 lesser than 1342
Cursor was: 0x232154457d0
Cursor: 0x232154475f0
Parent was: 0x232154457d0
Parent: 0x232154475f0
Cursor: 0x232154475f0
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 6
Level: 1 - Key: 181 < 227 :cursor-keys[ 0 ] 
key 181 lesser than 227
Cursor was: 0x232154475f0
Cursor: 0x23215446af0
Reached leaf node
Comparing: 5 < 8
Search left to right: 181 > 159 & 0 < 5
Search left to right: 181 > 180 & 1 < 5
Checking for duplicates 198 == 181
cursor->numKeys: 5
next: 0x23215447a10 - 0
Shifting right: 5 > 4
Shifting right: 4 > 3
Shifting right: 3 > 2
Inserting key to node 2 : 181
cursor->numKeys was: 5
cursor->numKeys: 6
Inserted record tt0000170 at block address: 0x2322a4b0cc0 -> 0x2322a4b0d4c

Writing record: tt0000171
blocksallocated: 17 curblocksizeused + sizeRequired = 180 > 200
offset: 160
curblocksizeused was: 160 + 20
curblocksizeused: 180
actualsizeused was: 3360 + 20
actualsizeused: 3380
recordAddress: 0x2322a4b0cc0 - 160
diskaddress: 0x2322a4b0cc0 - 160
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0cc0 - 0x2322a4b0d60 -> 0x2322a4b0d74 : 160 - 20
Inserting record: tt0000171 to bptree 
Inserting record 5 - 0x2322a4b0cc0 + 160 = 0x2322a4b0d60
Root exists for key 5 - 0x2322a4b0cc0 + 160 = 0x2322a4b0d60
address: 0x2322a4b0cc0 + 160
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 3
Level: 0 - Key: 5 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 2
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 3
Level: 0 - Key: 5 < 159 :cursor-keys[ 1 ] 
key 5 lesser than 159
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 6
Level: 1 - Key: 5 < 13 :cursor-keys[ 0 ] 
key 5 lesser than 13
Cursor was: 0x23215445430
Cursor: 0x232155e3ea0
Reached leaf node
Comparing: 6 < 8
Checking for duplicates 6 == 5
cursor->numKeys: 6
next: 0x232154478b0 - 0
Shifting right: 6 > 5
Shifting right: 5 > 4
Shifting right: 4 > 3
Shifting right: 3 > 2
Shifting right: 2 > 1
Shifting right: 1 > 0
Inserting key to node 0 : 5
cursor->numKeys was: 6
cursor->numKeys: 7
Inserted record tt0000171 at block address: 0x2322a4b0cc0 -> 0x2322a4b0d60

Writing record: tt0000172
blocksallocated: 17 curblocksizeused + sizeRequired = 200 > 200
offset: 180
curblocksizeused was: 180 + 20
curblocksizeused: 200
actualsizeused was: 3380 + 20
actualsizeused: 3400
recordAddress: 0x2322a4b0cc0 - 180
diskaddress: 0x2322a4b0cc0 - 180
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0cc0 - 0x2322a4b0d74 -> 0x2322a4b0d88 : 180 - 20
Inserting record: tt0000172 to bptree 
Inserting record 667 - 0x2322a4b0cc0 + 180 = 0x2322a4b0d74
Root exists for key 667 - 0x2322a4b0cc0 + 180 = 0x2322a4b0d74
address: 0x2322a4b0cc0 + 180
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 3
Level: 0 - Key: 667 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 2
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 3
Level: 0 - Key: 667 < 159 :cursor-keys[ 1 ] 
Checking if larger than all other keys: 1 == 2
Level: 0 - Leaf: 0 Checking thru all keys of node: 2 < 3
Level: 0 - Key: 667 < 1342 :cursor-keys[ 2 ] 
key 667 lesser than 1342
Cursor was: 0x232154457d0
Cursor: 0x232154475f0
Parent was: 0x232154457d0
Parent: 0x232154475f0
Cursor: 0x232154475f0
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 6
Level: 1 - Key: 667 < 227 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 6
Level: 1 - Key: 667 < 386 :cursor-keys[ 1 ] 
Checking if larger than all other keys: 1 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 2 < 6
Level: 1 - Key: 667 < 439 :cursor-keys[ 2 ] 
Checking if larger than all other keys: 2 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 3 < 6
Level: 1 - Key: 667 < 817 :cursor-keys[ 3 ] 
key 667 lesser than 817
Cursor was: 0x232154475f0
Cursor: 0x232154471d0
Reached leaf node
Comparing: 5 < 8
Search left to right: 667 > 439 & 0 < 5
Search left to right: 667 > 442 & 1 < 5
Search left to right: 667 > 448 & 2 < 5
Search left to right: 667 > 451 & 3 < 5
Checking for duplicates 687 == 667
cursor->numKeys: 5
next: 0x23215446830 - 0
Shifting right: 5 > 4
Inserting key to node 4 : 667
cursor->numKeys was: 5
cursor->numKeys: 6
Inserted record tt0000172 at block address: 0x2322a4b0cc0 -> 0x2322a4b0d74

Writing record: tt0000173
blocksallocated: 17 curblocksizeused + sizeRequired = 220 > 200
blockavailable: 749983
blocksallocated * blocksize: 3400 - poolptr + blocksallocated * blocksize: 0x2322a4b0d88
blockptr was: 0x2322a4b0cc0
blockptr: 0x2322a4b0d88
blocksallocated: 18 blocksavailable: 749982 blocksizeused: 3600 curblocksizeused: 0
offset: 0
curblocksizeused was: 0 + 20
curblocksizeused: 20
actualsizeused was: 3400 + 20
actualsizeused: 3420
recordAddress: 0x2322a4b0d88 - 0
diskaddress: 0x2322a4b0d88 - 0
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0d88 - 0x2322a4b0d88 -> 0x2322a4b0d9c : 0 - 20
Inserting record: tt0000173 to bptree 
Inserting record 17 - 0x2322a4b0d88 + 0 = 0x2322a4b0d88
Root exists for key 17 - 0x2322a4b0d88 + 0 = 0x2322a4b0d88
address: 0x2322a4b0d88 + 0
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 3
Level: 0 - Key: 17 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 2
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 3
Level: 0 - Key: 17 < 159 :cursor-keys[ 1 ] 
key 17 lesser than 159
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 6
Level: 1 - Key: 17 < 13 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 6
Level: 1 - Key: 17 < 16 :cursor-keys[ 1 ] 
Checking if larger than all other keys: 1 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 2 < 6
Level: 1 - Key: 17 < 18 :cursor-keys[ 2 ] 
key 17 lesser than 18
Cursor was: 0x23215445430
Cursor: 0x23215447070
Reached leaf node
Comparing: 4 < 8
Search left to right: 17 > 16 & 0 < 4
Search left to right: 17 > 16 & 1 < 4
Search left to right: 17 > 16 & 2 < 4
Checking for duplicates 17 == 17
Duplicate: 17
Inserted record tt0000173 at block address: 0x2322a4b0d88 -> 0x2322a4b0d88

Writing record: tt0000174
blocksallocated: 18 curblocksizeused + sizeRequired = 40 > 200
offset: 20
curblocksizeused was: 20 + 20
curblocksizeused: 40
actualsizeused was: 3420 + 20
actualsizeused: 3440
recordAddress: 0x2322a4b0d88 - 20
diskaddress: 0x2322a4b0d88 - 20
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0d88 - 0x2322a4b0d9c -> 0x2322a4b0db0 : 20 - 20
Inserting record: tt0000174 to bptree 
Inserting record 105 - 0x2322a4b0d88 + 20 = 0x2322a4b0d9c
Root exists for key 105 - 0x2322a4b0d88 + 20 = 0x2322a4b0d9c
address: 0x2322a4b0d88 + 20
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 3
Level: 0 - Key: 105 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 2
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 3
Level: 0 - Key: 105 < 159 :cursor-keys[ 1 ] 
key 105 lesser than 159
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 6
Level: 1 - Key: 105 < 13 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 6
Level: 1 - Key: 105 < 16 :cursor-keys[ 1 ] 
Checking if larger than all other keys: 1 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 2 < 6
Level: 1 - Key: 105 < 18 :cursor-keys[ 2 ] 
Checking if larger than all other keys: 2 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 3 < 6
Level: 1 - Key: 105 < 25 :cursor-keys[ 3 ] 
Checking if larger than all other keys: 3 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 4 < 6
Level: 1 - Key: 105 < 43 :cursor-keys[ 4 ] 
Checking if larger than all other keys: 4 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 5 < 6
Level: 1 - Key: 105 < 62 :cursor-keys[ 5 ] 
Checking if larger than all other keys: 5 == 5
Larger than all other keys in node going to last: 5 == 5
Cursor was: 0x23215445430
Cursor: 0x23215447490
Reached leaf node
Comparing: 8 < 8
Creating BPNode of size 8
Created new BPNode at 0x23215447b70
Copied 0 of 8 : 62 - 0x2322a4b0428 + 160
Copied 1 of 8 : 66 - 0x2322a4b0748 + 20
Copied 2 of 8 : 70 - 0x2322a4b0bf8 + 120
Copied 3 of 8 : 74 - 0x2322a4b09a0 + 20
Copied 4 of 8 : 89 - 0x2322a4b0cc0 + 40
Copied 5 of 8 : 100 - 0x2322a4b0cc0 + 80
Copied 6 of 8 : 112 - 0x2322a4b0b30 + 140
Copied 7 of 8 : 118 - 0x2322a4b08d8 + 100
Search left to right: 105 > 62 & 0 < 8
Search left to right: 105 > 66 & 1 < 8
Search left to right: 105 > 70 & 2 < 8
Search left to right: 105 > 74 & 3 < 8
Search left to right: 105 > 89 & 4 < 8
Search left to right: 105 > 100 & 5 < 8
Shifting right: 8 > 7
Shifting right: 7 > 6
Inserting key to node 6 : 105
Inserting address to node 6 : 0x2322a4b0d88 + 20
newLeaf->isLeaf was: 13
newLeaf->isLeaf: 1
Calc the new keys after split
cursor->numKeys was: 8
newLeaf->numKeys was: 0
cursor->numKeys: 5
newLeaf->numKeys: 4
newLeaf->pointers[4] was: 0x23215446af0 + 0
newLeaf->pointers[4] : 0x23215446af0 + 0
Adding the keyptr back to the nodes
Adding to cursor 0 : 62 - 0x2322a4b0428 + 160
Adding to cursor 1 : 66 - 0x2322a4b0748 + 20
Adding to cursor 2 : 70 - 0x2322a4b0bf8 + 120
Adding to cursor 3 : 74 - 0x2322a4b09a0 + 20
Adding to cursor 4 : 89 - 0x2322a4b0cc0 + 40
Adding to newLeaf 0 : 100 - 0x2322a4b0cc0 + 80
Adding to newLeaf 1 : 105 - 0x2322a4b0d88 + 20
Adding to newLeaf 2 : 112 - 0x2322a4b0b30 + 140
Adding to newLeaf 3 : 118 - 0x2322a4b08d8 + 100
cursor->pointers[5] was: 0x2322a4b0cc0 + 80
cursor->pointers[5] : 0x23215447b70 + 0
wiping cursor->keys[5] was : 100
wiping cursor->keys[5] : 0
wiping cursor->keys[6] was : 112
wiping cursor->keys[6] : 0
wiping cursor->keys[7] was : 118
wiping cursor->keys[7] : 0
wiping cursor->pointers[6] was : 0x2322a4b0b30 + 140
wiping cursor->pointers[6] : 0 + 0
wiping cursor->pointers[7] was : 0x2322a4b08d8 + 100
wiping cursor->pointers[7] : 0 + 0
wiping cursor->pointers[8] was : 0x23215446af0 + 0
wiping cursor->pointers[8] : 0 + 0
Need insert parent in middle: 100
Inserted record tt0000174 at block address: 0x2322a4b0d88 -> 0x2322a4b0d9c

Writing record: tt0000175
blocksallocated: 18 curblocksizeused + sizeRequired = 60 > 200
offset: 40
curblocksizeused was: 40 + 20
curblocksizeused: 60
actualsizeused was: 3440 + 20
actualsizeused: 3460
recordAddress: 0x2322a4b0d88 - 40
diskaddress: 0x2322a4b0d88 - 40
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0d88 - 0x2322a4b0db0 -> 0x2322a4b0dc4 : 40 - 20
Inserting record: tt0000175 to bptree 
Inserting record 163 - 0x2322a4b0d88 + 40 = 0x2322a4b0db0
Root exists for key 163 - 0x2322a4b0d88 + 40 = 0x2322a4b0db0
address: 0x2322a4b0d88 + 40
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 3
Level: 0 - Key: 163 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 2
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 3
Level: 0 - Key: 163 < 159 :cursor-keys[ 1 ] 
Checking if larger than all other keys: 1 == 2
Level: 0 - Leaf: 0 Checking thru all keys of node: 2 < 3
Level: 0 - Key: 163 < 1342 :cursor-keys[ 2 ] 
key 163 lesser than 1342
Cursor was: 0x232154457d0
Cursor: 0x232154475f0
Parent was: 0x232154457d0
Parent: 0x232154475f0
Cursor: 0x232154475f0
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 6
Level: 1 - Key: 163 < 227 :cursor-keys[ 0 ] 
key 163 lesser than 227
Cursor was: 0x232154475f0
Cursor: 0x23215446af0
Reached leaf node
Comparing: 6 < 8
Search left to right: 163 > 159 & 0 < 6
Checking for duplicates 180 == 163
cursor->numKeys: 6
next: 0x23215447a10 - 0
Shifting right: 6 > 5
Shifting right: 5 > 4
Shifting right: 4 > 3
Shifting right: 3 > 2
Shifting right: 2 > 1
Inserting key to node 1 : 163
cursor->numKeys was: 6
cursor->numKeys: 7
Inserted record tt0000175 at block address: 0x2322a4b0d88 -> 0x2322a4b0db0

Writing record: tt0000176
blocksallocated: 18 curblocksizeused + sizeRequired = 80 > 200
offset: 60
curblocksizeused was: 60 + 20
curblocksizeused: 80
actualsizeused was: 3460 + 20
actualsizeused: 3480
recordAddress: 0x2322a4b0d88 - 60
diskaddress: 0x2322a4b0d88 - 60
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0d88 - 0x2322a4b0dc4 -> 0x2322a4b0dd8 : 60 - 20
Inserting record: tt0000176 to bptree 
Inserting record 5 - 0x2322a4b0d88 + 60 = 0x2322a4b0dc4
Root exists for key 5 - 0x2322a4b0d88 + 60 = 0x2322a4b0dc4
address: 0x2322a4b0d88 + 60
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 3
Level: 0 - Key: 5 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 2
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 3
Level: 0 - Key: 5 < 159 :cursor-keys[ 1 ] 
key 5 lesser than 159
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 7
Level: 1 - Key: 5 < 13 :cursor-keys[ 0 ] 
key 5 lesser than 13
Cursor was: 0x23215445430
Cursor: 0x232155e3ea0
Reached leaf node
Comparing: 7 < 8
Checking for duplicates 5 == 5
Duplicate: 5
Inserted record tt0000176 at block address: 0x2322a4b0d88 -> 0x2322a4b0dc4

Writing record: tt0000177
blocksallocated: 18 curblocksizeused + sizeRequired = 100 > 200
offset: 80
curblocksizeused was: 80 + 20
curblocksizeused: 100
actualsizeused was: 3480 + 20
actualsizeused: 3500
recordAddress: 0x2322a4b0d88 - 80
diskaddress: 0x2322a4b0d88 - 80
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0d88 - 0x2322a4b0dd8 -> 0x2322a4b0dec : 80 - 20
Inserting record: tt0000177 to bptree 
Inserting record 187 - 0x2322a4b0d88 + 80 = 0x2322a4b0dd8
Root exists for key 187 - 0x2322a4b0d88 + 80 = 0x2322a4b0dd8
address: 0x2322a4b0d88 + 80
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 3
Level: 0 - Key: 187 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 2
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 3
Level: 0 - Key: 187 < 159 :cursor-keys[ 1 ] 
Checking if larger than all other keys: 1 == 2
Level: 0 - Leaf: 0 Checking thru all keys of node: 2 < 3
Level: 0 - Key: 187 < 1342 :cursor-keys[ 2 ] 
key 187 lesser than 1342
Cursor was: 0x232154457d0
Cursor: 0x232154475f0
Parent was: 0x232154457d0
Parent: 0x232154475f0
Cursor: 0x232154475f0
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 6
Level: 1 - Key: 187 < 227 :cursor-keys[ 0 ] 
key 187 lesser than 227
Cursor was: 0x232154475f0
Cursor: 0x23215446af0
Reached leaf node
Comparing: 7 < 8
Search left to right: 187 > 159 & 0 < 7
Search left to right: 187 > 163 & 1 < 7
Search left to right: 187 > 180 & 2 < 7
Search left to right: 187 > 181 & 3 < 7
Checking for duplicates 198 == 187
cursor->numKeys: 7
next: 0x23215447a10 - 0
Shifting right: 7 > 6
Shifting right: 6 > 5
Shifting right: 5 > 4
Inserting key to node 4 : 187
cursor->numKeys was: 7
cursor->numKeys: 8
Inserted record tt0000177 at block address: 0x2322a4b0d88 -> 0x2322a4b0dd8

Writing record: tt0000178
blocksallocated: 18 curblocksizeused + sizeRequired = 120 > 200
offset: 100
curblocksizeused was: 100 + 20
curblocksizeused: 120
actualsizeused was: 3500 + 20
actualsizeused: 3520
recordAddress: 0x2322a4b0d88 - 100
diskaddress: 0x2322a4b0d88 - 100
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0d88 - 0x2322a4b0dec -> 0x2322a4b0e00 : 100 - 20
Inserting record: tt0000178 to bptree 
Inserting record 96 - 0x2322a4b0d88 + 100 = 0x2322a4b0dec
Root exists for key 96 - 0x2322a4b0d88 + 100 = 0x2322a4b0dec
address: 0x2322a4b0d88 + 100
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 3
Level: 0 - Key: 96 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 2
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 3
Level: 0 - Key: 96 < 159 :cursor-keys[ 1 ] 
key 96 lesser than 159
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 7
Level: 1 - Key: 96 < 13 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 6
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 7
Level: 1 - Key: 96 < 16 :cursor-keys[ 1 ] 
Checking if larger than all other keys: 1 == 6
Level: 1 - Leaf: 0 Checking thru all keys of node: 2 < 7
Level: 1 - Key: 96 < 18 :cursor-keys[ 2 ] 
Checking if larger than all other keys: 2 == 6
Level: 1 - Leaf: 0 Checking thru all keys of node: 3 < 7
Level: 1 - Key: 96 < 25 :cursor-keys[ 3 ] 
Checking if larger than all other keys: 3 == 6
Level: 1 - Leaf: 0 Checking thru all keys of node: 4 < 7
Level: 1 - Key: 96 < 43 :cursor-keys[ 4 ] 
Checking if larger than all other keys: 4 == 6
Level: 1 - Leaf: 0 Checking thru all keys of node: 5 < 7
Level: 1 - Key: 96 < 62 :cursor-keys[ 5 ] 
Checking if larger than all other keys: 5 == 6
Level: 1 - Leaf: 0 Checking thru all keys of node: 6 < 7
Level: 1 - Key: 96 < 100 :cursor-keys[ 6 ] 
key 96 lesser than 100
Cursor was: 0x23215445430
Cursor: 0x23215447490
Reached leaf node
Comparing: 5 < 8
Search left to right: 96 > 62 & 0 < 5
Search left to right: 96 > 66 & 1 < 5
Search left to right: 96 > 70 & 2 < 5
Search left to right: 96 > 74 & 3 < 5
Search left to right: 96 > 89 & 4 < 5
Checking for duplicates 0 == 96
cursor->numKeys: 5
next: 0x23215447b70 - 0
Inserting key to node 5 : 96
cursor->numKeys was: 5
cursor->numKeys: 6
Inserted record tt0000178 at block address: 0x2322a4b0d88 -> 0x2322a4b0dec

Writing record: tt0000179
blocksallocated: 18 curblocksizeused + sizeRequired = 140 > 200
offset: 120
curblocksizeused was: 120 + 20
curblocksizeused: 140
actualsizeused was: 3520 + 20
actualsizeused: 3540
recordAddress: 0x2322a4b0d88 - 120
diskaddress: 0x2322a4b0d88 - 120
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0d88 - 0x2322a4b0e00 -> 0x2322a4b0e14 : 120 - 20
Inserting record: tt0000179 to bptree 
Inserting record 24 - 0x2322a4b0d88 + 120 = 0x2322a4b0e00
Root exists for key 24 - 0x2322a4b0d88 + 120 = 0x2322a4b0e00
address: 0x2322a4b0d88 + 120
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 3
Level: 0 - Key: 24 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 2
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 3
Level: 0 - Key: 24 < 159 :cursor-keys[ 1 ] 
key 24 lesser than 159
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 7
Level: 1 - Key: 24 < 13 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 6
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 7
Level: 1 - Key: 24 < 16 :cursor-keys[ 1 ] 
Checking if larger than all other keys: 1 == 6
Level: 1 - Leaf: 0 Checking thru all keys of node: 2 < 7
Level: 1 - Key: 24 < 18 :cursor-keys[ 2 ] 
Checking if larger than all other keys: 2 == 6
Level: 1 - Leaf: 0 Checking thru all keys of node: 3 < 7
Level: 1 - Key: 24 < 25 :cursor-keys[ 3 ] 
key 24 lesser than 25
Cursor was: 0x23215445430
Cursor: 0x23215446990
Reached leaf node
Comparing: 6 < 8
Search left to right: 24 > 18 & 0 < 6
Search left to right: 24 > 19 & 1 < 6
Search left to right: 24 > 20 & 2 < 6
Search left to right: 24 > 21 & 3 < 6
Search left to right: 24 > 22 & 4 < 6
Checking for duplicates 24 == 24
Duplicate: 24
Inserted record tt0000179 at block address: 0x2322a4b0d88 -> 0x2322a4b0e00

Writing record: tt0000181
blocksallocated: 18 curblocksizeused + sizeRequired = 160 > 200
offset: 140
curblocksizeused was: 140 + 20
curblocksizeused: 160
actualsizeused was: 3540 + 20
actualsizeused: 3560
recordAddress: 0x2322a4b0d88 - 140
diskaddress: 0x2322a4b0d88 - 140
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0d88 - 0x2322a4b0e14 -> 0x2322a4b0e28 : 140 - 20
Inserting record: tt0000181 to bptree 
Inserting record 36 - 0x2322a4b0d88 + 140 = 0x2322a4b0e14
Root exists for key 36 - 0x2322a4b0d88 + 140 = 0x2322a4b0e14
address: 0x2322a4b0d88 + 140
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 3
Level: 0 - Key: 36 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 2
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 3
Level: 0 - Key: 36 < 159 :cursor-keys[ 1 ] 
key 36 lesser than 159
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 7
Level: 1 - Key: 36 < 13 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 6
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 7
Level: 1 - Key: 36 < 16 :cursor-keys[ 1 ] 
Checking if larger than all other keys: 1 == 6
Level: 1 - Leaf: 0 Checking thru all keys of node: 2 < 7
Level: 1 - Key: 36 < 18 :cursor-keys[ 2 ] 
Checking if larger than all other keys: 2 == 6
Level: 1 - Leaf: 0 Checking thru all keys of node: 3 < 7
Level: 1 - Key: 36 < 25 :cursor-keys[ 3 ] 
Checking if larger than all other keys: 3 == 6
Level: 1 - Leaf: 0 Checking thru all keys of node: 4 < 7
Level: 1 - Key: 36 < 43 :cursor-keys[ 4 ] 
key 36 lesser than 43
Cursor was: 0x23215445430
Cursor: 0x23215447330
Reached leaf node
Comparing: 7 < 8
Search left to right: 36 > 25 & 0 < 7
Search left to right: 36 > 26 & 1 < 7
Search left to right: 36 > 30 & 2 < 7
Search left to right: 36 > 30 & 3 < 7
Search left to right: 36 > 32 & 4 < 7
Search left to right: 36 > 34 & 5 < 7
Checking for duplicates 37 == 36
cursor->numKeys: 7
next: 0x23215446c50 - 0
Shifting right: 7 > 6
Inserting key to node 6 : 36
cursor->numKeys was: 7
cursor->numKeys: 8
Inserted record tt0000181 at block address: 0x2322a4b0d88 -> 0x2322a4b0e14

Writing record: tt0000182
blocksallocated: 18 curblocksizeused + sizeRequired = 180 > 200
offset: 160
curblocksizeused was: 160 + 20
curblocksizeused: 180
actualsizeused was: 3560 + 20
actualsizeused: 3580
recordAddress: 0x2322a4b0d88 - 160
diskaddress: 0x2322a4b0d88 - 160
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0d88 - 0x2322a4b0e28 -> 0x2322a4b0e3c : 160 - 20
Inserting record: tt0000182 to bptree 
Inserting record 468 - 0x2322a4b0d88 + 160 = 0x2322a4b0e28
Root exists for key 468 - 0x2322a4b0d88 + 160 = 0x2322a4b0e28
address: 0x2322a4b0d88 + 160
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 3
Level: 0 - Key: 468 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 2
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 3
Level: 0 - Key: 468 < 159 :cursor-keys[ 1 ] 
Checking if larger than all other keys: 1 == 2
Level: 0 - Leaf: 0 Checking thru all keys of node: 2 < 3
Level: 0 - Key: 468 < 1342 :cursor-keys[ 2 ] 
key 468 lesser than 1342
Cursor was: 0x232154457d0
Cursor: 0x232154475f0
Parent was: 0x232154457d0
Parent: 0x232154475f0
Cursor: 0x232154475f0
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 6
Level: 1 - Key: 468 < 227 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 6
Level: 1 - Key: 468 < 386 :cursor-keys[ 1 ] 
Checking if larger than all other keys: 1 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 2 < 6
Level: 1 - Key: 468 < 439 :cursor-keys[ 2 ] 
Checking if larger than all other keys: 2 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 3 < 6
Level: 1 - Key: 468 < 817 :cursor-keys[ 3 ] 
key 468 lesser than 817
Cursor was: 0x232154475f0
Cursor: 0x232154471d0
Reached leaf node
Comparing: 6 < 8
Search left to right: 468 > 439 & 0 < 6
Search left to right: 468 > 442 & 1 < 6
Search left to right: 468 > 448 & 2 < 6
Search left to right: 468 > 451 & 3 < 6
Checking for duplicates 667 == 468
cursor->numKeys: 6
next: 0x23215446830 - 0
Shifting right: 6 > 5
Shifting right: 5 > 4
Inserting key to node 4 : 468
cursor->numKeys was: 6
cursor->numKeys: 7
Inserted record tt0000182 at block address: 0x2322a4b0d88 -> 0x2322a4b0e28

Writing record: tt0000183
blocksallocated: 18 curblocksizeused + sizeRequired = 200 > 200
offset: 180
curblocksizeused was: 180 + 20
curblocksizeused: 200
actualsizeused was: 3580 + 20
actualsizeused: 3600
recordAddress: 0x2322a4b0d88 - 180
diskaddress: 0x2322a4b0d88 - 180
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0d88 - 0x2322a4b0e3c -> 0x2322a4b0e50 : 180 - 20
Inserting record: tt0000183 to bptree 
Inserting record 18 - 0x2322a4b0d88 + 180 = 0x2322a4b0e3c
Root exists for key 18 - 0x2322a4b0d88 + 180 = 0x2322a4b0e3c
address: 0x2322a4b0d88 + 180
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 3
Level: 0 - Key: 18 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 2
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 3
Level: 0 - Key: 18 < 159 :cursor-keys[ 1 ] 
key 18 lesser than 159
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 7
Level: 1 - Key: 18 < 13 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 6
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 7
Level: 1 - Key: 18 < 16 :cursor-keys[ 1 ] 
Checking if larger than all other keys: 1 == 6
Level: 1 - Leaf: 0 Checking thru all keys of node: 2 < 7
Level: 1 - Key: 18 < 18 :cursor-keys[ 2 ] 
Checking if larger than all other keys: 2 == 6
Level: 1 - Leaf: 0 Checking thru all keys of node: 3 < 7
Level: 1 - Key: 18 < 25 :cursor-keys[ 3 ] 
key 18 lesser than 25
Cursor was: 0x23215445430
Cursor: 0x23215446990
Reached leaf node
Comparing: 6 < 8
Checking for duplicates 18 == 18
Duplicate: 18
Inserted record tt0000183 at block address: 0x2322a4b0d88 -> 0x2322a4b0e3c

Writing record: tt0000184
blocksallocated: 18 curblocksizeused + sizeRequired = 220 > 200
blockavailable: 749982
blocksallocated * blocksize: 3600 - poolptr + blocksallocated * blocksize: 0x2322a4b0e50
blockptr was: 0x2322a4b0d88
blockptr: 0x2322a4b0e50
blocksallocated: 19 blocksavailable: 749981 blocksizeused: 3800 curblocksizeused: 0
offset: 0
curblocksizeused was: 0 + 20
curblocksizeused: 20
actualsizeused was: 3600 + 20
actualsizeused: 3620
recordAddress: 0x2322a4b0e50 - 0
diskaddress: 0x2322a4b0e50 - 0
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0e50 - 0x2322a4b0e50 -> 0x2322a4b0e64 : 0 - 20
Inserting record: tt0000184 to bptree 
Inserting record 257 - 0x2322a4b0e50 + 0 = 0x2322a4b0e50
Root exists for key 257 - 0x2322a4b0e50 + 0 = 0x2322a4b0e50
address: 0x2322a4b0e50 + 0
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 3
Level: 0 - Key: 257 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 2
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 3
Level: 0 - Key: 257 < 159 :cursor-keys[ 1 ] 
Checking if larger than all other keys: 1 == 2
Level: 0 - Leaf: 0 Checking thru all keys of node: 2 < 3
Level: 0 - Key: 257 < 1342 :cursor-keys[ 2 ] 
key 257 lesser than 1342
Cursor was: 0x232154457d0
Cursor: 0x232154475f0
Parent was: 0x232154457d0
Parent: 0x232154475f0
Cursor: 0x232154475f0
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 6
Level: 1 - Key: 257 < 227 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 6
Level: 1 - Key: 257 < 386 :cursor-keys[ 1 ] 
key 257 lesser than 386
Cursor was: 0x232154475f0
Cursor: 0x23215447a10
Reached leaf node
Comparing: 4 < 8
Search left to right: 257 > 227 & 0 < 4
Checking for duplicates 330 == 257
cursor->numKeys: 4
next: 0x23215447750 - 0
Shifting right: 4 > 3
Shifting right: 3 > 2
Shifting right: 2 > 1
Inserting key to node 1 : 257
cursor->numKeys was: 4
cursor->numKeys: 5
Inserted record tt0000184 at block address: 0x2322a4b0e50 -> 0x2322a4b0e50

Writing record: tt0000186
blocksallocated: 19 curblocksizeused + sizeRequired = 40 > 200
offset: 20
curblocksizeused was: 20 + 20
curblocksizeused: 40
actualsizeused was: 3620 + 20
actualsizeused: 3640
recordAddress: 0x2322a4b0e50 - 20
diskaddress: 0x2322a4b0e50 - 20
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0e50 - 0x2322a4b0e64 -> 0x2322a4b0e78 : 20 - 20
Inserting record: tt0000186 to bptree 
Inserting record 12 - 0x2322a4b0e50 + 20 = 0x2322a4b0e64
Root exists for key 12 - 0x2322a4b0e50 + 20 = 0x2322a4b0e64
address: 0x2322a4b0e50 + 20
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 3
Level: 0 - Key: 12 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 2
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 3
Level: 0 - Key: 12 < 159 :cursor-keys[ 1 ] 
key 12 lesser than 159
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 7
Level: 1 - Key: 12 < 13 :cursor-keys[ 0 ] 
key 12 lesser than 13
Cursor was: 0x23215445430
Cursor: 0x232155e3ea0
Reached leaf node
Comparing: 7 < 8
Search left to right: 12 > 5 & 0 < 7
Search left to right: 12 > 6 & 1 < 7
Search left to right: 12 > 7 & 2 < 7
Search left to right: 12 > 8 & 3 < 7
Search left to right: 12 > 9 & 4 < 7
Search left to right: 12 > 11 & 5 < 7
Checking for duplicates 12 == 12
Duplicate: 12
Inserted record tt0000186 at block address: 0x2322a4b0e50 -> 0x2322a4b0e64

Writing record: tt0000187
blocksallocated: 19 curblocksizeused + sizeRequired = 60 > 200
offset: 40
curblocksizeused was: 40 + 20
curblocksizeused: 60
actualsizeused was: 3640 + 20
actualsizeused: 3660
recordAddress: 0x2322a4b0e50 - 40
diskaddress: 0x2322a4b0e50 - 40
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0e50 - 0x2322a4b0e78 -> 0x2322a4b0e8c : 40 - 20
Inserting record: tt0000187 to bptree 
Inserting record 34 - 0x2322a4b0e50 + 40 = 0x2322a4b0e78
Root exists for key 34 - 0x2322a4b0e50 + 40 = 0x2322a4b0e78
address: 0x2322a4b0e50 + 40
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 3
Level: 0 - Key: 34 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 2
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 3
Level: 0 - Key: 34 < 159 :cursor-keys[ 1 ] 
key 34 lesser than 159
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 7
Level: 1 - Key: 34 < 13 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 6
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 7
Level: 1 - Key: 34 < 16 :cursor-keys[ 1 ] 
Checking if larger than all other keys: 1 == 6
Level: 1 - Leaf: 0 Checking thru all keys of node: 2 < 7
Level: 1 - Key: 34 < 18 :cursor-keys[ 2 ] 
Checking if larger than all other keys: 2 == 6
Level: 1 - Leaf: 0 Checking thru all keys of node: 3 < 7
Level: 1 - Key: 34 < 25 :cursor-keys[ 3 ] 
Checking if larger than all other keys: 3 == 6
Level: 1 - Leaf: 0 Checking thru all keys of node: 4 < 7
Level: 1 - Key: 34 < 43 :cursor-keys[ 4 ] 
key 34 lesser than 43
Cursor was: 0x23215445430
Cursor: 0x23215447330
Reached leaf node
Comparing: 8 < 8
Creating BPNode of size 8
Created new BPNode at 0x23215447cd0
Copied 0 of 8 : 25 - 0x2322a4b0680 + 0
Copied 1 of 8 : 26 - 0x2322a4b09a0 + 120
Copied 2 of 8 : 30 - 0x2322a4b08d8 + 160
Copied 3 of 8 : 30 - 0x2322a4b08d8 + 140
Copied 4 of 8 : 32 - 0x2322a4b0b30 + 160
Copied 5 of 8 : 34 - 0x2322a4b0748 + 160
Copied 6 of 8 : 36 - 0x2322a4b0d88 + 140
Copied 7 of 8 : 37 - 0x2322a4b09a0 + 140
Search left to right: 34 > 25 & 0 < 8
Search left to right: 34 > 26 & 1 < 8
Search left to right: 34 > 30 & 2 < 8
Search left to right: 34 > 30 & 3 < 8
Search left to right: 34 > 32 & 4 < 8
Duplicate Overflow: 34
Shifting right: 8 > 7
Shifting right: 7 > 6
Shifting right: 6 > 5
Inserting key to node 5 : 34
Inserting address to node 5 : 0x2322a4b0e50 + 40
newLeaf->isLeaf was: 13
newLeaf->isLeaf: 1
Calc the new keys after split
cursor->numKeys was: 8
newLeaf->numKeys was: 0
cursor->numKeys: 5
newLeaf->numKeys: 4
newLeaf->pointers[4] was: 0x23215446c50 + 0
newLeaf->pointers[4] : 0x23215446c50 + 0
Adding the keyptr back to the nodes
Adding to cursor 0 : 25 - 0x2322a4b0680 + 0
Adding to cursor 1 : 26 - 0x2322a4b09a0 + 120
Adding to cursor 2 : 30 - 0x2322a4b08d8 + 160
Adding to cursor 3 : 30 - 0x2322a4b08d8 + 140
Adding to cursor 4 : 32 - 0x2322a4b0b30 + 160
Adding to newLeaf 0 : 34 - 0x2322a4b0e50 + 40
Adding to newLeaf 1 : 34 - 0x2322a4b0748 + 160
Adding to newLeaf 2 : 36 - 0x2322a4b0d88 + 140
Adding to newLeaf 3 : 37 - 0x2322a4b09a0 + 140
cursor->pointers[5] was: 0x2322a4b0748 + 160
cursor->pointers[5] : 0x23215447cd0 + 0
wiping cursor->keys[5] was : 34
wiping cursor->keys[5] : 0
wiping cursor->keys[6] was : 36
wiping cursor->keys[6] : 0
wiping cursor->keys[7] was : 37
wiping cursor->keys[7] : 0
wiping cursor->pointers[6] was : 0x2322a4b0d88 + 140
wiping cursor->pointers[6] : 0 + 0
wiping cursor->pointers[7] was : 0x2322a4b09a0 + 140
wiping cursor->pointers[7] : 0 + 0
wiping cursor->pointers[8] was : 0x23215446c50 + 0
wiping cursor->pointers[8] : 0 + 0
Need insert parent in middle: 34
Inserted record tt0000187 at block address: 0x2322a4b0e50 -> 0x2322a4b0e78

Writing record: tt0000188
blocksallocated: 19 curblocksizeused + sizeRequired = 80 > 200
offset: 60
curblocksizeused was: 60 + 20
curblocksizeused: 80
actualsizeused was: 3660 + 20
actualsizeused: 3680
recordAddress: 0x2322a4b0e50 - 60
diskaddress: 0x2322a4b0e50 - 60
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0e50 - 0x2322a4b0e8c -> 0x2322a4b0ea0 : 60 - 20
Inserting record: tt0000188 to bptree 
Inserting record 5 - 0x2322a4b0e50 + 60 = 0x2322a4b0e8c
Root exists for key 5 - 0x2322a4b0e50 + 60 = 0x2322a4b0e8c
address: 0x2322a4b0e50 + 60
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 3
Level: 0 - Key: 5 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 2
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 3
Level: 0 - Key: 5 < 159 :cursor-keys[ 1 ] 
key 5 lesser than 159
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 8
Level: 1 - Key: 5 < 13 :cursor-keys[ 0 ] 
key 5 lesser than 13
Cursor was: 0x23215445430
Cursor: 0x232155e3ea0
Reached leaf node
Comparing: 7 < 8
Checking for duplicates 5 == 5
Duplicate: 5
Inserted record tt0000188 at block address: 0x2322a4b0e50 -> 0x2322a4b0e8c

Writing record: tt0000190
blocksallocated: 19 curblocksizeused + sizeRequired = 100 > 200
offset: 80
curblocksizeused was: 80 + 20
curblocksizeused: 100
actualsizeused was: 3680 + 20
actualsizeused: 3700
recordAddress: 0x2322a4b0e50 - 80
diskaddress: 0x2322a4b0e50 - 80
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0e50 - 0x2322a4b0ea0 -> 0x2322a4b0eb4 : 80 - 20
Inserting record: tt0000190 to bptree 
Inserting record 114 - 0x2322a4b0e50 + 80 = 0x2322a4b0ea0
Root exists for key 114 - 0x2322a4b0e50 + 80 = 0x2322a4b0ea0
address: 0x2322a4b0e50 + 80
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 3
Level: 0 - Key: 114 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 2
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 3
Level: 0 - Key: 114 < 159 :cursor-keys[ 1 ] 
key 114 lesser than 159
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 8
Level: 1 - Key: 114 < 13 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 8
Level: 1 - Key: 114 < 16 :cursor-keys[ 1 ] 
Checking if larger than all other keys: 1 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 2 < 8
Level: 1 - Key: 114 < 18 :cursor-keys[ 2 ] 
Checking if larger than all other keys: 2 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 3 < 8
Level: 1 - Key: 114 < 25 :cursor-keys[ 3 ] 
Checking if larger than all other keys: 3 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 4 < 8
Level: 1 - Key: 114 < 34 :cursor-keys[ 4 ] 
Checking if larger than all other keys: 4 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 5 < 8
Level: 1 - Key: 114 < 43 :cursor-keys[ 5 ] 
Checking if larger than all other keys: 5 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 6 < 8
Level: 1 - Key: 114 < 62 :cursor-keys[ 6 ] 
Checking if larger than all other keys: 6 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 7 < 8
Level: 1 - Key: 114 < 100 :cursor-keys[ 7 ] 
Checking if larger than all other keys: 7 == 7
Larger than all other keys in node going to last: 7 == 7
Cursor was: 0x23215445430
Cursor: 0x23215447b70
Reached leaf node
Comparing: 4 < 8
Search left to right: 114 > 100 & 0 < 4
Search left to right: 114 > 105 & 1 < 4
Search left to right: 114 > 112 & 2 < 4
Checking for duplicates 118 == 114
cursor->numKeys: 4
next: 0x23215446af0 - 0
Shifting right: 4 > 3
Inserting key to node 3 : 114
cursor->numKeys was: 4
cursor->numKeys: 5
Inserted record tt0000190 at block address: 0x2322a4b0e50 -> 0x2322a4b0ea0

Writing record: tt0000192
blocksallocated: 19 curblocksizeused + sizeRequired = 120 > 200
offset: 100
curblocksizeused was: 100 + 20
curblocksizeused: 120
actualsizeused was: 3700 + 20
actualsizeused: 3720
recordAddress: 0x2322a4b0e50 - 100
diskaddress: 0x2322a4b0e50 - 100
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0e50 - 0x2322a4b0eb4 -> 0x2322a4b0ec8 : 100 - 20
Inserting record: tt0000192 to bptree 
Inserting record 132 - 0x2322a4b0e50 + 100 = 0x2322a4b0eb4
Root exists for key 132 - 0x2322a4b0e50 + 100 = 0x2322a4b0eb4
address: 0x2322a4b0e50 + 100
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 3
Level: 0 - Key: 132 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 2
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 3
Level: 0 - Key: 132 < 159 :cursor-keys[ 1 ] 
key 132 lesser than 159
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 8
Level: 1 - Key: 132 < 13 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 8
Level: 1 - Key: 132 < 16 :cursor-keys[ 1 ] 
Checking if larger than all other keys: 1 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 2 < 8
Level: 1 - Key: 132 < 18 :cursor-keys[ 2 ] 
Checking if larger than all other keys: 2 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 3 < 8
Level: 1 - Key: 132 < 25 :cursor-keys[ 3 ] 
Checking if larger than all other keys: 3 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 4 < 8
Level: 1 - Key: 132 < 34 :cursor-keys[ 4 ] 
Checking if larger than all other keys: 4 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 5 < 8
Level: 1 - Key: 132 < 43 :cursor-keys[ 5 ] 
Checking if larger than all other keys: 5 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 6 < 8
Level: 1 - Key: 132 < 62 :cursor-keys[ 6 ] 
Checking if larger than all other keys: 6 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 7 < 8
Level: 1 - Key: 132 < 100 :cursor-keys[ 7 ] 
Checking if larger than all other keys: 7 == 7
Larger than all other keys in node going to last: 7 == 7
Cursor was: 0x23215445430
Cursor: 0x23215447b70
Reached leaf node
Comparing: 5 < 8
Search left to right: 132 > 100 & 0 < 5
Search left to right: 132 > 105 & 1 < 5
Search left to right: 132 > 112 & 2 < 5
Search left to right: 132 > 114 & 3 < 5
Search left to right: 132 > 118 & 4 < 5
Checking for duplicates 0 == 132
cursor->numKeys: 5
next: 0x23215446af0 - 0
Inserting key to node 5 : 132
cursor->numKeys was: 5
cursor->numKeys: 6
Inserted record tt0000192 at block address: 0x2322a4b0e50 -> 0x2322a4b0eb4

Writing record: tt0000194
blocksallocated: 19 curblocksizeused + sizeRequired = 140 > 200
offset: 120
curblocksizeused was: 120 + 20
curblocksizeused: 140
actualsizeused was: 3720 + 20
actualsizeused: 3740
recordAddress: 0x2322a4b0e50 - 120
diskaddress: 0x2322a4b0e50 - 120
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0e50 - 0x2322a4b0ec8 -> 0x2322a4b0edc : 120 - 20
Inserting record: tt0000194 to bptree 
Inserting record 65 - 0x2322a4b0e50 + 120 = 0x2322a4b0ec8
Root exists for key 65 - 0x2322a4b0e50 + 120 = 0x2322a4b0ec8
address: 0x2322a4b0e50 + 120
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 3
Level: 0 - Key: 65 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 2
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 3
Level: 0 - Key: 65 < 159 :cursor-keys[ 1 ] 
key 65 lesser than 159
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 8
Level: 1 - Key: 65 < 13 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 8
Level: 1 - Key: 65 < 16 :cursor-keys[ 1 ] 
Checking if larger than all other keys: 1 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 2 < 8
Level: 1 - Key: 65 < 18 :cursor-keys[ 2 ] 
Checking if larger than all other keys: 2 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 3 < 8
Level: 1 - Key: 65 < 25 :cursor-keys[ 3 ] 
Checking if larger than all other keys: 3 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 4 < 8
Level: 1 - Key: 65 < 34 :cursor-keys[ 4 ] 
Checking if larger than all other keys: 4 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 5 < 8
Level: 1 - Key: 65 < 43 :cursor-keys[ 5 ] 
Checking if larger than all other keys: 5 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 6 < 8
Level: 1 - Key: 65 < 62 :cursor-keys[ 6 ] 
Checking if larger than all other keys: 6 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 7 < 8
Level: 1 - Key: 65 < 100 :cursor-keys[ 7 ] 
key 65 lesser than 100
Cursor was: 0x23215445430
Cursor: 0x23215447490
Reached leaf node
Comparing: 6 < 8
Search left to right: 65 > 62 & 0 < 6
Checking for duplicates 66 == 65
cursor->numKeys: 6
next: 0x23215447b70 - 0
Shifting right: 6 > 5
Shifting right: 5 > 4
Shifting right: 4 > 3
Shifting right: 3 > 2
Shifting right: 2 > 1
Inserting key to node 1 : 65
cursor->numKeys was: 6
cursor->numKeys: 7
Inserted record tt0000194 at block address: 0x2322a4b0e50 -> 0x2322a4b0ec8

Writing record: tt0000196
blocksallocated: 19 curblocksizeused + sizeRequired = 160 > 200
offset: 140
curblocksizeused was: 140 + 20
curblocksizeused: 160
actualsizeused was: 3740 + 20
actualsizeused: 3760
recordAddress: 0x2322a4b0e50 - 140
diskaddress: 0x2322a4b0e50 - 140
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0e50 - 0x2322a4b0edc -> 0x2322a4b0ef0 : 140 - 20
Inserting record: tt0000196 to bptree 
Inserting record 19 - 0x2322a4b0e50 + 140 = 0x2322a4b0edc
Root exists for key 19 - 0x2322a4b0e50 + 140 = 0x2322a4b0edc
address: 0x2322a4b0e50 + 140
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 3
Level: 0 - Key: 19 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 2
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 3
Level: 0 - Key: 19 < 159 :cursor-keys[ 1 ] 
key 19 lesser than 159
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 8
Level: 1 - Key: 19 < 13 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 8
Level: 1 - Key: 19 < 16 :cursor-keys[ 1 ] 
Checking if larger than all other keys: 1 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 2 < 8
Level: 1 - Key: 19 < 18 :cursor-keys[ 2 ] 
Checking if larger than all other keys: 2 == 7
Level: 1 - Leaf: 0 Checking thru all keys of node: 3 < 8
Level: 1 - Key: 19 < 25 :cursor-keys[ 3 ] 
key 19 lesser than 25
Cursor was: 0x23215445430
Cursor: 0x23215446990
Reached leaf node
Comparing: 6 < 8
Search left to right: 19 > 18 & 0 < 6
Checking for duplicates 19 == 19
Duplicate: 19
Inserted record tt0000196 at block address: 0x2322a4b0e50 -> 0x2322a4b0edc

Writing record: tt0000197
blocksallocated: 19 curblocksizeused + sizeRequired = 180 > 200
offset: 160
curblocksizeused was: 160 + 20
curblocksizeused: 180
actualsizeused was: 3760 + 20
actualsizeused: 3780
recordAddress: 0x2322a4b0e50 - 160
diskaddress: 0x2322a4b0e50 - 160
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0e50 - 0x2322a4b0ef0 -> 0x2322a4b0f04 : 160 - 20
Inserting record: tt0000197 to bptree 
Inserting record 10 - 0x2322a4b0e50 + 160 = 0x2322a4b0ef0
Root exists for key 10 - 0x2322a4b0e50 + 160 = 0x2322a4b0ef0
address: 0x2322a4b0e50 + 160
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 3
Level: 0 - Key: 10 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 2
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 3
Level: 0 - Key: 10 < 159 :cursor-keys[ 1 ] 
key 10 lesser than 159
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 8
Level: 1 - Key: 10 < 13 :cursor-keys[ 0 ] 
key 10 lesser than 13
Cursor was: 0x23215445430
Cursor: 0x232155e3ea0
Reached leaf node
Comparing: 7 < 8
Search left to right: 10 > 5 & 0 < 7
Search left to right: 10 > 6 & 1 < 7
Search left to right: 10 > 7 & 2 < 7
Search left to right: 10 > 8 & 3 < 7
Search left to right: 10 > 9 & 4 < 7
Checking for duplicates 11 == 10
cursor->numKeys: 7
next: 0x232154478b0 - 0
Shifting right: 7 > 6
Shifting right: 6 > 5
Inserting key to node 5 : 10
cursor->numKeys was: 7
cursor->numKeys: 8
Inserted record tt0000197 at block address: 0x2322a4b0e50 -> 0x2322a4b0ef0

Writing record: tt0000198
blocksallocated: 19 curblocksizeused + sizeRequired = 200 > 200
offset: 180
curblocksizeused was: 180 + 20
curblocksizeused: 200
actualsizeused was: 3780 + 20
actualsizeused: 3800
recordAddress: 0x2322a4b0e50 - 180
diskaddress: 0x2322a4b0e50 - 180
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0e50 - 0x2322a4b0f04 -> 0x2322a4b0f18 : 180 - 20
Inserting record: tt0000198 to bptree 
Inserting record 9 - 0x2322a4b0e50 + 180 = 0x2322a4b0f04
Root exists for key 9 - 0x2322a4b0e50 + 180 = 0x2322a4b0f04
address: 0x2322a4b0e50 + 180
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 3
Level: 0 - Key: 9 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 2
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 3
Level: 0 - Key: 9 < 159 :cursor-keys[ 1 ] 
key 9 lesser than 159
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 8
Level: 1 - Key: 9 < 13 :cursor-keys[ 0 ] 
key 9 lesser than 13
Cursor was: 0x23215445430
Cursor: 0x232155e3ea0
Reached leaf node
Comparing: 8 < 8
Creating BPNode of size 8
Created new BPNode at 0x232155e3530
Copied 0 of 8 : 5 - 0x2322a4b0cc0 + 160
Copied 1 of 8 : 6 - 0x2322a4b0cc0 + 0
Copied 2 of 8 : 7 - 0x2322a4b0b30 + 40
Copied 3 of 8 : 8 - 0x2322a4b09a0 + 60
Copied 4 of 8 : 9 - 0x2322a4b0428 + 20
Copied 5 of 8 : 10 - 0x2322a4b0e50 + 160
Copied 6 of 8 : 11 - 0x2322a4b0a68 + 180
Copied 7 of 8 : 12 - 0x2322a4b0428 + 80
Search left to right: 9 > 5 & 0 < 8
Search left to right: 9 > 6 & 1 < 8
Search left to right: 9 > 7 & 2 < 8
Search left to right: 9 > 8 & 3 < 8
Duplicate Overflow: 9
Shifting right: 8 > 7
Shifting right: 7 > 6
Shifting right: 6 > 5
Shifting right: 5 > 4
Inserting key to node 4 : 9
Inserting address to node 4 : 0x2322a4b0e50 + 180
newLeaf->isLeaf was: 13
newLeaf->isLeaf: 1
Calc the new keys after split
cursor->numKeys was: 8
newLeaf->numKeys was: 0
cursor->numKeys: 5
newLeaf->numKeys: 4
newLeaf->pointers[4] was: 0x232154478b0 + 0
newLeaf->pointers[4] : 0x232154478b0 + 0
Adding the keyptr back to the nodes
Adding to cursor 0 : 5 - 0x2322a4b0cc0 + 160
Adding to cursor 1 : 6 - 0x2322a4b0cc0 + 0
Adding to cursor 2 : 7 - 0x2322a4b0b30 + 40
Adding to cursor 3 : 8 - 0x2322a4b09a0 + 60
Adding to cursor 4 : 9 - 0x2322a4b0e50 + 180
Adding to newLeaf 0 : 9 - 0x2322a4b0428 + 20
Adding to newLeaf 1 : 10 - 0x2322a4b0e50 + 160
Adding to newLeaf 2 : 11 - 0x2322a4b0a68 + 180
Adding to newLeaf 3 : 12 - 0x2322a4b0428 + 80
cursor->pointers[5] was: 0x2322a4b0e50 + 160
cursor->pointers[5] : 0x232155e3530 + 0
wiping cursor->keys[5] was : 10
wiping cursor->keys[5] : 0
wiping cursor->keys[6] was : 11
wiping cursor->keys[6] : 0
wiping cursor->keys[7] was : 12
wiping cursor->keys[7] : 0
wiping cursor->pointers[6] was : 0x2322a4b0a68 + 180
wiping cursor->pointers[6] : 0 + 0
wiping cursor->pointers[7] was : 0x2322a4b0428 + 80
wiping cursor->pointers[7] : 0 + 0
wiping cursor->pointers[8] was : 0x232154478b0 + 0
wiping cursor->pointers[8] : 0 + 0
Need insert parent in middle: 9
Inserted record tt0000198 at block address: 0x2322a4b0e50 -> 0x2322a4b0f04

Writing record: tt0000199
blocksallocated: 19 curblocksizeused + sizeRequired = 220 > 200
blockavailable: 749981
blocksallocated * blocksize: 3800 - poolptr + blocksallocated * blocksize: 0x2322a4b0f18
blockptr was: 0x2322a4b0e50
blockptr: 0x2322a4b0f18
blocksallocated: 20 blocksavailable: 749980 blocksizeused: 4000 curblocksizeused: 0
offset: 0
curblocksizeused was: 0 + 20
curblocksizeused: 20
actualsizeused was: 3800 + 20
actualsizeused: 3820
recordAddress: 0x2322a4b0f18 - 0
diskaddress: 0x2322a4b0f18 - 0
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0f18 - 0x2322a4b0f18 -> 0x2322a4b0f2c : 0 - 20
Inserting record: tt0000199 to bptree 
Inserting record 5 - 0x2322a4b0f18 + 0 = 0x2322a4b0f18
Root exists for key 5 - 0x2322a4b0f18 + 0 = 0x2322a4b0f18
address: 0x2322a4b0f18 + 0
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 4
Level: 0 - Key: 5 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 3
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 4
Level: 0 - Key: 5 < 34 :cursor-keys[ 1 ] 
key 5 lesser than 34
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 5
Level: 1 - Key: 5 < 9 :cursor-keys[ 0 ] 
key 5 lesser than 9
Cursor was: 0x23215445430
Cursor: 0x232155e3ea0
Reached leaf node
Comparing: 5 < 8
Checking for duplicates 5 == 5
Duplicate: 5
Inserted record tt0000199 at block address: 0x2322a4b0f18 -> 0x2322a4b0f18

Writing record: tt0000204
blocksallocated: 20 curblocksizeused + sizeRequired = 40 > 200
offset: 20
curblocksizeused was: 20 + 20
curblocksizeused: 40
actualsizeused was: 3820 + 20
actualsizeused: 3840
recordAddress: 0x2322a4b0f18 - 20
diskaddress: 0x2322a4b0f18 - 20
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0f18 - 0x2322a4b0f2c -> 0x2322a4b0f40 : 20 - 20
Inserting record: tt0000204 to bptree 
Inserting record 6 - 0x2322a4b0f18 + 20 = 0x2322a4b0f2c
Root exists for key 6 - 0x2322a4b0f18 + 20 = 0x2322a4b0f2c
address: 0x2322a4b0f18 + 20
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 4
Level: 0 - Key: 6 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 3
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 4
Level: 0 - Key: 6 < 34 :cursor-keys[ 1 ] 
key 6 lesser than 34
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 5
Level: 1 - Key: 6 < 9 :cursor-keys[ 0 ] 
key 6 lesser than 9
Cursor was: 0x23215445430
Cursor: 0x232155e3ea0
Reached leaf node
Comparing: 5 < 8
Search left to right: 6 > 5 & 0 < 5
Checking for duplicates 6 == 6
Duplicate: 6
Inserted record tt0000204 at block address: 0x2322a4b0f18 -> 0x2322a4b0f2c

Writing record: tt0000205
blocksallocated: 20 curblocksizeused + sizeRequired = 60 > 200
offset: 40
curblocksizeused was: 40 + 20
curblocksizeused: 60
actualsizeused was: 3840 + 20
actualsizeused: 3860
recordAddress: 0x2322a4b0f18 - 40
diskaddress: 0x2322a4b0f18 - 40
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0f18 - 0x2322a4b0f40 -> 0x2322a4b0f54 : 40 - 20
Inserting record: tt0000205 to bptree 
Inserting record 19 - 0x2322a4b0f18 + 40 = 0x2322a4b0f40
Root exists for key 19 - 0x2322a4b0f18 + 40 = 0x2322a4b0f40
address: 0x2322a4b0f18 + 40
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 4
Level: 0 - Key: 19 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 3
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 4
Level: 0 - Key: 19 < 34 :cursor-keys[ 1 ] 
key 19 lesser than 34
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 5
Level: 1 - Key: 19 < 9 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 4
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 5
Level: 1 - Key: 19 < 13 :cursor-keys[ 1 ] 
Checking if larger than all other keys: 1 == 4
Level: 1 - Leaf: 0 Checking thru all keys of node: 2 < 5
Level: 1 - Key: 19 < 16 :cursor-keys[ 2 ] 
Checking if larger than all other keys: 2 == 4
Level: 1 - Leaf: 0 Checking thru all keys of node: 3 < 5
Level: 1 - Key: 19 < 18 :cursor-keys[ 3 ] 
Checking if larger than all other keys: 3 == 4
Level: 1 - Leaf: 0 Checking thru all keys of node: 4 < 5
Level: 1 - Key: 19 < 25 :cursor-keys[ 4 ] 
key 19 lesser than 25
Cursor was: 0x23215445430
Cursor: 0x23215447330
Reached leaf node
Comparing: 5 < 8
Checking for duplicates 25 == 19
cursor->numKeys: 5
next: 0x23215447cd0 - 0
Shifting right: 5 > 4
Shifting right: 4 > 3
Shifting right: 3 > 2
Shifting right: 2 > 1
Shifting right: 1 > 0
Inserting key to node 0 : 19
cursor->numKeys was: 5
cursor->numKeys: 6
Inserted record tt0000205 at block address: 0x2322a4b0f18 -> 0x2322a4b0f40

Writing record: tt0000206
blocksallocated: 20 curblocksizeused + sizeRequired = 80 > 200
offset: 60
curblocksizeused was: 60 + 20
curblocksizeused: 80
actualsizeused was: 3860 + 20
actualsizeused: 3880
recordAddress: 0x2322a4b0f18 - 60
diskaddress: 0x2322a4b0f18 - 60
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0f18 - 0x2322a4b0f54 -> 0x2322a4b0f68 : 60 - 20
Inserting record: tt0000206 to bptree 
Inserting record 6 - 0x2322a4b0f18 + 60 = 0x2322a4b0f54
Root exists for key 6 - 0x2322a4b0f18 + 60 = 0x2322a4b0f54
address: 0x2322a4b0f18 + 60
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 4
Level: 0 - Key: 6 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 3
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 4
Level: 0 - Key: 6 < 34 :cursor-keys[ 1 ] 
key 6 lesser than 34
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 5
Level: 1 - Key: 6 < 9 :cursor-keys[ 0 ] 
key 6 lesser than 9
Cursor was: 0x23215445430
Cursor: 0x232155e3ea0
Reached leaf node
Comparing: 5 < 8
Search left to right: 6 > 5 & 0 < 5
Checking for duplicates 6 == 6
Duplicate: 6
Inserted record tt0000206 at block address: 0x2322a4b0f18 -> 0x2322a4b0f54

Writing record: tt0000207
blocksallocated: 20 curblocksizeused + sizeRequired = 100 > 200
offset: 80
curblocksizeused was: 80 + 20
curblocksizeused: 100
actualsizeused was: 3880 + 20
actualsizeused: 3900
recordAddress: 0x2322a4b0f18 - 80
diskaddress: 0x2322a4b0f18 - 80
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0f18 - 0x2322a4b0f68 -> 0x2322a4b0f7c : 80 - 20
Inserting record: tt0000207 to bptree 
Inserting record 5 - 0x2322a4b0f18 + 80 = 0x2322a4b0f68
Root exists for key 5 - 0x2322a4b0f18 + 80 = 0x2322a4b0f68
address: 0x2322a4b0f18 + 80
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 4
Level: 0 - Key: 5 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 3
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 4
Level: 0 - Key: 5 < 34 :cursor-keys[ 1 ] 
key 5 lesser than 34
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 5
Level: 1 - Key: 5 < 9 :cursor-keys[ 0 ] 
key 5 lesser than 9
Cursor was: 0x23215445430
Cursor: 0x232155e3ea0
Reached leaf node
Comparing: 5 < 8
Checking for duplicates 5 == 5
Duplicate: 5
Inserted record tt0000207 at block address: 0x2322a4b0f18 -> 0x2322a4b0f68

Writing record: tt0000208
blocksallocated: 20 curblocksizeused + sizeRequired = 120 > 200
offset: 100
curblocksizeused was: 100 + 20
curblocksizeused: 120
actualsizeused was: 3900 + 20
actualsizeused: 3920
recordAddress: 0x2322a4b0f18 - 100
diskaddress: 0x2322a4b0f18 - 100
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0f18 - 0x2322a4b0f7c -> 0x2322a4b0f90 : 100 - 20
Inserting record: tt0000208 to bptree 
Inserting record 466 - 0x2322a4b0f18 + 100 = 0x2322a4b0f7c
Root exists for key 466 - 0x2322a4b0f18 + 100 = 0x2322a4b0f7c
address: 0x2322a4b0f18 + 100
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 4
Level: 0 - Key: 466 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 3
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 4
Level: 0 - Key: 466 < 34 :cursor-keys[ 1 ] 
Checking if larger than all other keys: 1 == 3
Level: 0 - Leaf: 0 Checking thru all keys of node: 2 < 4
Level: 0 - Key: 466 < 159 :cursor-keys[ 2 ] 
Checking if larger than all other keys: 2 == 3
Level: 0 - Leaf: 0 Checking thru all keys of node: 3 < 4
Level: 0 - Key: 466 < 1342 :cursor-keys[ 3 ] 
key 466 lesser than 1342
Cursor was: 0x232154457d0
Cursor: 0x232154475f0
Parent was: 0x232154457d0
Parent: 0x232154475f0
Cursor: 0x232154475f0
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 6
Level: 1 - Key: 466 < 227 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 6
Level: 1 - Key: 466 < 386 :cursor-keys[ 1 ] 
Checking if larger than all other keys: 1 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 2 < 6
Level: 1 - Key: 466 < 439 :cursor-keys[ 2 ] 
Checking if larger than all other keys: 2 == 5
Level: 1 - Leaf: 0 Checking thru all keys of node: 3 < 6
Level: 1 - Key: 466 < 817 :cursor-keys[ 3 ] 
key 466 lesser than 817
Cursor was: 0x232154475f0
Cursor: 0x232154471d0
Reached leaf node
Comparing: 7 < 8
Search left to right: 466 > 439 & 0 < 7
Search left to right: 466 > 442 & 1 < 7
Search left to right: 466 > 448 & 2 < 7
Search left to right: 466 > 451 & 3 < 7
Checking for duplicates 468 == 466
cursor->numKeys: 7
next: 0x23215446830 - 0
Shifting right: 7 > 6
Shifting right: 6 > 5
Shifting right: 5 > 4
Inserting key to node 4 : 466
cursor->numKeys was: 7
cursor->numKeys: 8
Inserted record tt0000208 at block address: 0x2322a4b0f18 -> 0x2322a4b0f7c

Writing record: tt0000209
blocksallocated: 20 curblocksizeused + sizeRequired = 140 > 200
offset: 120
curblocksizeused was: 120 + 20
curblocksizeused: 140
actualsizeused was: 3920 + 20
actualsizeused: 3940
recordAddress: 0x2322a4b0f18 - 120
diskaddress: 0x2322a4b0f18 - 120
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0f18 - 0x2322a4b0f90 -> 0x2322a4b0fa4 : 120 - 20
Inserting record: tt0000209 to bptree 
Inserting record 17 - 0x2322a4b0f18 + 120 = 0x2322a4b0f90
Root exists for key 17 - 0x2322a4b0f18 + 120 = 0x2322a4b0f90
address: 0x2322a4b0f18 + 120
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 4
Level: 0 - Key: 17 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 3
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 4
Level: 0 - Key: 17 < 34 :cursor-keys[ 1 ] 
key 17 lesser than 34
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 5
Level: 1 - Key: 17 < 9 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 4
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 5
Level: 1 - Key: 17 < 13 :cursor-keys[ 1 ] 
Checking if larger than all other keys: 1 == 4
Level: 1 - Leaf: 0 Checking thru all keys of node: 2 < 5
Level: 1 - Key: 17 < 16 :cursor-keys[ 2 ] 
Checking if larger than all other keys: 2 == 4
Level: 1 - Leaf: 0 Checking thru all keys of node: 3 < 5
Level: 1 - Key: 17 < 18 :cursor-keys[ 3 ] 
key 17 lesser than 18
Cursor was: 0x23215445430
Cursor: 0x23215446990
Reached leaf node
Comparing: 6 < 8
Checking for duplicates 18 == 17
cursor->numKeys: 6
next: 0x23215447330 - 0
Shifting right: 6 > 5
Shifting right: 5 > 4
Shifting right: 4 > 3
Shifting right: 3 > 2
Shifting right: 2 > 1
Shifting right: 1 > 0
Inserting key to node 0 : 17
cursor->numKeys was: 6
cursor->numKeys: 7
Inserted record tt0000209 at block address: 0x2322a4b0f18 -> 0x2322a4b0f90

Writing record: tt0000210
blocksallocated: 20 curblocksizeused + sizeRequired = 160 > 200
offset: 140
curblocksizeused was: 140 + 20
curblocksizeused: 160
actualsizeused was: 3940 + 20
actualsizeused: 3960
recordAddress: 0x2322a4b0f18 - 140
diskaddress: 0x2322a4b0f18 - 140
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0f18 - 0x2322a4b0fa4 -> 0x2322a4b0fb8 : 140 - 20
Inserting record: tt0000210 to bptree 
Inserting record 18 - 0x2322a4b0f18 + 140 = 0x2322a4b0fa4
Root exists for key 18 - 0x2322a4b0f18 + 140 = 0x2322a4b0fa4
address: 0x2322a4b0f18 + 140
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 4
Level: 0 - Key: 18 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 3
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 4
Level: 0 - Key: 18 < 34 :cursor-keys[ 1 ] 
key 18 lesser than 34
Cursor was: 0x232154457d0
Cursor: 0x23215445430
Parent was: 0x232154457d0
Parent: 0x23215445430
Cursor: 0x23215445430
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 5
Level: 1 - Key: 18 < 9 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 4
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 5
Level: 1 - Key: 18 < 13 :cursor-keys[ 1 ] 
Checking if larger than all other keys: 1 == 4
Level: 1 - Leaf: 0 Checking thru all keys of node: 2 < 5
Level: 1 - Key: 18 < 16 :cursor-keys[ 2 ] 
Checking if larger than all other keys: 2 == 4
Level: 1 - Leaf: 0 Checking thru all keys of node: 3 < 5
Level: 1 - Key: 18 < 18 :cursor-keys[ 3 ] 
Checking if larger than all other keys: 3 == 4
Level: 1 - Leaf: 0 Checking thru all keys of node: 4 < 5
Level: 1 - Key: 18 < 25 :cursor-keys[ 4 ] 
key 18 lesser than 25
Cursor was: 0x23215445430
Cursor: 0x23215447330
Reached leaf node
Comparing: 6 < 8
Checking for duplicates 19 == 18
cursor->numKeys: 6
next: 0x23215447cd0 - 0
Shifting right: 6 > 5
Shifting right: 5 > 4
Shifting right: 4 > 3
Shifting right: 3 > 2
Shifting right: 2 > 1
Shifting right: 1 > 0
Inserting key to node 0 : 18
cursor->numKeys was: 6
cursor->numKeys: 7
Inserted record tt0000210 at block address: 0x2322a4b0f18 -> 0x2322a4b0fa4

Writing record: tt0000211
blocksallocated: 20 curblocksizeused + sizeRequired = 180 > 200
offset: 160
curblocksizeused was: 160 + 20
curblocksizeused: 180
actualsizeused was: 3960 + 20
actualsizeused: 3980
recordAddress: 0x2322a4b0f18 - 160
diskaddress: 0x2322a4b0f18 - 160
Writing src loc: 0xb1181ff540 -> 0xb1181ff554 : 20
Writing dst loc: 0x2322a4b0f18 - 0x2322a4b0fb8 -> 0x2322a4b0fcc : 160 - 20
Inserting record: tt0000211 to bptree 
Inserting record 3332 - 0x2322a4b0f18 + 160 = 0x2322a4b0fb8
TEST
Root exists for key 3332 - 0x2322a4b0f18 + 160 = 0x2322a4b0fb8
address: 0x2322a4b0f18 + 160
Cursor: 0x232154457d0
Parent: 0
Started going to leaf node
Parent was: 0
Parent: 0x232154457d0
Cursor: 0x232154457d0
Checking thru all keys of node and determine left or right
Level: 0 - Leaf: 0 Checking thru all keys of node: 0 < 4
Level: 0 - Key: 3332 < 0 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 3
Level: 0 - Leaf: 0 Checking thru all keys of node: 1 < 4
Level: 0 - Key: 3332 < 34 :cursor-keys[ 1 ] 
Checking if larger than all other keys: 1 == 3
Level: 0 - Leaf: 0 Checking thru all keys of node: 2 < 4
Level: 0 - Key: 3332 < 159 :cursor-keys[ 2 ] 
Checking if larger than all other keys: 2 == 3
Level: 0 - Leaf: 0 Checking thru all keys of node: 3 < 4
Level: 0 - Key: 3332 < 1342 :cursor-keys[ 3 ] 
Checking if larger than all other keys: 3 == 3
Larger than all other keys in node going to last: 3 == 3
Cursor was: 0x232154457d0
Cursor: 0x23215446f10
Parent was: 0x232154457d0
Parent: 0x23215446f10
Cursor: 0x23215446f10
Checking thru all keys of node and determine left or right
Level: 1 - Leaf: 0 Checking thru all keys of node: 0 < 4
Level: 1 - Key: 3332 < 1807 :cursor-keys[ 0 ] 
Checking if larger than all other keys: 0 == 3
Level: 1 - Leaf: 0 Checking thru all keys of node: 1 < 4
Level: 1 - Key: 3332 < 2850 :cursor-keys[ 1 ] 
Checking if larger than all other keys: 1 == 3
Level: 1 - Leaf: 0 Checking thru all keys of node: 2 < 4
Level: 1 - Key: 3332 < 0 :cursor-keys[ 2 ] 
Checking if larger than all other keys: 2 == 3
Level: 1 - Leaf: 0 Checking thru all keys of node: 3 < 4
Level: 1 - Key: 3332 < 0 :cursor-keys[ 3 ] 
Checking if larger than all other keys: 3 == 3
Larger than all other keys in node going to last: 3 == 3
Cursor was: 0x23215446f10
Cursor: 0x2b00000012
